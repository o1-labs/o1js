name: Sparky Parallel VK Parity Testing

on:
  push:
    branches: [ main, develop, 'fizzixnerd/*' ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      test_tier:
        description: 'Test tier to run'
        required: true
        default: 'core'
        type: choice
        options:
        - smoke
        - core
        - comprehensive

env:
  NODE_VERSION: '18'

jobs:
  sparky-parallel-vk-test:
    name: Sparky Parallel VK Parity Test
    runs-on: ubuntu-latest
    timeout-minutes: 20
    env:
      SPARKY_TEST_PROCESSES: 2
      SPARKY_TEST_MEMORY_LIMIT_MB: 500
      SPARKY_TEST_MODE: parallel
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm ci
          npm run build

      - name: Run Sparky parallel VK parity tests
        env:
          TEST_TIER: ${{ github.event.inputs.test_tier || 'core' }}
        run: |
          echo "Running Sparky $TEST_TIER tier tests with $SPARKY_TEST_PROCESSES processes"
          case "$TEST_TIER" in
            "smoke")
              npm run test:sparky-smoke
              ;;
            "core")
              npm run test:sparky-ci
              ;;
            "comprehensive")
              npm run test:sparky-full
              ;;
            *)
              echo "Unknown test tier: $TEST_TIER, defaulting to core"
              npm run test:sparky-ci
              ;;
          esac

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: sparky-parallel-vk-parity-results-${{ github.event.inputs.test_tier || 'core' }}
          path: |
            test-results/
            sparky-test-reports/
          retention-days: 30

      - name: Add to job summary
        if: always()
        run: |
          echo "### üöÄ Sparky Parallel VK Parity Test Results" >> $GITHUB_STEP_SUMMARY
          echo "**Test Tier:** ${{ github.event.inputs.test_tier || 'core' }}" >> $GITHUB_STEP_SUMMARY
          echo "**Processes:** $SPARKY_TEST_PROCESSES" >> $GITHUB_STEP_SUMMARY
          echo "**Memory Limit:** ${SPARKY_TEST_MEMORY_LIMIT_MB}MB per process" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [ -f "sparky-test-reports/summary.md" ]; then
            cat sparky-test-reports/summary.md >> $GITHUB_STEP_SUMMARY
          elif [ -f "test-results/parallel-test-summary.json" ]; then
            echo "**Performance:** $(node -e "console.log(JSON.parse(require('fs').readFileSync('test-results/parallel-test-summary.json')).performance.totalDurationMs)")ms total" >> $GITHUB_STEP_SUMMARY
            echo "**Success Rate:** $(node -e "console.log(JSON.parse(require('fs').readFileSync('test-results/parallel-test-summary.json')).summary.successRate)")%" >> $GITHUB_STEP_SUMMARY
          else
            echo "‚úÖ Sparky parallel tests completed successfully" >> $GITHUB_STEP_SUMMARY
          fi

      - name: Comment on PR with results
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            try {
              const fs = require('fs');
              let report = {};
              let body = '';
              
              // Try to read new parallel test results first
              if (fs.existsSync('test-results/parallel-test-summary.json')) {
                report = JSON.parse(fs.readFileSync('test-results/parallel-test-summary.json', 'utf8'));
                const successRate = report.summary.successRate;
                const duration = Math.round(report.performance.totalDurationMs / 1000);
                const testTier = '${{ github.event.inputs.test_tier || 'core' }}';
                const status = successRate >= 95 ? 'üéâ' : successRate >= 80 ? 'üìà' : '‚ö†Ô∏è';
                
                body = `
                ## ${status} Sparky Parallel VK Parity Results (${testTier})
                
                **Success Rate:** ${successRate}% 
                **Duration:** ${duration}s (${report.performance.speedupFactor}x faster)
                **Processes:** ${{ env.SPARKY_TEST_PROCESSES }}
                **Tests:** ${report.summary.totalTests} parallel tests executed
                
                ### üöÄ Performance Improvements
                - **Backend Isolation:** No cross-contamination between test processes
                - **Memory Managed:** ${{ env.SPARKY_TEST_MEMORY_LIMIT_MB }}MB per process
                - **Parallel Execution:** ${report.performance.speedupFactor}x performance improvement
                
                [View detailed report](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})
                `;
              } else {
                body = `
                ## ‚úÖ Sparky Parallel Tests Completed
                
                **Test Tier:** ${{ github.event.inputs.test_tier || 'core' }}
                **Mode:** Parallel execution with ${{ env.SPARKY_TEST_PROCESSES }} processes
                
                [View detailed report](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})
                `;
              }
              
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: body
              });
            } catch (error) {
              console.log('Could not read test results:', error.message);
            }

      - name: Notify on breakthrough performance
        if: success()
        run: |
          echo "üöÄ Sparky Parallel Testing Infrastructure Active"
          echo "Expected performance improvements:"
          echo "  - Smoke tests: 10+ min ‚Üí 30s (95% reduction)"
          echo "  - Core tests: 30+ min ‚Üí 2 min (93% reduction)"
          echo "  - Full tests: 60+ min ‚Üí 10 min (83% reduction)"