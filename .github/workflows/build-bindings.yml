# Purpose: We want to build the o1js bindings in CI so that people in the
# community can change them without being scared of breaking things, or
# needing to do the complicated (without nix) build setup.

name: Build bindings

on:
  pull_request:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  check-npm-deps:
    if: github.event_name == 'pull_request'  # Runs only for PRs
    name: check npmDepsHash is correct
    runs-on: [sdk-self-hosted-linux-amd64-build-system]
    steps:
      - name: Set up Nix
        run: echo "PATH=$PATH:/nix/var/nix/profiles/default/bin" >> $GITHUB_ENV
      - name: Disable smudging
        run: echo "GIT_LFS_SKIP_SMUDGE=1" >> $GITHUB_ENV
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: fix npmDepsHash
        run: |
          set -Eeu
          ./pin.sh
          nix run o1js#update-npm-deps
          git restore flake.lock # prevents suggesting changes to the flake.lock
          git diff npmDepsHash
      - uses: Geometer1729/suggest-changes@main
        with:
          comment: please commit the npmDepsHash change
          event: REQUEST_CHANGES
          allow_new_files: true

  nix-build:
    name: build-bindings-ubuntu
    runs-on: [sdk-self-hosted-linux-amd64-build-system]
    steps:
      - name: Set up Nix
        run: echo "PATH=$PATH:/nix/var/nix/profiles/default/bin" >> $GITHUB_ENV
      - name: Disable smudging
        run: echo "GIT_LFS_SKIP_SMUDGE=1" >> $GITHUB_ENV
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Build the o1js bindings
        run: |
          set -Eeu
          ./pin.sh
          nix run o1js#generate-bindings --max-jobs 4
      - name: cache bindings
        uses: actions/cache@v4
        id: bindings-cache
        with:
          path: |
            src/bindings/compiled
            src/bindings/mina-transaction/gen
          key: bindings-${{ github.sha }}
          save-always: true

  # seperate job because the rest of ci has to wait on the above job
  upload-bindings:
    name: upload bindings artifact
    needs: nix-build
    runs-on: [sdk-self-hosted-linux-amd64-build-system]
    steps:
      - name: Set up Nix
        run: echo "PATH=$PATH:/nix/var/nix/profiles/default/bin" >> $GITHUB_ENV
      - name: Disable smudging
        run: echo "GIT_LFS_SKIP_SMUDGE=1" >> $GITHUB_ENV
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: generate tar
        run: |
          set -Eeu
          ./pin.sh
          nix build o1js#bindings-tar --out-link bindings.tar.gz
      - name: Upload bindings
        uses: actions/upload-artifact@v4
        with:
          name: bindings.tar.gz
          path: bindings.tar.gz
      - name: add build to gc-root if on main
        if: github.ref == 'refs/heads/main'
        run: |
          nix build o1js#o1js-bindings --out-link /home/app/actions-runner/nix-cache/main-bindings-gcroot
