name: Build and upload bindings
on:
  workflow_dispatch:
  workflow_call:

inputs:
  cache_id:
    required: true
  nar_secret:
    required: true
  gcp_secret:
    required: true

runs:
  using: "composite"
  steps:
    - name: Build
      uses: ./.github/actions/build
    - name: Build the o1js bindings
      if: steps.bindings-cache.outputs.cache-hit != 'true'
      env:
        AWS_ACCESS_KEY_ID: ${{ inputs.cache_id }}
        AWS_SECRET_ACCESS_KEY: ${{ inputs.gcp_secret }}
      shell: bash
      run: |
        set -Eeu
        ./pin.sh
        nix build o1js#bindings --accept-flake-config
        temp_key=$(mktemp)
        echo ${{ inputs.nar_secret }} > "$temp_key"
        nix store sign --key-file "$temp_key" --recursive ./result
        outs=$(nix-store --query --requisites --include-outputs $(nix path-info --derivation ./result))
        nix copy --to "s3://mina-nix-cache?endpoint=https://storage.googleapis.com" $outs
        rm "$temp_key"
    - name: generate tar
      shell: bash
      run: |
        set -Eeu
        ./pin.sh
        nix build o1js#bindings-tar --out-link bindings.tar.gz
    - name: Upload bindings
      uses: actions/upload-artifact@v4
      with:
        name: bindings.tar.gz
        path: bindings.tar.gz
