"use strict";(self.webpackChunkdocumentation_site=self.webpackChunkdocumentation_site||[]).push([[69985],{7731:(e,n,d)=>{d.r(n),d.d(n,{assets:()=>t,contentTitle:()=>i,default:()=>h,frontMatter:()=>a,metadata:()=>c,toc:()=>l});const c=JSON.parse('{"id":"api-reference/classes/AccountUpdateTree","title":"AccountUpdateTree","description":"Defined in1359","source":"@site/versioned_docs/version-2.4.0/api-reference/classes/AccountUpdateTree.mdx","sourceDirName":"api-reference/classes","slug":"/api-reference/classes/AccountUpdateTree","permalink":"/o1js/2.4.0/api-reference/classes/AccountUpdateTree","draft":false,"unlisted":false,"editUrl":"https://github.com/versioned_docs/version-2.4.0/api-reference/classes/AccountUpdateTree.mdx","tags":[],"version":"2.4.0","frontMatter":{},"sidebar":"docs","previous":{"title":"AccountUpdateForest","permalink":"/o1js/2.4.0/api-reference/classes/AccountUpdateForest"},"next":{"title":"AlmostForeignField","permalink":"/o1js/2.4.0/api-reference/classes/AlmostForeignField"}}');var s=d(74848),r=d(28453);const a={},i=void 0,t={},l=[{value:"Extends",id:"extends",level:2},{value:"Constructors",id:"constructors",level:2},{value:"new AccountUpdateTree()",id:"new-accountupdatetree",level:3},{value:"Parameters",id:"parameters",level:4},{value:"value",id:"value",level:5},{value:"accountUpdate",id:"accountupdate",level:6},{value:"children",id:"children",level:6},{value:"id",id:"id",level:6},{value:"Returns",id:"returns",level:4},{value:"Inherited from",id:"inherited-from",level:4},{value:"Properties",id:"properties",level:2},{value:"accountUpdate",id:"accountupdate-1",level:3},{value:"Inherited from",id:"inherited-from-1",level:4},{value:"children",id:"children-1",level:3},{value:"Inherited from",id:"inherited-from-2",level:4},{value:"id",id:"id-1",level:3},{value:"Inherited from",id:"inherited-from-3",level:4},{value:"_isStruct",id:"_isstruct",level:3},{value:"Inherited from",id:"inherited-from-4",level:4},{value:"check()",id:"check",level:3},{value:"Parameters",id:"parameters-1",level:4},{value:"value",id:"value-1",level:5},{value:"accountUpdate",id:"accountupdate-2",level:6},{value:"children",id:"children-2",level:6},{value:"id",id:"id-2",level:6},{value:"Returns",id:"returns-1",level:4},{value:"Inherited from",id:"inherited-from-5",level:4},{value:"fromValue()",id:"fromvalue",level:3},{value:"Parameters",id:"parameters-2",level:4},{value:"x",id:"x",level:5},{value:"Returns",id:"returns-2",level:4},{value:"accountUpdate",id:"accountupdate-3",level:5},{value:"children",id:"children-3",level:5},{value:"id",id:"id-3",level:5},{value:"Inherited from",id:"inherited-from-6",level:4},{value:"toAuxiliary()",id:"toauxiliary",level:3},{value:"Parameters",id:"parameters-3",level:4},{value:"value?",id:"value-2",level:5},{value:"accountUpdate",id:"accountupdate-4",level:6},{value:"children",id:"children-4",level:6},{value:"id",id:"id-4",level:6},{value:"Returns",id:"returns-3",level:4},{value:"Inherited from",id:"inherited-from-7",level:4},{value:"toCanonical()?",id:"tocanonical",level:3},{value:"Parameters",id:"parameters-4",level:4},{value:"x",id:"x-1",level:5},{value:"accountUpdate",id:"accountupdate-5",level:6},{value:"children",id:"children-5",level:6},{value:"id",id:"id-5",level:6},{value:"Returns",id:"returns-4",level:4},{value:"accountUpdate",id:"accountupdate-6",level:5},{value:"children",id:"children-6",level:5},{value:"id",id:"id-6",level:5},{value:"Inherited from",id:"inherited-from-8",level:4},{value:"toFields()",id:"tofields",level:3},{value:"Parameters",id:"parameters-5",level:4},{value:"value",id:"value-3",level:5},{value:"accountUpdate",id:"accountupdate-7",level:6},{value:"children",id:"children-7",level:6},{value:"id",id:"id-7",level:6},{value:"Returns",id:"returns-5",level:4},{value:"Inherited from",id:"inherited-from-9",level:4},{value:"toInput()",id:"toinput",level:3},{value:"Parameters",id:"parameters-6",level:4},{value:"x",id:"x-2",level:5},{value:"accountUpdate",id:"accountupdate-8",level:6},{value:"children",id:"children-8",level:6},{value:"id",id:"id-8",level:6},{value:"Returns",id:"returns-6",level:4},{value:"fields?",id:"fields",level:5},{value:"packed?",id:"packed",level:5},{value:"Inherited from",id:"inherited-from-10",level:4},{value:"toValue()",id:"tovalue",level:3},{value:"Parameters",id:"parameters-7",level:4},{value:"x",id:"x-3",level:5},{value:"accountUpdate",id:"accountupdate-9",level:6},{value:"children",id:"children-9",level:6},{value:"id",id:"id-9",level:6},{value:"Returns",id:"returns-7",level:4},{value:"Inherited from",id:"inherited-from-11",level:4},{value:"Methods",id:"methods",level:2},{value:"approve()",id:"approve",level:3},{value:"Parameters",id:"parameters-8",level:4},{value:"update",id:"update",level:5},{value:"hash?",id:"hash",level:5},{value:"Returns",id:"returns-8",level:4},{value:"empty()",id:"empty",level:3},{value:"Returns",id:"returns-9",level:4},{value:"Overrides",id:"overrides",level:4},{value:"from()",id:"from",level:3},{value:"Parameters",id:"parameters-9",level:4},{value:"update",id:"update-1",level:5},{value:"hash?",id:"hash-1",level:5},{value:"Returns",id:"returns-10",level:4},{value:"fromFields()",id:"fromfields",level:3},{value:"Parameters",id:"parameters-10",level:4},{value:"fields",id:"fields-1",level:5},{value:"aux",id:"aux",level:5},{value:"Returns",id:"returns-11",level:4},{value:"Overrides",id:"overrides-1",level:4},{value:"sizeInFields()",id:"sizeinfields",level:3},{value:"Returns",id:"returns-12",level:4},{value:"Inherited from",id:"inherited-from-12",level:4}];function o(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",h4:"h4",h5:"h5",h6:"h6",hr:"hr",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.p,{children:["Defined in: ",(0,s.jsx)(n.a,{href:"https://github.com/o1-labs/o1js/blob/df1ff77af12d7cbbed4a6167f02815fad4f0dceb/src/lib/mina/v1/account-update.ts#L1359",children:"lib/mina/v1/account-update.ts:1359"})]}),"\n",(0,s.jsx)(n.p,{children:"Class which represents a tree of account updates,\nin a compressed way which allows iterating and selectively witnessing the account updates."}),"\n",(0,s.jsx)(n.p,{children:"The (recursive) type signature is:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"type AccountUpdateTree = {\n  accountUpdate: Hashed<AccountUpdate>;\n  children: AccountUpdateForest;\n};\ntype AccountUpdateForest = MerkleList<AccountUpdateTree>;\n"})}),"\n",(0,s.jsx)(n.h2,{id:"extends",children:"Extends"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["{\n",(0,s.jsx)(n.code,{children:"accountUpdate"}),": ",(0,s.jsx)(n.a,{href:"/o1js/2.4.0/api-reference/classes/Hashed",children:(0,s.jsx)(n.code,{children:"Hashed"})}),"<",(0,s.jsx)(n.a,{href:"/o1js/2.4.0/api-reference/classes/AccountUpdate",children:(0,s.jsx)(n.code,{children:"AccountUpdate"})}),">;\n",(0,s.jsx)(n.code,{children:"children"}),": ",(0,s.jsx)(n.a,{href:"/o1js/2.4.0/api-reference/classes/AccountUpdateForest",children:(0,s.jsx)(n.code,{children:"AccountUpdateForest"})}),";\n",(0,s.jsx)(n.code,{children:"id"}),": ",(0,s.jsx)(n.code,{children:"number"}),";\n}"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"constructors",children:"Constructors"}),"\n",(0,s.jsx)(n.h3,{id:"new-accountupdatetree",children:"new AccountUpdateTree()"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"new AccountUpdateTree(value: {\n  accountUpdate: Hashed<AccountUpdate>;\n  children: AccountUpdateForest;\n  id: number;\n }): AccountUpdateTree\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Defined in: ",(0,s.jsx)(n.a,{href:"https://github.com/o1-labs/o1js/blob/df1ff77af12d7cbbed4a6167f02815fad4f0dceb/src/lib/provable/types/struct.ts#L265",children:"lib/provable/types/struct.ts:265"})]}),"\n",(0,s.jsx)(n.h4,{id:"parameters",children:"Parameters"}),"\n",(0,s.jsx)(n.h5,{id:"value",children:"value"}),"\n",(0,s.jsx)(n.h6,{id:"accountupdate",children:"accountUpdate"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"/o1js/2.4.0/api-reference/classes/Hashed",children:(0,s.jsx)(n.code,{children:"Hashed"})}),"<",(0,s.jsx)(n.a,{href:"/o1js/2.4.0/api-reference/classes/AccountUpdate",children:(0,s.jsx)(n.code,{children:"AccountUpdate"})}),"> = ",(0,s.jsx)(n.code,{children:"HashedAccountUpdate"})]}),"\n",(0,s.jsx)(n.h6,{id:"children",children:"children"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"/o1js/2.4.0/api-reference/classes/AccountUpdateForest",children:(0,s.jsx)(n.code,{children:"AccountUpdateForest"})})," = ",(0,s.jsx)(n.code,{children:"AccountUpdateForest"})]}),"\n",(0,s.jsx)(n.h6,{id:"id",children:"id"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"number"})," = ",(0,s.jsx)(n.code,{children:"RandomId"})]}),"\n",(0,s.jsx)(n.h4,{id:"returns",children:"Returns"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"/o1js/2.4.0/api-reference/classes/AccountUpdateTree",children:(0,s.jsx)(n.code,{children:"AccountUpdateTree"})})}),"\n",(0,s.jsx)(n.h4,{id:"inherited-from",children:"Inherited from"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"StructNoJson({\n  id: RandomId,\n  accountUpdate: HashedAccountUpdate,\n  children: AccountUpdateForest,\n}).constructor\n"})}),"\n",(0,s.jsx)(n.h2,{id:"properties",children:"Properties"}),"\n",(0,s.jsx)(n.h3,{id:"accountupdate-1",children:"accountUpdate"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"accountUpdate: Hashed<AccountUpdate> = HashedAccountUpdate;\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Defined in: ",(0,s.jsx)(n.a,{href:"https://github.com/o1-labs/o1js/blob/df1ff77af12d7cbbed4a6167f02815fad4f0dceb/src/lib/mina/v1/account-update.ts#L1361",children:"lib/mina/v1/account-update.ts:1361"})]}),"\n",(0,s.jsx)(n.h4,{id:"inherited-from-1",children:"Inherited from"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"StructNoJson({\n  id: RandomId,\n  accountUpdate: HashedAccountUpdate,\n  children: AccountUpdateForest,\n}).accountUpdate\n"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"children-1",children:"children"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"children: AccountUpdateForest = AccountUpdateForest;\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Defined in: ",(0,s.jsx)(n.a,{href:"https://github.com/o1-labs/o1js/blob/df1ff77af12d7cbbed4a6167f02815fad4f0dceb/src/lib/mina/v1/account-update.ts#L1362",children:"lib/mina/v1/account-update.ts:1362"})]}),"\n",(0,s.jsx)(n.h4,{id:"inherited-from-2",children:"Inherited from"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"StructNoJson({\n  id: RandomId,\n  accountUpdate: HashedAccountUpdate,\n  children: AccountUpdateForest,\n}).children\n"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"id-1",children:"id"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"id: number = RandomId;\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Defined in: ",(0,s.jsx)(n.a,{href:"https://github.com/o1-labs/o1js/blob/df1ff77af12d7cbbed4a6167f02815fad4f0dceb/src/lib/mina/v1/account-update.ts#L1360",children:"lib/mina/v1/account-update.ts:1360"})]}),"\n",(0,s.jsx)(n.h4,{id:"inherited-from-3",children:"Inherited from"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"StructNoJson({\n  id: RandomId,\n  accountUpdate: HashedAccountUpdate,\n  children: AccountUpdateForest,\n}).id\n"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"_isstruct",children:"_isStruct"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"static _isStruct: true;\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Defined in: ",(0,s.jsx)(n.a,{href:"https://github.com/o1-labs/o1js/blob/df1ff77af12d7cbbed4a6167f02815fad4f0dceb/src/lib/provable/types/struct.ts#L265",children:"lib/provable/types/struct.ts:265"})]}),"\n",(0,s.jsx)(n.h4,{id:"inherited-from-4",children:"Inherited from"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"StructNoJson({\n  id: RandomId,\n  accountUpdate: HashedAccountUpdate,\n  children: AccountUpdateForest,\n})._isStruct\n"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"check",children:"check()"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"static check: (value: {\n  accountUpdate: Hashed<AccountUpdate>;\n  children: AccountUpdateForest;\n  id: number;\n }) => void;\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Defined in: ",(0,s.jsx)(n.a,{href:"https://github.com/o1-labs/o1js/blob/df1ff77af12d7cbbed4a6167f02815fad4f0dceb/src/lib/provable/types/provable-intf.ts#L76",children:"lib/provable/types/provable-intf.ts:76"})]}),"\n",(0,s.jsxs)(n.p,{children:["Add assertions to the proof to check if ",(0,s.jsx)(n.code,{children:"value"})," is a valid member of type ",(0,s.jsx)(n.code,{children:"T"}),".\nThis function does not return anything, instead it creates any number of assertions to prove that ",(0,s.jsx)(n.code,{children:"value"})," is a valid member of the type ",(0,s.jsx)(n.code,{children:"T"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["For instance, calling check function on the type ",(0,s.jsx)(n.a,{href:"/o1js/2.4.0/api-reference/classes/Bool",children:"Bool"})," asserts that the value of the element is either 1 or 0."]}),"\n",(0,s.jsx)(n.h4,{id:"parameters-1",children:"Parameters"}),"\n",(0,s.jsx)(n.h5,{id:"value-1",children:"value"}),"\n",(0,s.jsxs)(n.p,{children:["the element of type ",(0,s.jsx)(n.code,{children:"T"})," to put assertions on."]}),"\n",(0,s.jsx)(n.h6,{id:"accountupdate-2",children:"accountUpdate"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"/o1js/2.4.0/api-reference/classes/Hashed",children:(0,s.jsx)(n.code,{children:"Hashed"})}),"<",(0,s.jsx)(n.a,{href:"/o1js/2.4.0/api-reference/classes/AccountUpdate",children:(0,s.jsx)(n.code,{children:"AccountUpdate"})}),"> = ",(0,s.jsx)(n.code,{children:"HashedAccountUpdate"})]}),"\n",(0,s.jsx)(n.h6,{id:"children-2",children:"children"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"/o1js/2.4.0/api-reference/classes/AccountUpdateForest",children:(0,s.jsx)(n.code,{children:"AccountUpdateForest"})})," = ",(0,s.jsx)(n.code,{children:"AccountUpdateForest"})]}),"\n",(0,s.jsx)(n.h6,{id:"id-2",children:"id"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"number"})," = ",(0,s.jsx)(n.code,{children:"RandomId"})]}),"\n",(0,s.jsx)(n.h4,{id:"returns-1",children:"Returns"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"void"})}),"\n",(0,s.jsx)(n.h4,{id:"inherited-from-5",children:"Inherited from"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"StructNoJson({\n  id: RandomId,\n  accountUpdate: HashedAccountUpdate,\n  children: AccountUpdateForest,\n}).check\n"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"fromvalue",children:"fromValue()"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"static fromValue: (x: any) => {\n  accountUpdate: Hashed<AccountUpdate>;\n  children: AccountUpdateForest;\n  id: number;\n};\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Defined in: ",(0,s.jsx)(n.a,{href:"https://github.com/o1-labs/o1js/blob/df1ff77af12d7cbbed4a6167f02815fad4f0dceb/src/lib/provable/types/provable-intf.ts#L86",children:"lib/provable/types/provable-intf.ts:86"})]}),"\n",(0,s.jsx)(n.p,{children:"Convert provable type from a normal JS type."}),"\n",(0,s.jsx)(n.h4,{id:"parameters-2",children:"Parameters"}),"\n",(0,s.jsx)(n.h5,{id:"x",children:"x"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"any"})}),"\n",(0,s.jsx)(n.h4,{id:"returns-2",children:"Returns"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"{\n  accountUpdate: Hashed<AccountUpdate>;\n  children: AccountUpdateForest;\n  id: number;\n}\n"})}),"\n",(0,s.jsx)(n.h5,{id:"accountupdate-3",children:"accountUpdate"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"accountUpdate: Hashed<AccountUpdate> = HashedAccountUpdate;\n"})}),"\n",(0,s.jsx)(n.h5,{id:"children-3",children:"children"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"children: AccountUpdateForest = AccountUpdateForest;\n"})}),"\n",(0,s.jsx)(n.h5,{id:"id-3",children:"id"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"id: number = RandomId;\n"})}),"\n",(0,s.jsx)(n.h4,{id:"inherited-from-6",children:"Inherited from"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"StructNoJson({\n  id: RandomId,\n  accountUpdate: HashedAccountUpdate,\n  children: AccountUpdateForest,\n}).fromValue\n"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"toauxiliary",children:"toAuxiliary()"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"static toAuxiliary: (value?: {\n  accountUpdate: Hashed<AccountUpdate>;\n  children: AccountUpdateForest;\n  id: number;\n }) => any[];\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Defined in: ",(0,s.jsx)(n.a,{href:"https://github.com/o1-labs/o1js/blob/df1ff77af12d7cbbed4a6167f02815fad4f0dceb/src/lib/provable/types/provable-intf.ts#L47",children:"lib/provable/types/provable-intf.ts:47"})]}),"\n",(0,s.jsxs)(n.p,{children:["A function that takes ",(0,s.jsx)(n.code,{children:"value"})," (optional), an element of type ",(0,s.jsx)(n.code,{children:"T"}),', as argument and\nreturns an array of any type that make up the "auxiliary" (non-provable) data of ',(0,s.jsx)(n.code,{children:"value"}),"."]}),"\n",(0,s.jsx)(n.h4,{id:"parameters-3",children:"Parameters"}),"\n",(0,s.jsx)(n.h5,{id:"value-2",children:"value?"}),"\n",(0,s.jsxs)(n.p,{children:["the element of type ",(0,s.jsx)(n.code,{children:"T"})," to generate the auxiliary data array from, optional.\nIf not provided, a default value for auxiliary data is returned."]}),"\n",(0,s.jsx)(n.h6,{id:"accountupdate-4",children:"accountUpdate"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"/o1js/2.4.0/api-reference/classes/Hashed",children:(0,s.jsx)(n.code,{children:"Hashed"})}),"<",(0,s.jsx)(n.a,{href:"/o1js/2.4.0/api-reference/classes/AccountUpdate",children:(0,s.jsx)(n.code,{children:"AccountUpdate"})}),"> = ",(0,s.jsx)(n.code,{children:"HashedAccountUpdate"})]}),"\n",(0,s.jsx)(n.h6,{id:"children-4",children:"children"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"/o1js/2.4.0/api-reference/classes/AccountUpdateForest",children:(0,s.jsx)(n.code,{children:"AccountUpdateForest"})})," = ",(0,s.jsx)(n.code,{children:"AccountUpdateForest"})]}),"\n",(0,s.jsx)(n.h6,{id:"id-4",children:"id"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"number"})," = ",(0,s.jsx)(n.code,{children:"RandomId"})]}),"\n",(0,s.jsx)(n.h4,{id:"returns-3",children:"Returns"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"any"}),"[]"]}),"\n",(0,s.jsxs)(n.p,{children:["An array of any type describing how this ",(0,s.jsx)(n.code,{children:"T"}),' element is made up of "auxiliary" (non-provable) data.']}),"\n",(0,s.jsx)(n.h4,{id:"inherited-from-7",children:"Inherited from"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"StructNoJson({\n  id: RandomId,\n  accountUpdate: HashedAccountUpdate,\n  children: AccountUpdateForest,\n}).toAuxiliary\n"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"tocanonical",children:"toCanonical()?"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"static optional toCanonical: (x: {\n  accountUpdate: Hashed<AccountUpdate>;\n  children: AccountUpdateForest;\n  id: number;\n }) => {\n  accountUpdate: Hashed<AccountUpdate>;\n  children: AccountUpdateForest;\n  id: number;\n};\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Defined in: ",(0,s.jsx)(n.a,{href:"https://github.com/o1-labs/o1js/blob/df1ff77af12d7cbbed4a6167f02815fad4f0dceb/src/lib/provable/types/provable-intf.ts#L104",children:"lib/provable/types/provable-intf.ts:104"})]}),"\n",(0,s.jsx)(n.p,{children:"Optional method which transforms a provable type into its canonical representation."}),"\n",(0,s.jsx)(n.p,{children:"This is needed for types that have multiple representations of the same underlying value,\nand might even not have perfect completeness for some of those representations."}),"\n",(0,s.jsxs)(n.p,{children:["An example is the ",(0,s.jsx)(n.code,{children:"ForeignField"})," class, which allows non-native field elements to exist in unreduced form.\nThe unreduced form is not perfectly complete, for example, addition of two unreduced field elements can cause a prover error."]}),"\n",(0,s.jsxs)(n.p,{children:["Specific protocols need to be able to protect themselves against incomplete operations at all costs.\nFor example, when using actions and reducer, the reducer must be able to produce a proof regardless of the input action.\n",(0,s.jsx)(n.code,{children:"toCanonical()"})," converts any input into a safe form and enables us to handle cases like this generically."]}),"\n",(0,s.jsxs)(n.p,{children:["Note: For most types, this method is the identity function.\nThe identity function will also be used when the ",(0,s.jsx)(n.code,{children:"toCanonical()"})," is not present on a type."]}),"\n",(0,s.jsx)(n.h4,{id:"parameters-4",children:"Parameters"}),"\n",(0,s.jsx)(n.h5,{id:"x-1",children:"x"}),"\n",(0,s.jsx)(n.h6,{id:"accountupdate-5",children:"accountUpdate"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"/o1js/2.4.0/api-reference/classes/Hashed",children:(0,s.jsx)(n.code,{children:"Hashed"})}),"<",(0,s.jsx)(n.a,{href:"/o1js/2.4.0/api-reference/classes/AccountUpdate",children:(0,s.jsx)(n.code,{children:"AccountUpdate"})}),"> = ",(0,s.jsx)(n.code,{children:"HashedAccountUpdate"})]}),"\n",(0,s.jsx)(n.h6,{id:"children-5",children:"children"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"/o1js/2.4.0/api-reference/classes/AccountUpdateForest",children:(0,s.jsx)(n.code,{children:"AccountUpdateForest"})})," = ",(0,s.jsx)(n.code,{children:"AccountUpdateForest"})]}),"\n",(0,s.jsx)(n.h6,{id:"id-5",children:"id"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"number"})," = ",(0,s.jsx)(n.code,{children:"RandomId"})]}),"\n",(0,s.jsx)(n.h4,{id:"returns-4",children:"Returns"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"{\n  accountUpdate: Hashed<AccountUpdate>;\n  children: AccountUpdateForest;\n  id: number;\n}\n"})}),"\n",(0,s.jsx)(n.h5,{id:"accountupdate-6",children:"accountUpdate"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"accountUpdate: Hashed<AccountUpdate> = HashedAccountUpdate;\n"})}),"\n",(0,s.jsx)(n.h5,{id:"children-6",children:"children"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"children: AccountUpdateForest = AccountUpdateForest;\n"})}),"\n",(0,s.jsx)(n.h5,{id:"id-6",children:"id"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"id: number = RandomId;\n"})}),"\n",(0,s.jsx)(n.h4,{id:"inherited-from-8",children:"Inherited from"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"StructNoJson({\n  id: RandomId,\n  accountUpdate: HashedAccountUpdate,\n  children: AccountUpdateForest,\n}).toCanonical\n"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"tofields",children:"toFields()"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"static toFields: (value: {\n  accountUpdate: Hashed<AccountUpdate>;\n  children: AccountUpdateForest;\n  id: number;\n }) => Field[];\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Defined in: ",(0,s.jsx)(n.a,{href:"https://github.com/o1-labs/o1js/blob/df1ff77af12d7cbbed4a6167f02815fad4f0dceb/src/lib/provable/types/provable-intf.ts#L36",children:"lib/provable/types/provable-intf.ts:36"})]}),"\n",(0,s.jsxs)(n.p,{children:["A function that takes ",(0,s.jsx)(n.code,{children:"value"}),", an element of type ",(0,s.jsx)(n.code,{children:"T"}),", as argument and returns\nan array of ",(0,s.jsx)(n.a,{href:"/o1js/2.4.0/api-reference/classes/Field",children:"Field"})," elements that make up the provable data of ",(0,s.jsx)(n.code,{children:"value"}),"."]}),"\n",(0,s.jsx)(n.h4,{id:"parameters-5",children:"Parameters"}),"\n",(0,s.jsx)(n.h5,{id:"value-3",children:"value"}),"\n",(0,s.jsxs)(n.p,{children:["the element of type ",(0,s.jsx)(n.code,{children:"T"})," to generate the ",(0,s.jsx)(n.a,{href:"/o1js/2.4.0/api-reference/classes/Field",children:"Field"})," array from."]}),"\n",(0,s.jsx)(n.h6,{id:"accountupdate-7",children:"accountUpdate"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"/o1js/2.4.0/api-reference/classes/Hashed",children:(0,s.jsx)(n.code,{children:"Hashed"})}),"<",(0,s.jsx)(n.a,{href:"/o1js/2.4.0/api-reference/classes/AccountUpdate",children:(0,s.jsx)(n.code,{children:"AccountUpdate"})}),"> = ",(0,s.jsx)(n.code,{children:"HashedAccountUpdate"})]}),"\n",(0,s.jsx)(n.h6,{id:"children-7",children:"children"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"/o1js/2.4.0/api-reference/classes/AccountUpdateForest",children:(0,s.jsx)(n.code,{children:"AccountUpdateForest"})})," = ",(0,s.jsx)(n.code,{children:"AccountUpdateForest"})]}),"\n",(0,s.jsx)(n.h6,{id:"id-7",children:"id"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"number"})," = ",(0,s.jsx)(n.code,{children:"RandomId"})]}),"\n",(0,s.jsx)(n.h4,{id:"returns-5",children:"Returns"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"/o1js/2.4.0/api-reference/classes/Field",children:(0,s.jsx)(n.code,{children:"Field"})}),"[]"]}),"\n",(0,s.jsxs)(n.p,{children:["A ",(0,s.jsx)(n.a,{href:"/o1js/2.4.0/api-reference/classes/Field",children:"Field"})," array describing how this ",(0,s.jsx)(n.code,{children:"T"})," element is made up of ",(0,s.jsx)(n.a,{href:"/o1js/2.4.0/api-reference/classes/Field",children:"Field"})," elements."]}),"\n",(0,s.jsx)(n.h4,{id:"inherited-from-9",children:"Inherited from"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"StructNoJson({\n  id: RandomId,\n  accountUpdate: HashedAccountUpdate,\n  children: AccountUpdateForest,\n}).toFields\n"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"toinput",children:"toInput()"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"static toInput: (x: {\n  accountUpdate: Hashed<AccountUpdate>;\n  children: AccountUpdateForest;\n  id: number;\n }) => {\n  fields: Field[];\n  packed: [Field, number][];\n};\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Defined in: ",(0,s.jsx)(n.a,{href:"https://github.com/o1-labs/o1js/blob/df1ff77af12d7cbbed4a6167f02815fad4f0dceb/src/lib/provable/types/struct.ts#L268",children:"lib/provable/types/struct.ts:268"})]}),"\n",(0,s.jsx)(n.h4,{id:"parameters-6",children:"Parameters"}),"\n",(0,s.jsx)(n.h5,{id:"x-2",children:"x"}),"\n",(0,s.jsx)(n.h6,{id:"accountupdate-8",children:"accountUpdate"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"/o1js/2.4.0/api-reference/classes/Hashed",children:(0,s.jsx)(n.code,{children:"Hashed"})}),"<",(0,s.jsx)(n.a,{href:"/o1js/2.4.0/api-reference/classes/AccountUpdate",children:(0,s.jsx)(n.code,{children:"AccountUpdate"})}),"> = ",(0,s.jsx)(n.code,{children:"HashedAccountUpdate"})]}),"\n",(0,s.jsx)(n.h6,{id:"children-8",children:"children"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"/o1js/2.4.0/api-reference/classes/AccountUpdateForest",children:(0,s.jsx)(n.code,{children:"AccountUpdateForest"})})," = ",(0,s.jsx)(n.code,{children:"AccountUpdateForest"})]}),"\n",(0,s.jsx)(n.h6,{id:"id-8",children:"id"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"number"})," = ",(0,s.jsx)(n.code,{children:"RandomId"})]}),"\n",(0,s.jsx)(n.h4,{id:"returns-6",children:"Returns"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"{\n  fields: Field[];\n  packed: [Field, number][];\n}\n"})}),"\n",(0,s.jsx)(n.h5,{id:"fields",children:"fields?"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"optional fields: Field[];\n"})}),"\n",(0,s.jsx)(n.h5,{id:"packed",children:"packed?"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"optional packed: [Field, number][];\n"})}),"\n",(0,s.jsx)(n.h4,{id:"inherited-from-10",children:"Inherited from"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"StructNoJson({\n  id: RandomId,\n  accountUpdate: HashedAccountUpdate,\n  children: AccountUpdateForest,\n}).toInput\n"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"tovalue",children:"toValue()"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"static toValue: (x: {\n  accountUpdate: Hashed<AccountUpdate>;\n  children: AccountUpdateForest;\n  id: number;\n }) => any;\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Defined in: ",(0,s.jsx)(n.a,{href:"https://github.com/o1-labs/o1js/blob/df1ff77af12d7cbbed4a6167f02815fad4f0dceb/src/lib/provable/types/provable-intf.ts#L81",children:"lib/provable/types/provable-intf.ts:81"})]}),"\n",(0,s.jsx)(n.p,{children:"Convert provable type to a normal JS type."}),"\n",(0,s.jsx)(n.h4,{id:"parameters-7",children:"Parameters"}),"\n",(0,s.jsx)(n.h5,{id:"x-3",children:"x"}),"\n",(0,s.jsx)(n.h6,{id:"accountupdate-9",children:"accountUpdate"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"/o1js/2.4.0/api-reference/classes/Hashed",children:(0,s.jsx)(n.code,{children:"Hashed"})}),"<",(0,s.jsx)(n.a,{href:"/o1js/2.4.0/api-reference/classes/AccountUpdate",children:(0,s.jsx)(n.code,{children:"AccountUpdate"})}),"> = ",(0,s.jsx)(n.code,{children:"HashedAccountUpdate"})]}),"\n",(0,s.jsx)(n.h6,{id:"children-9",children:"children"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"/o1js/2.4.0/api-reference/classes/AccountUpdateForest",children:(0,s.jsx)(n.code,{children:"AccountUpdateForest"})})," = ",(0,s.jsx)(n.code,{children:"AccountUpdateForest"})]}),"\n",(0,s.jsx)(n.h6,{id:"id-9",children:"id"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"number"})," = ",(0,s.jsx)(n.code,{children:"RandomId"})]}),"\n",(0,s.jsx)(n.h4,{id:"returns-7",children:"Returns"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"any"})}),"\n",(0,s.jsx)(n.h4,{id:"inherited-from-11",children:"Inherited from"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"StructNoJson({\n  id: RandomId,\n  accountUpdate: HashedAccountUpdate,\n  children: AccountUpdateForest,\n}).toValue\n"})}),"\n",(0,s.jsx)(n.h2,{id:"methods",children:"Methods"}),"\n",(0,s.jsx)(n.h3,{id:"approve",children:"approve()"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"approve(update: \n  | AccountUpdate\n  | AccountUpdateTree, hash?: Field): void\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Defined in: ",(0,s.jsx)(n.a,{href:"https://github.com/o1-labs/o1js/blob/df1ff77af12d7cbbed4a6167f02815fad4f0dceb/src/lib/mina/v1/account-update.ts#L1381",children:"lib/mina/v1/account-update.ts:1381"})]}),"\n",(0,s.jsxs)(n.p,{children:["Add an ",(0,s.jsx)(n.a,{href:"/o1js/2.4.0/api-reference/classes/AccountUpdate",children:"AccountUpdate"})," or ",(0,s.jsx)(n.a,{href:"/o1js/2.4.0/api-reference/classes/AccountUpdateTree",children:"AccountUpdateTree"})," to the children of this tree's root."]}),"\n",(0,s.jsxs)(n.p,{children:["See ",(0,s.jsx)(n.a,{href:"/o1js/2.4.0/api-reference/classes/AccountUpdate#approve",children:"AccountUpdate.approve"}),"."]}),"\n",(0,s.jsx)(n.h4,{id:"parameters-8",children:"Parameters"}),"\n",(0,s.jsx)(n.h5,{id:"update",children:"update"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"/o1js/2.4.0/api-reference/classes/AccountUpdate",children:(0,s.jsx)(n.code,{children:"AccountUpdate"})})," | ",(0,s.jsx)(n.a,{href:"/o1js/2.4.0/api-reference/classes/AccountUpdateTree",children:(0,s.jsx)(n.code,{children:"AccountUpdateTree"})})]}),"\n",(0,s.jsx)(n.h5,{id:"hash",children:"hash?"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"/o1js/2.4.0/api-reference/classes/Field",children:(0,s.jsx)(n.code,{children:"Field"})})}),"\n",(0,s.jsx)(n.h4,{id:"returns-8",children:"Returns"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"void"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"empty",children:"empty()"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"static empty(): AccountUpdateTree\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Defined in: ",(0,s.jsx)(n.a,{href:"https://github.com/o1-labs/o1js/blob/df1ff77af12d7cbbed4a6167f02815fad4f0dceb/src/lib/mina/v1/account-update.ts#L1394",children:"lib/mina/v1/account-update.ts:1394"})]}),"\n",(0,s.jsx)(n.h4,{id:"returns-9",children:"Returns"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"/o1js/2.4.0/api-reference/classes/AccountUpdateTree",children:(0,s.jsx)(n.code,{children:"AccountUpdateTree"})})}),"\n",(0,s.jsx)(n.h4,{id:"overrides",children:"Overrides"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"StructNoJson({\n  id: RandomId,\n  accountUpdate: HashedAccountUpdate,\n  children: AccountUpdateForest,\n}).empty\n"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"from",children:"from()"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"static from(update: \n  | AccountUpdate\n  | AccountUpdateTree, hash?: Field): AccountUpdateTree\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Defined in: ",(0,s.jsx)(n.a,{href:"https://github.com/o1-labs/o1js/blob/df1ff77af12d7cbbed4a6167f02815fad4f0dceb/src/lib/mina/v1/account-update.ts#L1367",children:"lib/mina/v1/account-update.ts:1367"})]}),"\n",(0,s.jsx)(n.p,{children:"Create a tree of account updates which only consists of a root."}),"\n",(0,s.jsx)(n.h4,{id:"parameters-9",children:"Parameters"}),"\n",(0,s.jsx)(n.h5,{id:"update-1",children:"update"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"/o1js/2.4.0/api-reference/classes/AccountUpdate",children:(0,s.jsx)(n.code,{children:"AccountUpdate"})})," | ",(0,s.jsx)(n.a,{href:"/o1js/2.4.0/api-reference/classes/AccountUpdateTree",children:(0,s.jsx)(n.code,{children:"AccountUpdateTree"})})]}),"\n",(0,s.jsx)(n.h5,{id:"hash-1",children:"hash?"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"/o1js/2.4.0/api-reference/classes/Field",children:(0,s.jsx)(n.code,{children:"Field"})})}),"\n",(0,s.jsx)(n.h4,{id:"returns-10",children:"Returns"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"/o1js/2.4.0/api-reference/classes/AccountUpdateTree",children:(0,s.jsx)(n.code,{children:"AccountUpdateTree"})})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"fromfields",children:"fromFields()"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"static fromFields(fields: Field[], aux: any): AccountUpdateTree\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Defined in: ",(0,s.jsx)(n.a,{href:"https://github.com/o1-labs/o1js/blob/df1ff77af12d7cbbed4a6167f02815fad4f0dceb/src/lib/mina/v1/account-update.ts#L1391",children:"lib/mina/v1/account-update.ts:1391"})]}),"\n",(0,s.jsx)(n.h4,{id:"parameters-10",children:"Parameters"}),"\n",(0,s.jsx)(n.h5,{id:"fields-1",children:"fields"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"/o1js/2.4.0/api-reference/classes/Field",children:(0,s.jsx)(n.code,{children:"Field"})}),"[]"]}),"\n",(0,s.jsx)(n.h5,{id:"aux",children:"aux"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"any"})}),"\n",(0,s.jsx)(n.h4,{id:"returns-11",children:"Returns"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"/o1js/2.4.0/api-reference/classes/AccountUpdateTree",children:(0,s.jsx)(n.code,{children:"AccountUpdateTree"})})}),"\n",(0,s.jsx)(n.h4,{id:"overrides-1",children:"Overrides"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"StructNoJson({\n  id: RandomId,\n  accountUpdate: HashedAccountUpdate,\n  children: AccountUpdateForest,\n}).fromFields\n"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"sizeinfields",children:"sizeInFields()"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"static sizeInFields(): number\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Defined in: ",(0,s.jsx)(n.a,{href:"https://github.com/o1-labs/o1js/blob/df1ff77af12d7cbbed4a6167f02815fad4f0dceb/src/lib/provable/types/provable-intf.ts#L66",children:"lib/provable/types/provable-intf.ts:66"})]}),"\n",(0,s.jsxs)(n.p,{children:["Return the size of the ",(0,s.jsx)(n.code,{children:"T"})," type in terms of ",(0,s.jsx)(n.a,{href:"/o1js/2.4.0/api-reference/classes/Field",children:"Field"})," type, as ",(0,s.jsx)(n.a,{href:"/o1js/2.4.0/api-reference/classes/Field",children:"Field"})," is the primitive type."]}),"\n",(0,s.jsx)(n.h4,{id:"returns-12",children:"Returns"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"number"})}),"\n",(0,s.jsxs)(n.p,{children:["A ",(0,s.jsx)(n.code,{children:"number"})," representing the size of the ",(0,s.jsx)(n.code,{children:"T"})," type in terms of ",(0,s.jsx)(n.a,{href:"/o1js/2.4.0/api-reference/classes/Field",children:"Field"})," type."]}),"\n",(0,s.jsx)(n.h4,{id:"inherited-from-12",children:"Inherited from"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"StructNoJson({\n  id: RandomId,\n  accountUpdate: HashedAccountUpdate,\n  children: AccountUpdateForest,\n}).sizeInFields\n"})})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(o,{...e})}):o(e)}},28453:(e,n,d)=>{d.d(n,{R:()=>a,x:()=>i});var c=d(96540);const s={},r=c.createContext(s);function a(e){const n=c.useContext(r);return c.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),c.createElement(r.Provider,{value:n},e.children)}}}]);