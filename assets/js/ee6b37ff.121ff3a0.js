"use strict";(self.webpackChunkdocumentation_site=self.webpackChunkdocumentation_site||[]).push([[20159],{28453:(e,r,t)=>{t.d(r,{R:()=>a,x:()=>c});var n=t(96540);const s={},i=n.createContext(s);function a(e){const r=n.useContext(i);return n.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function c(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),n.createElement(i.Provider,{value:r},e.children)}},88249:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>o,contentTitle:()=>c,default:()=>p,frontMatter:()=>a,metadata:()=>n,toc:()=>l});const n=JSON.parse('{"id":"api-reference/functions/state","title":"state","description":"Defined in100","source":"@site/docs/api-reference/functions/state.mdx","sourceDirName":"api-reference/functions","slug":"/api-reference/functions/state","permalink":"/o1js/api-reference/functions/state","draft":false,"unlisted":false,"editUrl":"https://github.com/docs/api-reference/functions/state.mdx","tags":[],"version":"current","frontMatter":{},"sidebar":"docs","previous":{"title":"setNumberOfWorkers","permalink":"/o1js/api-reference/functions/setNumberOfWorkers"},"next":{"title":"toConstantField","permalink":"/o1js/api-reference/functions/toConstantField"}}');var s=t(74848),i=t(28453);const a={},c=void 0,o={},l=[{value:"Type Parameters",id:"type-parameters",level:2},{value:"Parameters",id:"parameters",level:2},{value:"type",id:"type",level:3},{value:"Returns",id:"returns",level:2},{value:"Parameters",id:"parameters-1",level:3},{value:"target",id:"target",level:4},{value:"key",id:"key",level:4},{value:"_descriptor?",id:"_descriptor",level:4},{value:"Returns",id:"returns-1",level:3}];function d(e){const r={a:"a",code:"code",h2:"h2",h3:"h3",h4:"h4",p:"p",pre:"pre",strong:"strong",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-ts",children:"function state<A>(type: \n  | ProvableTypePure<A>\n  | FlexibleProvablePure<A>): (target: SmartContract & {\n  constructor: any;\n }, key: string, _descriptor?: PropertyDescriptor) => void\n"})}),"\n",(0,s.jsxs)(r.p,{children:["Defined in: ",(0,s.jsx)(r.a,{href:"https://github.com/o1-labs/o1js/blob/df1ff77af12d7cbbed4a6167f02815fad4f0dceb/src/lib/mina/v1/state.ts#L100",children:"lib/mina/v1/state.ts:100"})]}),"\n",(0,s.jsxs)(r.p,{children:["A decorator to use within a zkapp to indicate what will be stored on-chain.\nFor example, if you want to store a field element ",(0,s.jsx)(r.code,{children:"some_state"})," in a zkapp,\nyou can use the following in the declaration of your zkapp:"]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{children:"@state(Field) some_state = State<Field>();\n"})}),"\n",(0,s.jsx)(r.h2,{id:"type-parameters",children:"Type Parameters"}),"\n",(0,s.jsxs)(r.p,{children:["\u2022 ",(0,s.jsx)(r.strong,{children:"A"})]}),"\n",(0,s.jsx)(r.h2,{id:"parameters",children:"Parameters"}),"\n",(0,s.jsx)(r.h3,{id:"type",children:"type"}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.a,{href:"/o1js/api-reference/type-aliases/ProvableTypePure",children:(0,s.jsx)(r.code,{children:"ProvableTypePure"})}),"<",(0,s.jsx)(r.code,{children:"A"}),"> | ",(0,s.jsx)(r.a,{href:"/o1js/api-reference/type-aliases/FlexibleProvablePure",children:(0,s.jsx)(r.code,{children:"FlexibleProvablePure"})}),"<",(0,s.jsx)(r.code,{children:"A"}),">"]}),"\n",(0,s.jsx)(r.h2,{id:"returns",children:"Returns"}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.code,{children:"Function"})}),"\n",(0,s.jsx)(r.h3,{id:"parameters-1",children:"Parameters"}),"\n",(0,s.jsx)(r.h4,{id:"target",children:"target"}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.a,{href:"/o1js/api-reference/classes/SmartContract",children:(0,s.jsx)(r.code,{children:"SmartContract"})})," & {\n",(0,s.jsx)(r.code,{children:"constructor"}),": ",(0,s.jsx)(r.code,{children:"any"}),";\n}"]}),"\n",(0,s.jsx)(r.h4,{id:"key",children:"key"}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.code,{children:"string"})}),"\n",(0,s.jsx)(r.h4,{id:"_descriptor",children:"_descriptor?"}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.code,{children:"PropertyDescriptor"})}),"\n",(0,s.jsx)(r.h3,{id:"returns-1",children:"Returns"}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.code,{children:"void"})})]})}function p(e={}){const{wrapper:r}={...(0,i.R)(),...e.components};return r?(0,s.jsx)(r,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}}}]);