"use strict";(self.webpackChunkdocumentation_site=self.webpackChunkdocumentation_site||[]).push([[29584],{28453:(e,n,i)=>{i.d(n,{R:()=>t,x:()=>c});var r=i(96540);const s={},o=r.createContext(s);function t(e){const n=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:t(e.components),r.createElement(o.Provider,{value:n},e.children)}},74883:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>a,contentTitle:()=>c,default:()=>d,frontMatter:()=>t,metadata:()=>r,toc:()=>f});const r=JSON.parse('{"id":"api-reference/functions/verify","title":"verify","description":"Defined in108","source":"@site/docs/api-reference/functions/verify.mdx","sourceDirName":"api-reference/functions","slug":"/api-reference/functions/verify","permalink":"/o1js/api-reference/functions/verify","draft":false,"unlisted":false,"editUrl":"https://github.com/docs/api-reference/functions/verify.mdx","tags":[],"version":"current","frontMatter":{},"sidebar":"docs","previous":{"title":"toPoint","permalink":"/o1js/api-reference/functions/toPoint"},"next":{"title":"withHashes","permalink":"/o1js/api-reference/functions/withHashes"}}');var s=i(74848),o=i(28453);const t={},c=void 0,a={},f=[{value:"Parameters",id:"parameters",level:2},{value:"proof",id:"proof",level:3},{value:"verificationKey",id:"verificationkey",level:3},{value:"Returns",id:"returns",level:2}];function l(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"function verify(proof: \n  | ProofBase\n| JsonProof, verificationKey: string | VerificationKey): Promise<boolean>\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Defined in: ",(0,s.jsx)(n.a,{href:"https://github.com/o1-labs/o1js/blob/df1ff77af12d7cbbed4a6167f02815fad4f0dceb/src/lib/proof-system/zkprogram.ts#L108",children:"lib/proof-system/zkprogram.ts:108"})]}),"\n",(0,s.jsx)(n.p,{children:"Initializes Pickles bindings, serializes the input proof and verification key for use in OCaml, then calls into the Pickles verify function and returns the result."}),"\n",(0,s.jsx)(n.h2,{id:"parameters",children:"Parameters"}),"\n",(0,s.jsx)(n.h3,{id:"proof",children:"proof"}),"\n",(0,s.jsxs)(n.p,{children:["Either a ",(0,s.jsx)(n.code,{children:"Proof"})," instance or a serialized JSON proof"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"/o1js/api-reference/classes/ProofBase",children:(0,s.jsx)(n.code,{children:"ProofBase"})})," | ",(0,s.jsx)(n.a,{href:"/o1js/api-reference/type-aliases/JsonProof",children:(0,s.jsx)(n.code,{children:"JsonProof"})})]}),"\n",(0,s.jsx)(n.h3,{id:"verificationkey",children:"verificationKey"}),"\n",(0,s.jsxs)(n.p,{children:["Either a base64 serialized verification key or a ",(0,s.jsx)(n.code,{children:"VerificationKey"})," instance which will be base64 serialized for use in the bindings."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"string"})," | ",(0,s.jsx)(n.a,{href:"/o1js/api-reference/classes/VerificationKey",children:(0,s.jsx)(n.code,{children:"VerificationKey"})})]}),"\n",(0,s.jsx)(n.h2,{id:"returns",children:"Returns"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"Promise"}),"<",(0,s.jsx)(n.code,{children:"boolean"}),">"]}),"\n",(0,s.jsx)(n.p,{children:"A promise that resolves to a boolean indicating whether the proof is valid."})]})}function d(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}}}]);