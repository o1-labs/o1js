"use strict";(self.webpackChunkdocumentation_site=self.webpackChunkdocumentation_site||[]).push([[12812],{28453:(e,s,n)=>{n.d(s,{R:()=>t,x:()=>d});var r=n(96540);const i={},l=r.createContext(i);function t(e){const s=r.useContext(l);return r.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function d(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:t(e.components),r.createElement(l.Provider,{value:s},e.children)}},34374:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>a,contentTitle:()=>d,default:()=>o,frontMatter:()=>t,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"api-reference/classes/UInt32","title":"UInt32","description":"Defined in583","source":"@site/versioned_docs/version-2.4.0/api-reference/classes/UInt32.mdx","sourceDirName":"api-reference/classes","slug":"/api-reference/classes/UInt32","permalink":"/o1js/2.4.0/api-reference/classes/UInt32","draft":false,"unlisted":false,"editUrl":"https://github.com/versioned_docs/version-2.4.0/api-reference/classes/UInt32.mdx","tags":[],"version":"2.4.0","frontMatter":{},"sidebar":"docs","previous":{"title":"TokenSymbol","permalink":"/o1js/2.4.0/api-reference/classes/TokenSymbol"},"next":{"title":"UInt64","permalink":"/o1js/2.4.0/api-reference/classes/UInt64"}}');var i=n(74848),l=n(28453);const t={},d=void 0,a={},c=[{value:"Extends",id:"extends",level:2},{value:"Constructors",id:"constructors",level:2},{value:"new UInt32()",id:"new-uint32",level:3},{value:"Parameters",id:"parameters",level:4},{value:"x",id:"x",level:5},{value:"Returns",id:"returns",level:4},{value:"Overrides",id:"overrides",level:4},{value:"Properties",id:"properties",level:2},{value:"value",id:"value",level:3},{value:"NUM_BITS",id:"num_bits",level:3},{value:"Unsafe",id:"unsafe",level:3},{value:"fromField()",id:"fromfield",level:4},{value:"Parameters",id:"parameters-1",level:5},{value:"x",id:"x-1",level:6},{value:"Returns",id:"returns-1",level:5},{value:"Accessors",id:"accessors",level:2},{value:"one",id:"one",level:3},{value:"Get Signature",id:"get-signature",level:4},{value:"Returns",id:"returns-2",level:5},{value:"zero",id:"zero",level:3},{value:"Get Signature",id:"get-signature-1",level:4},{value:"Returns",id:"returns-3",level:5},{value:"Methods",id:"methods",level:2},{value:"add()",id:"add",level:3},{value:"Parameters",id:"parameters-2",level:4},{value:"y",id:"y",level:5},{value:"Returns",id:"returns-4",level:4},{value:"addMod32()",id:"addmod32",level:3},{value:"Parameters",id:"parameters-3",level:4},{value:"y",id:"y-1",level:5},{value:"Returns",id:"returns-5",level:4},{value:"and()",id:"and",level:3},{value:"Parameters",id:"parameters-4",level:4},{value:"x",id:"x-2",level:5},{value:"Returns",id:"returns-6",level:4},{value:"Example",id:"example",level:4},{value:"assertEquals()",id:"assertequals",level:3},{value:"Parameters",id:"parameters-5",level:4},{value:"x",id:"x-3",level:5},{value:"Returns",id:"returns-7",level:4},{value:"Inherited from",id:"inherited-from",level:4},{value:"assertGreaterThan()",id:"assertgreaterthan",level:3},{value:"Parameters",id:"parameters-6",level:4},{value:"y",id:"y-2",level:5},{value:"message?",id:"message",level:5},{value:"Returns",id:"returns-8",level:4},{value:"assertGreaterThanOrEqual()",id:"assertgreaterthanorequal",level:3},{value:"Parameters",id:"parameters-7",level:4},{value:"y",id:"y-3",level:5},{value:"message?",id:"message-1",level:5},{value:"Returns",id:"returns-9",level:4},{value:"assertLessThan()",id:"assertlessthan",level:3},{value:"Parameters",id:"parameters-8",level:4},{value:"y",id:"y-4",level:5},{value:"message?",id:"message-2",level:5},{value:"Returns",id:"returns-10",level:4},{value:"assertLessThanOrEqual()",id:"assertlessthanorequal",level:3},{value:"Parameters",id:"parameters-9",level:4},{value:"y",id:"y-5",level:5},{value:"message?",id:"message-3",level:5},{value:"Returns",id:"returns-11",level:4},{value:"div()",id:"div",level:3},{value:"Parameters",id:"parameters-10",level:4},{value:"y",id:"y-6",level:5},{value:"Returns",id:"returns-12",level:4},{value:"divMod()",id:"divmod",level:3},{value:"Parameters",id:"parameters-11",level:4},{value:"y",id:"y-7",level:5},{value:"Returns",id:"returns-13",level:4},{value:"quotient",id:"quotient",level:5},{value:"rest",id:"rest",level:5},{value:"equals()",id:"equals",level:3},{value:"Parameters",id:"parameters-12",level:4},{value:"x",id:"x-4",level:5},{value:"Returns",id:"returns-14",level:4},{value:"Inherited from",id:"inherited-from-1",level:4},{value:"greaterThan()",id:"greaterthan",level:3},{value:"Parameters",id:"parameters-13",level:4},{value:"y",id:"y-8",level:5},{value:"Returns",id:"returns-15",level:4},{value:"greaterThanOrEqual()",id:"greaterthanorequal",level:3},{value:"Parameters",id:"parameters-14",level:4},{value:"y",id:"y-9",level:5},{value:"Returns",id:"returns-16",level:4},{value:"isConstant()",id:"isconstant",level:3},{value:"Returns",id:"returns-17",level:4},{value:"Inherited from",id:"inherited-from-2",level:4},{value:"leftShift()",id:"leftshift",level:3},{value:"Parameters",id:"parameters-15",level:4},{value:"bits",id:"bits",level:5},{value:"Returns",id:"returns-18",level:4},{value:"Example",id:"example-1",level:4},{value:"lessThan()",id:"lessthan",level:3},{value:"Parameters",id:"parameters-16",level:4},{value:"y",id:"y-10",level:5},{value:"Returns",id:"returns-19",level:4},{value:"lessThanOrEqual()",id:"lessthanorequal",level:3},{value:"Parameters",id:"parameters-17",level:4},{value:"y",id:"y-11",level:5},{value:"Returns",id:"returns-20",level:4},{value:"mod()",id:"mod",level:3},{value:"Parameters",id:"parameters-18",level:4},{value:"y",id:"y-12",level:5},{value:"Returns",id:"returns-21",level:4},{value:"mul()",id:"mul",level:3},{value:"Parameters",id:"parameters-19",level:4},{value:"y",id:"y-13",level:5},{value:"Returns",id:"returns-22",level:4},{value:"not()",id:"not",level:3},{value:"Returns",id:"returns-23",level:4},{value:"Example",id:"example-2",level:4},{value:"or()",id:"or",level:3},{value:"Parameters",id:"parameters-20",level:4},{value:"x",id:"x-5",level:5},{value:"Returns",id:"returns-24",level:4},{value:"Example",id:"example-3",level:4},{value:"rightShift()",id:"rightshift",level:3},{value:"Parameters",id:"parameters-21",level:4},{value:"bits",id:"bits-1",level:5},{value:"Returns",id:"returns-25",level:4},{value:"Example",id:"example-4",level:4},{value:"rotate()",id:"rotate",level:3},{value:"Parameters",id:"parameters-22",level:4},{value:"bits",id:"bits-2",level:5},{value:"direction",id:"direction",level:5},{value:"Returns",id:"returns-26",level:4},{value:"Example",id:"example-5",level:4},{value:"sub()",id:"sub",level:3},{value:"Parameters",id:"parameters-23",level:4},{value:"y",id:"y-14",level:5},{value:"Returns",id:"returns-27",level:4},{value:"toBigint()",id:"tobigint",level:3},{value:"Returns",id:"returns-28",level:4},{value:"toBits()",id:"tobits",level:3},{value:"Parameters",id:"parameters-24",level:4},{value:"length",id:"length",level:5},{value:"Returns",id:"returns-29",level:4},{value:"toBytes()",id:"tobytes",level:3},{value:"Returns",id:"returns-30",level:4},{value:"toBytesBE()",id:"tobytesbe",level:3},{value:"Returns",id:"returns-31",level:4},{value:"toConstant()",id:"toconstant",level:3},{value:"Returns",id:"returns-32",level:4},{value:"Inherited from",id:"inherited-from-3",level:4},{value:"toFields()",id:"tofields",level:3},{value:"Returns",id:"returns-33",level:4},{value:"Inherited from",id:"inherited-from-4",level:4},{value:"toJSON()",id:"tojson",level:3},{value:"Returns",id:"returns-34",level:4},{value:"Inherited from",id:"inherited-from-5",level:4},{value:"toString()",id:"tostring",level:3},{value:"Returns",id:"returns-35",level:4},{value:"toUInt64()",id:"touint64",level:3},{value:"Returns",id:"returns-36",level:4},{value:"xor()",id:"xor",level:3},{value:"Parameters",id:"parameters-25",level:4},{value:"x",id:"x-6",level:5},{value:"Returns",id:"returns-37",level:4},{value:"Example",id:"example-6",level:4},{value:"check()",id:"check",level:3},{value:"Parameters",id:"parameters-26",level:4},{value:"x",id:"x-7",level:5},{value:"Returns",id:"returns-38",level:4},{value:"Overrides",id:"overrides-1",level:4},{value:"empty()",id:"empty",level:3},{value:"Type Parameters",id:"type-parameters",level:4},{value:"Returns",id:"returns-39",level:4},{value:"Inherited from",id:"inherited-from-6",level:4},{value:"from()",id:"from",level:3},{value:"Parameters",id:"parameters-27",level:4},{value:"x",id:"x-8",level:5},{value:"Returns",id:"returns-40",level:4},{value:"fromBits()",id:"frombits",level:3},{value:"Parameters",id:"parameters-28",level:4},{value:"bits",id:"bits-3",level:5},{value:"Returns",id:"returns-41",level:4},{value:"fromBytes()",id:"frombytes",level:3},{value:"Parameters",id:"parameters-29",level:4},{value:"bytes",id:"bytes",level:5},{value:"Returns",id:"returns-42",level:4},{value:"fromBytesBE()",id:"frombytesbe",level:3},{value:"Parameters",id:"parameters-30",level:4},{value:"bytes",id:"bytes-1",level:5},{value:"Returns",id:"returns-43",level:4},{value:"fromFields()",id:"fromfields",level:3},{value:"Type Parameters",id:"type-parameters-1",level:4},{value:"Parameters",id:"parameters-31",level:4},{value:"this",id:"this",level:5},{value:"xs",id:"xs",level:5},{value:"Returns",id:"returns-44",level:4},{value:"Inherited from",id:"inherited-from-7",level:4},{value:"fromJSON()",id:"fromjson",level:3},{value:"Type Parameters",id:"type-parameters-2",level:4},{value:"Parameters",id:"parameters-32",level:4},{value:"x",id:"x-9",level:5},{value:"Returns",id:"returns-45",level:4},{value:"Overrides",id:"overrides-2",level:4},{value:"fromObject()",id:"fromobject",level:3},{value:"Type Parameters",id:"type-parameters-3",level:4},{value:"Parameters",id:"parameters-33",level:4},{value:"this",id:"this-1",level:5},{value:"value",id:"value-1",level:5},{value:"Returns",id:"returns-46",level:4},{value:"Inherited from",id:"inherited-from-8",level:4},{value:"fromValue()",id:"fromvalue",level:3},{value:"Type Parameters",id:"type-parameters-4",level:4},{value:"Parameters",id:"parameters-34",level:4},{value:"x",id:"x-10",level:5},{value:"Returns",id:"returns-47",level:4},{value:"Overrides",id:"overrides-3",level:4},{value:"MAXINT()",id:"maxint",level:3},{value:"Returns",id:"returns-48",level:4},{value:"sizeInFields()",id:"sizeinfields",level:3},{value:"Returns",id:"returns-49",level:4},{value:"Inherited from",id:"inherited-from-9",level:4},{value:"toAuxiliary()",id:"toauxiliary",level:3},{value:"Returns",id:"returns-50",level:4},{value:"Inherited from",id:"inherited-from-10",level:4},{value:"toCanonical()",id:"tocanonical",level:3},{value:"Type Parameters",id:"type-parameters-5",level:4},{value:"Parameters",id:"parameters-35",level:4},{value:"this",id:"this-2",level:5},{value:"value",id:"value-2",level:5},{value:"Returns",id:"returns-51",level:4},{value:"Inherited from",id:"inherited-from-11",level:4},{value:"toConstant()",id:"toconstant-1",level:3},{value:"Type Parameters",id:"type-parameters-6",level:4},{value:"Parameters",id:"parameters-36",level:4},{value:"this",id:"this-3",level:5},{value:"t",id:"t",level:5},{value:"Returns",id:"returns-52",level:4},{value:"Inherited from",id:"inherited-from-12",level:4},{value:"toFields()",id:"tofields-1",level:3},{value:"Type Parameters",id:"type-parameters-7",level:4},{value:"Parameters",id:"parameters-37",level:4},{value:"this",id:"this-4",level:5},{value:"v",id:"v",level:5},{value:"Returns",id:"returns-53",level:4},{value:"Inherited from",id:"inherited-from-13",level:4},{value:"toInput()",id:"toinput",level:3},{value:"Parameters",id:"parameters-38",level:4},{value:"x",id:"x-11",level:5},{value:"Returns",id:"returns-54",level:4},{value:"Overrides",id:"overrides-4",level:4},{value:"toJSON()",id:"tojson-1",level:3},{value:"Parameters",id:"parameters-39",level:4},{value:"x",id:"x-12",level:5},{value:"Returns",id:"returns-55",level:4},{value:"Overrides",id:"overrides-5",level:4},{value:"toValue()",id:"tovalue",level:3},{value:"Parameters",id:"parameters-40",level:4},{value:"x",id:"x-13",level:5},{value:"Returns",id:"returns-56",level:4},{value:"Overrides",id:"overrides-6",level:4}];function h(e){const s={a:"a",br:"br",code:"code",em:"em",h2:"h2",h3:"h3",h4:"h4",h5:"h5",h6:"h6",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,l.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(s.p,{children:["Defined in: ",(0,i.jsx)(s.a,{href:"https://github.com/o1-labs/o1js/blob/df1ff77af12d7cbbed4a6167f02815fad4f0dceb/src/lib/provable/int.ts#L583",children:"lib/provable/int.ts:583"})]}),"\n",(0,i.jsx)(s.p,{children:"A 32 bit unsigned integer with values ranging from 0 to 4,294,967,295."}),"\n",(0,i.jsx)(s.h2,{id:"extends",children:"Extends"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:(0,i.jsx)(s.code,{children:"CircuitValue"})}),"\n"]}),"\n",(0,i.jsx)(s.h2,{id:"constructors",children:"Constructors"}),"\n",(0,i.jsx)(s.h3,{id:"new-uint32",children:"new UInt32()"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-ts",children:"new UInt32(x: string | number | bigint | FieldVar | UInt32): UInt32\n"})}),"\n",(0,i.jsxs)(s.p,{children:["Defined in: ",(0,i.jsx)(s.a,{href:"https://github.com/o1-labs/o1js/blob/df1ff77af12d7cbbed4a6167f02815fad4f0dceb/src/lib/provable/int.ts#L593",children:"lib/provable/int.ts:593"})]}),"\n",(0,i.jsxs)(s.p,{children:["Create a ",(0,i.jsx)(s.a,{href:"/o1js/2.4.0/api-reference/classes/UInt32",children:"UInt32"}),".\nThe max value of a ",(0,i.jsx)(s.a,{href:"/o1js/2.4.0/api-reference/classes/UInt32",children:"UInt32"})," is ",(0,i.jsx)(s.code,{children:"2^32 - 1 = UInt32.MAXINT()"}),"."]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Warning"}),": Cannot overflow, an error is thrown if the result is greater than UInt32.MAXINT()"]}),"\n",(0,i.jsx)(s.h4,{id:"parameters",children:"Parameters"}),"\n",(0,i.jsx)(s.h5,{id:"x",children:"x"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.code,{children:"string"})," | ",(0,i.jsx)(s.code,{children:"number"})," | ",(0,i.jsx)(s.code,{children:"bigint"})," | ",(0,i.jsx)(s.code,{children:"FieldVar"})," | ",(0,i.jsx)(s.a,{href:"/o1js/2.4.0/api-reference/classes/UInt32",children:(0,i.jsx)(s.code,{children:"UInt32"})})]}),"\n",(0,i.jsx)(s.h4,{id:"returns",children:"Returns"}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.a,{href:"/o1js/2.4.0/api-reference/classes/UInt32",children:(0,i.jsx)(s.code,{children:"UInt32"})})}),"\n",(0,i.jsx)(s.h4,{id:"overrides",children:"Overrides"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-ts",children:"CircuitValue.constructor\n"})}),"\n",(0,i.jsx)(s.h2,{id:"properties",children:"Properties"}),"\n",(0,i.jsx)(s.h3,{id:"value",children:"value"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-ts",children:"value: Field;\n"})}),"\n",(0,i.jsxs)(s.p,{children:["Defined in: ",(0,i.jsx)(s.a,{href:"https://github.com/o1-labs/o1js/blob/df1ff77af12d7cbbed4a6167f02815fad4f0dceb/src/lib/provable/int.ts#L584",children:"lib/provable/int.ts:584"})]}),"\n",(0,i.jsx)(s.hr,{}),"\n",(0,i.jsx)(s.h3,{id:"num_bits",children:"NUM_BITS"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-ts",children:"static NUM_BITS: number = 32;\n"})}),"\n",(0,i.jsxs)(s.p,{children:["Defined in: ",(0,i.jsx)(s.a,{href:"https://github.com/o1-labs/o1js/blob/df1ff77af12d7cbbed4a6167f02815fad4f0dceb/src/lib/provable/int.ts#L585",children:"lib/provable/int.ts:585"})]}),"\n",(0,i.jsx)(s.hr,{}),"\n",(0,i.jsx)(s.h3,{id:"unsafe",children:"Unsafe"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-ts",children:"static Unsafe: {\n  fromField: UInt32;\n};\n"})}),"\n",(0,i.jsxs)(s.p,{children:["Defined in: ",(0,i.jsx)(s.a,{href:"https://github.com/o1-labs/o1js/blob/df1ff77af12d7cbbed4a6167f02815fad4f0dceb/src/lib/provable/int.ts#L601",children:"lib/provable/int.ts:601"})]}),"\n",(0,i.jsx)(s.h4,{id:"fromfield",children:"fromField()"}),"\n",(0,i.jsxs)(s.p,{children:["Create a ",(0,i.jsx)(s.a,{href:"/o1js/2.4.0/api-reference/classes/UInt32",children:"UInt32"})," from a ",(0,i.jsx)(s.a,{href:"/o1js/2.4.0/api-reference/variables/Field",children:"Field"})," without constraining its range."]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Warning"}),": This is unsafe, because it does not prove that the input ",(0,i.jsx)(s.a,{href:"/o1js/2.4.0/api-reference/variables/Field",children:"Field"})," actually fits in 32 bits.",(0,i.jsx)(s.br,{}),"\n","Only use this if you know what you are doing, otherwise use the safe ",(0,i.jsx)(s.a,{href:"/o1js/2.4.0/api-reference/classes/UInt32#from",children:"UInt32.from"}),"."]}),"\n",(0,i.jsx)(s.h5,{id:"parameters-1",children:"Parameters"}),"\n",(0,i.jsx)(s.h6,{id:"x-1",children:"x"}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.a,{href:"/o1js/2.4.0/api-reference/classes/Field",children:(0,i.jsx)(s.code,{children:"Field"})})}),"\n",(0,i.jsx)(s.h5,{id:"returns-1",children:"Returns"}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.a,{href:"/o1js/2.4.0/api-reference/classes/UInt32",children:(0,i.jsx)(s.code,{children:"UInt32"})})}),"\n",(0,i.jsx)(s.h2,{id:"accessors",children:"Accessors"}),"\n",(0,i.jsx)(s.h3,{id:"one",children:"one"}),"\n",(0,i.jsx)(s.h4,{id:"get-signature",children:"Get Signature"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-ts",children:"get static one(): UInt32\n"})}),"\n",(0,i.jsxs)(s.p,{children:["Defined in: ",(0,i.jsx)(s.a,{href:"https://github.com/o1-labs/o1js/blob/df1ff77af12d7cbbed4a6167f02815fad4f0dceb/src/lib/provable/int.ts#L623",children:"lib/provable/int.ts:623"})]}),"\n",(0,i.jsxs)(s.p,{children:["Static method to create a ",(0,i.jsx)(s.a,{href:"/o1js/2.4.0/api-reference/classes/UInt32",children:"UInt32"})," with value ",(0,i.jsx)(s.code,{children:"0"}),"."]}),"\n",(0,i.jsx)(s.h5,{id:"returns-2",children:"Returns"}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.a,{href:"/o1js/2.4.0/api-reference/classes/UInt32",children:(0,i.jsx)(s.code,{children:"UInt32"})})}),"\n",(0,i.jsx)(s.hr,{}),"\n",(0,i.jsx)(s.h3,{id:"zero",children:"zero"}),"\n",(0,i.jsx)(s.h4,{id:"get-signature-1",children:"Get Signature"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-ts",children:"get static zero(): UInt32\n"})}),"\n",(0,i.jsxs)(s.p,{children:["Defined in: ",(0,i.jsx)(s.a,{href:"https://github.com/o1-labs/o1js/blob/df1ff77af12d7cbbed4a6167f02815fad4f0dceb/src/lib/provable/int.ts#L616",children:"lib/provable/int.ts:616"})]}),"\n",(0,i.jsxs)(s.p,{children:["Static method to create a ",(0,i.jsx)(s.a,{href:"/o1js/2.4.0/api-reference/classes/UInt32",children:"UInt32"})," with value ",(0,i.jsx)(s.code,{children:"0"}),"."]}),"\n",(0,i.jsx)(s.h5,{id:"returns-3",children:"Returns"}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.a,{href:"/o1js/2.4.0/api-reference/classes/UInt32",children:(0,i.jsx)(s.code,{children:"UInt32"})})}),"\n",(0,i.jsx)(s.h2,{id:"methods",children:"Methods"}),"\n",(0,i.jsx)(s.h3,{id:"add",children:"add()"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-ts",children:"add(y: number | UInt32): UInt32\n"})}),"\n",(0,i.jsxs)(s.p,{children:["Defined in: ",(0,i.jsx)(s.a,{href:"https://github.com/o1-labs/o1js/blob/df1ff77af12d7cbbed4a6167f02815fad4f0dceb/src/lib/provable/int.ts#L765",children:"lib/provable/int.ts:765"})]}),"\n",(0,i.jsx)(s.p,{children:"Addition with overflow checking."}),"\n",(0,i.jsx)(s.h4,{id:"parameters-2",children:"Parameters"}),"\n",(0,i.jsx)(s.h5,{id:"y",children:"y"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.code,{children:"number"})," | ",(0,i.jsx)(s.a,{href:"/o1js/2.4.0/api-reference/classes/UInt32",children:(0,i.jsx)(s.code,{children:"UInt32"})})]}),"\n",(0,i.jsx)(s.h4,{id:"returns-4",children:"Returns"}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.a,{href:"/o1js/2.4.0/api-reference/classes/UInt32",children:(0,i.jsx)(s.code,{children:"UInt32"})})}),"\n",(0,i.jsx)(s.hr,{}),"\n",(0,i.jsx)(s.h3,{id:"addmod32",children:"addMod32()"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-ts",children:"addMod32(y: UInt32): UInt32\n"})}),"\n",(0,i.jsxs)(s.p,{children:["Defined in: ",(0,i.jsx)(s.a,{href:"https://github.com/o1-labs/o1js/blob/df1ff77af12d7cbbed4a6167f02815fad4f0dceb/src/lib/provable/int.ts#L694",children:"lib/provable/int.ts:694"})]}),"\n",(0,i.jsxs)(s.p,{children:["Addition modulo 2^32. Check ",(0,i.jsx)(s.a,{href:"/o1js/2.4.0/api-reference/variables/Gadgets#addmod32",children:"Gadgets.addMod32"})," for a detailed description."]}),"\n",(0,i.jsx)(s.h4,{id:"parameters-3",children:"Parameters"}),"\n",(0,i.jsx)(s.h5,{id:"y-1",children:"y"}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.a,{href:"/o1js/2.4.0/api-reference/classes/UInt32",children:(0,i.jsx)(s.code,{children:"UInt32"})})}),"\n",(0,i.jsx)(s.h4,{id:"returns-5",children:"Returns"}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.a,{href:"/o1js/2.4.0/api-reference/classes/UInt32",children:(0,i.jsx)(s.code,{children:"UInt32"})})}),"\n",(0,i.jsx)(s.hr,{}),"\n",(0,i.jsx)(s.h3,{id:"and",children:"and()"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-ts",children:"and(x: UInt32): UInt32\n"})}),"\n",(0,i.jsxs)(s.p,{children:["Defined in: ",(0,i.jsx)(s.a,{href:"https://github.com/o1-labs/o1js/blob/df1ff77af12d7cbbed4a6167f02815fad4f0dceb/src/lib/provable/int.ts#L935",children:"lib/provable/int.ts:935"})]}),"\n",(0,i.jsxs)(s.p,{children:["Bitwise AND gadget on ",(0,i.jsx)(s.a,{href:"/o1js/2.4.0/api-reference/classes/UInt32",children:"UInt32"})," elements. Equivalent to the ",(0,i.jsxs)(s.a,{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Bitwise_AND",children:["bitwise AND ",(0,i.jsx)(s.code,{children:"&"})," operator in JavaScript"]}),".\nThe AND gate works by comparing two bits and returning ",(0,i.jsx)(s.code,{children:"1"})," if both bits are ",(0,i.jsx)(s.code,{children:"1"}),", and ",(0,i.jsx)(s.code,{children:"0"})," otherwise."]}),"\n",(0,i.jsx)(s.p,{children:"It can be checked by a double generic gate that verifies the following relationship between the values below."}),"\n",(0,i.jsxs)(s.p,{children:["The generic gate verifies:",(0,i.jsx)(s.br,{}),"\n",(0,i.jsx)(s.code,{children:"a + b = sum"})," and the conjunction equation ",(0,i.jsx)(s.code,{children:"2 * and = sum - xor"}),(0,i.jsx)(s.br,{}),"\n","Where:",(0,i.jsx)(s.br,{}),"\n",(0,i.jsx)(s.code,{children:"a + b = sum"}),(0,i.jsx)(s.br,{}),"\n",(0,i.jsx)(s.code,{children:"a ^ b = xor"}),(0,i.jsx)(s.br,{}),"\n",(0,i.jsx)(s.code,{children:"a & b = and"})]}),"\n",(0,i.jsxs)(s.p,{children:["You can find more details about the implementation in the ",(0,i.jsx)(s.a,{href:"https://o1-labs.github.io/proof-systems/specs/kimchi.html?highlight=gates#and",children:"Mina book"})]}),"\n",(0,i.jsx)(s.h4,{id:"parameters-4",children:"Parameters"}),"\n",(0,i.jsx)(s.h5,{id:"x-2",children:"x"}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.a,{href:"/o1js/2.4.0/api-reference/classes/UInt32",children:(0,i.jsx)(s.code,{children:"UInt32"})})}),"\n",(0,i.jsx)(s.h4,{id:"returns-6",children:"Returns"}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.a,{href:"/o1js/2.4.0/api-reference/classes/UInt32",children:(0,i.jsx)(s.code,{children:"UInt32"})})}),"\n",(0,i.jsx)(s.h4,{id:"example",children:"Example"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-typescript",children:"let a = UInt32.from(3);    // ... 000011\nlet b = UInt32.from(5);    // ... 000101\n\nlet c = a.and(b, 2);    // ... 000001\nc.assertEquals(1);\n"})}),"\n",(0,i.jsx)(s.hr,{}),"\n",(0,i.jsx)(s.h3,{id:"assertequals",children:"assertEquals()"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-ts",children:"assertEquals(x: this): void\n"})}),"\n",(0,i.jsxs)(s.p,{children:["Defined in: ",(0,i.jsx)(s.a,{href:"https://github.com/o1-labs/o1js/blob/df1ff77af12d7cbbed4a6167f02815fad4f0dceb/src/lib/provable/types/circuit-value.ts#L121",children:"lib/provable/types/circuit-value.ts:121"})]}),"\n",(0,i.jsx)(s.h4,{id:"parameters-5",children:"Parameters"}),"\n",(0,i.jsx)(s.h5,{id:"x-3",children:"x"}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.code,{children:"this"})}),"\n",(0,i.jsx)(s.h4,{id:"returns-7",children:"Returns"}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.code,{children:"void"})}),"\n",(0,i.jsx)(s.h4,{id:"inherited-from",children:"Inherited from"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-ts",children:"CircuitValue.assertEquals\n"})}),"\n",(0,i.jsx)(s.hr,{}),"\n",(0,i.jsx)(s.h3,{id:"assertgreaterthan",children:"assertGreaterThan()"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-ts",children:"assertGreaterThan(y: UInt32, message?: string): void\n"})}),"\n",(0,i.jsxs)(s.p,{children:["Defined in: ",(0,i.jsx)(s.a,{href:"https://github.com/o1-labs/o1js/blob/df1ff77af12d7cbbed4a6167f02815fad4f0dceb/src/lib/provable/int.ts#L1016",children:"lib/provable/int.ts:1016"})]}),"\n",(0,i.jsxs)(s.p,{children:["Asserts that a ",(0,i.jsx)(s.a,{href:"/o1js/2.4.0/api-reference/classes/UInt32",children:"UInt32"})," is greater than another one."]}),"\n",(0,i.jsx)(s.h4,{id:"parameters-6",children:"Parameters"}),"\n",(0,i.jsx)(s.h5,{id:"y-2",children:"y"}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.a,{href:"/o1js/2.4.0/api-reference/classes/UInt32",children:(0,i.jsx)(s.code,{children:"UInt32"})})}),"\n",(0,i.jsx)(s.h5,{id:"message",children:"message?"}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.code,{children:"string"})}),"\n",(0,i.jsx)(s.h4,{id:"returns-8",children:"Returns"}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.code,{children:"void"})}),"\n",(0,i.jsx)(s.hr,{}),"\n",(0,i.jsx)(s.h3,{id:"assertgreaterthanorequal",children:"assertGreaterThanOrEqual()"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-ts",children:"assertGreaterThanOrEqual(y: UInt32, message?: string): void\n"})}),"\n",(0,i.jsxs)(s.p,{children:["Defined in: ",(0,i.jsx)(s.a,{href:"https://github.com/o1-labs/o1js/blob/df1ff77af12d7cbbed4a6167f02815fad4f0dceb/src/lib/provable/int.ts#L1030",children:"lib/provable/int.ts:1030"})]}),"\n",(0,i.jsxs)(s.p,{children:["Asserts that a ",(0,i.jsx)(s.a,{href:"/o1js/2.4.0/api-reference/classes/UInt32",children:"UInt32"})," is greater than or equal to another one."]}),"\n",(0,i.jsx)(s.h4,{id:"parameters-7",children:"Parameters"}),"\n",(0,i.jsx)(s.h5,{id:"y-3",children:"y"}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.a,{href:"/o1js/2.4.0/api-reference/classes/UInt32",children:(0,i.jsx)(s.code,{children:"UInt32"})})}),"\n",(0,i.jsx)(s.h5,{id:"message-1",children:"message?"}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.code,{children:"string"})}),"\n",(0,i.jsx)(s.h4,{id:"returns-9",children:"Returns"}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.code,{children:"void"})}),"\n",(0,i.jsx)(s.hr,{}),"\n",(0,i.jsx)(s.h3,{id:"assertlessthan",children:"assertLessThan()"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-ts",children:"assertLessThan(y: UInt32, message?: string): void\n"})}),"\n",(0,i.jsxs)(s.p,{children:["Defined in: ",(0,i.jsx)(s.a,{href:"https://github.com/o1-labs/o1js/blob/df1ff77af12d7cbbed4a6167f02815fad4f0dceb/src/lib/provable/int.ts#L996",children:"lib/provable/int.ts:996"})]}),"\n",(0,i.jsxs)(s.p,{children:["Asserts that a ",(0,i.jsx)(s.a,{href:"/o1js/2.4.0/api-reference/classes/UInt32",children:"UInt32"})," is less than another one."]}),"\n",(0,i.jsx)(s.h4,{id:"parameters-8",children:"Parameters"}),"\n",(0,i.jsx)(s.h5,{id:"y-4",children:"y"}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.a,{href:"/o1js/2.4.0/api-reference/classes/UInt32",children:(0,i.jsx)(s.code,{children:"UInt32"})})}),"\n",(0,i.jsx)(s.h5,{id:"message-2",children:"message?"}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.code,{children:"string"})}),"\n",(0,i.jsx)(s.h4,{id:"returns-10",children:"Returns"}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.code,{children:"void"})}),"\n",(0,i.jsx)(s.hr,{}),"\n",(0,i.jsx)(s.h3,{id:"assertlessthanorequal",children:"assertLessThanOrEqual()"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-ts",children:"assertLessThanOrEqual(y: UInt32, message?: string): void\n"})}),"\n",(0,i.jsxs)(s.p,{children:["Defined in: ",(0,i.jsx)(s.a,{href:"https://github.com/o1-labs/o1js/blob/df1ff77af12d7cbbed4a6167f02815fad4f0dceb/src/lib/provable/int.ts#L971",children:"lib/provable/int.ts:971"})]}),"\n",(0,i.jsxs)(s.p,{children:["Asserts that a ",(0,i.jsx)(s.a,{href:"/o1js/2.4.0/api-reference/classes/UInt32",children:"UInt32"})," is less than or equal to another one."]}),"\n",(0,i.jsx)(s.h4,{id:"parameters-9",children:"Parameters"}),"\n",(0,i.jsx)(s.h5,{id:"y-5",children:"y"}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.a,{href:"/o1js/2.4.0/api-reference/classes/UInt32",children:(0,i.jsx)(s.code,{children:"UInt32"})})}),"\n",(0,i.jsx)(s.h5,{id:"message-3",children:"message?"}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.code,{children:"string"})}),"\n",(0,i.jsx)(s.h4,{id:"returns-11",children:"Returns"}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.code,{children:"void"})}),"\n",(0,i.jsx)(s.hr,{}),"\n",(0,i.jsx)(s.h3,{id:"div",children:"div()"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-ts",children:"div(y: number | UInt32): UInt32\n"})}),"\n",(0,i.jsxs)(s.p,{children:["Defined in: ",(0,i.jsx)(s.a,{href:"https://github.com/o1-labs/o1js/blob/df1ff77af12d7cbbed4a6167f02815fad4f0dceb/src/lib/provable/int.ts#L742",children:"lib/provable/int.ts:742"})]}),"\n",(0,i.jsx)(s.p,{children:"Integer division."}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.code,{children:"x.div(y)"})," returns the floor of ",(0,i.jsx)(s.code,{children:"x / y"}),", that is, the greatest\n",(0,i.jsx)(s.code,{children:"z"})," such that ",(0,i.jsx)(s.code,{children:"x * y <= x"}),"."]}),"\n",(0,i.jsx)(s.h4,{id:"parameters-10",children:"Parameters"}),"\n",(0,i.jsx)(s.h5,{id:"y-6",children:"y"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.code,{children:"number"})," | ",(0,i.jsx)(s.a,{href:"/o1js/2.4.0/api-reference/classes/UInt32",children:(0,i.jsx)(s.code,{children:"UInt32"})})]}),"\n",(0,i.jsx)(s.h4,{id:"returns-12",children:"Returns"}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.a,{href:"/o1js/2.4.0/api-reference/classes/UInt32",children:(0,i.jsx)(s.code,{children:"UInt32"})})}),"\n",(0,i.jsx)(s.hr,{}),"\n",(0,i.jsx)(s.h3,{id:"divmod",children:"divMod()"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-ts",children:"divMod(y: string | number | UInt32): {\n  quotient: UInt32;\n  rest: UInt32;\n}\n"})}),"\n",(0,i.jsxs)(s.p,{children:["Defined in: ",(0,i.jsx)(s.a,{href:"https://github.com/o1-labs/o1js/blob/df1ff77af12d7cbbed4a6167f02815fad4f0dceb/src/lib/provable/int.ts#L703",children:"lib/provable/int.ts:703"})]}),"\n",(0,i.jsx)(s.p,{children:"Integer division with remainder."}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.code,{children:"x.divMod(y)"})," returns the quotient and the remainder."]}),"\n",(0,i.jsx)(s.h4,{id:"parameters-11",children:"Parameters"}),"\n",(0,i.jsx)(s.h5,{id:"y-7",children:"y"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.code,{children:"string"})," | ",(0,i.jsx)(s.code,{children:"number"})," | ",(0,i.jsx)(s.a,{href:"/o1js/2.4.0/api-reference/classes/UInt32",children:(0,i.jsx)(s.code,{children:"UInt32"})})]}),"\n",(0,i.jsx)(s.h4,{id:"returns-13",children:"Returns"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-ts",children:"{\n  quotient: UInt32;\n  rest: UInt32;\n}\n"})}),"\n",(0,i.jsx)(s.h5,{id:"quotient",children:"quotient"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-ts",children:"quotient: UInt32;\n"})}),"\n",(0,i.jsx)(s.h5,{id:"rest",children:"rest"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-ts",children:"rest: UInt32;\n"})}),"\n",(0,i.jsx)(s.hr,{}),"\n",(0,i.jsx)(s.h3,{id:"equals",children:"equals()"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-ts",children:"equals(x: this): Bool\n"})}),"\n",(0,i.jsxs)(s.p,{children:["Defined in: ",(0,i.jsx)(s.a,{href:"https://github.com/o1-labs/o1js/blob/df1ff77af12d7cbbed4a6167f02815fad4f0dceb/src/lib/provable/types/circuit-value.ts#L117",children:"lib/provable/types/circuit-value.ts:117"})]}),"\n",(0,i.jsx)(s.h4,{id:"parameters-12",children:"Parameters"}),"\n",(0,i.jsx)(s.h5,{id:"x-4",children:"x"}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.code,{children:"this"})}),"\n",(0,i.jsx)(s.h4,{id:"returns-14",children:"Returns"}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.a,{href:"/o1js/2.4.0/api-reference/classes/Bool",children:(0,i.jsx)(s.code,{children:"Bool"})})}),"\n",(0,i.jsx)(s.h4,{id:"inherited-from-1",children:"Inherited from"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-ts",children:"CircuitValue.equals\n"})}),"\n",(0,i.jsx)(s.hr,{}),"\n",(0,i.jsx)(s.h3,{id:"greaterthan",children:"greaterThan()"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-ts",children:"greaterThan(y: UInt32): Bool\n"})}),"\n",(0,i.jsxs)(s.p,{children:["Defined in: ",(0,i.jsx)(s.a,{href:"https://github.com/o1-labs/o1js/blob/df1ff77af12d7cbbed4a6167f02815fad4f0dceb/src/lib/provable/int.ts#L1009",children:"lib/provable/int.ts:1009"})]}),"\n",(0,i.jsxs)(s.p,{children:["Checks if a ",(0,i.jsx)(s.a,{href:"/o1js/2.4.0/api-reference/classes/UInt32",children:"UInt32"})," is greater than another one."]}),"\n",(0,i.jsx)(s.h4,{id:"parameters-13",children:"Parameters"}),"\n",(0,i.jsx)(s.h5,{id:"y-8",children:"y"}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.a,{href:"/o1js/2.4.0/api-reference/classes/UInt32",children:(0,i.jsx)(s.code,{children:"UInt32"})})}),"\n",(0,i.jsx)(s.h4,{id:"returns-15",children:"Returns"}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.a,{href:"/o1js/2.4.0/api-reference/classes/Bool",children:(0,i.jsx)(s.code,{children:"Bool"})})}),"\n",(0,i.jsx)(s.hr,{}),"\n",(0,i.jsx)(s.h3,{id:"greaterthanorequal",children:"greaterThanOrEqual()"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-ts",children:"greaterThanOrEqual(y: UInt32): Bool\n"})}),"\n",(0,i.jsxs)(s.p,{children:["Defined in: ",(0,i.jsx)(s.a,{href:"https://github.com/o1-labs/o1js/blob/df1ff77af12d7cbbed4a6167f02815fad4f0dceb/src/lib/provable/int.ts#L1023",children:"lib/provable/int.ts:1023"})]}),"\n",(0,i.jsxs)(s.p,{children:["Checks if a ",(0,i.jsx)(s.a,{href:"/o1js/2.4.0/api-reference/classes/UInt32",children:"UInt32"})," is greater than or equal to another one."]}),"\n",(0,i.jsx)(s.h4,{id:"parameters-14",children:"Parameters"}),"\n",(0,i.jsx)(s.h5,{id:"y-9",children:"y"}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.a,{href:"/o1js/2.4.0/api-reference/classes/UInt32",children:(0,i.jsx)(s.code,{children:"UInt32"})})}),"\n",(0,i.jsx)(s.h4,{id:"returns-16",children:"Returns"}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.a,{href:"/o1js/2.4.0/api-reference/classes/Bool",children:(0,i.jsx)(s.code,{children:"Bool"})})}),"\n",(0,i.jsx)(s.hr,{}),"\n",(0,i.jsx)(s.h3,{id:"isconstant",children:"isConstant()"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-ts",children:"isConstant(): boolean\n"})}),"\n",(0,i.jsxs)(s.p,{children:["Defined in: ",(0,i.jsx)(s.a,{href:"https://github.com/o1-labs/o1js/blob/df1ff77af12d7cbbed4a6167f02815fad4f0dceb/src/lib/provable/types/circuit-value.ts#L125",children:"lib/provable/types/circuit-value.ts:125"})]}),"\n",(0,i.jsx)(s.h4,{id:"returns-17",children:"Returns"}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.code,{children:"boolean"})}),"\n",(0,i.jsx)(s.h4,{id:"inherited-from-2",children:"Inherited from"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-ts",children:"CircuitValue.isConstant\n"})}),"\n",(0,i.jsx)(s.hr,{}),"\n",(0,i.jsx)(s.h3,{id:"leftshift",children:"leftShift()"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-ts",children:"leftShift(bits: number): UInt32\n"})}),"\n",(0,i.jsxs)(s.p,{children:["Defined in: ",(0,i.jsx)(s.a,{href:"https://github.com/o1-labs/o1js/blob/df1ff77af12d7cbbed4a6167f02815fad4f0dceb/src/lib/provable/int.ts#L883",children:"lib/provable/int.ts:883"})]}),"\n",(0,i.jsxs)(s.p,{children:["Performs a left shift operation on the provided ",(0,i.jsx)(s.a,{href:"/o1js/2.4.0/api-reference/classes/UInt32",children:"UInt32"})," element.\nThis operation is similar to the ",(0,i.jsx)(s.code,{children:"<<"})," shift operation in JavaScript,\nwhere bits are shifted to the left, and the overflowing bits are discarded."]}),"\n",(0,i.jsx)(s.p,{children:"It\u2019s important to note that these operations are performed considering the big-endian 32-bit representation of the number,\nwhere the most significant (32th) bit is on the left end and the least significant bit is on the right end."}),"\n",(0,i.jsx)(s.p,{children:"The operation expects the input to be range checked to 32 bit."}),"\n",(0,i.jsx)(s.h4,{id:"parameters-15",children:"Parameters"}),"\n",(0,i.jsx)(s.h5,{id:"bits",children:"bits"}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.code,{children:"number"})}),"\n",(0,i.jsxs)(s.p,{children:["Amount of bits to shift the ",(0,i.jsx)(s.a,{href:"/o1js/2.4.0/api-reference/classes/UInt32",children:"UInt32"})," element to the left. The amount should be between 0 and 32 (or else the shift will fail)."]}),"\n",(0,i.jsx)(s.h4,{id:"returns-18",children:"Returns"}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.a,{href:"/o1js/2.4.0/api-reference/classes/UInt32",children:(0,i.jsx)(s.code,{children:"UInt32"})})}),"\n",(0,i.jsx)(s.h4,{id:"example-1",children:"Example"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-ts",children:"const x = UInt32.from(0b001100); // 12 in binary\nconst y = x.leftShift(2); // left shift by 2 bits\ny.assertEquals(0b110000); // 48 in binary\n"})}),"\n",(0,i.jsx)(s.hr,{}),"\n",(0,i.jsx)(s.h3,{id:"lessthan",children:"lessThan()"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-ts",children:"lessThan(y: UInt32): Bool\n"})}),"\n",(0,i.jsxs)(s.p,{children:["Defined in: ",(0,i.jsx)(s.a,{href:"https://github.com/o1-labs/o1js/blob/df1ff77af12d7cbbed4a6167f02815fad4f0dceb/src/lib/provable/int.ts#L984",children:"lib/provable/int.ts:984"})]}),"\n",(0,i.jsxs)(s.p,{children:["Checks if a ",(0,i.jsx)(s.a,{href:"/o1js/2.4.0/api-reference/classes/UInt32",children:"UInt32"})," is less than another one."]}),"\n",(0,i.jsx)(s.h4,{id:"parameters-16",children:"Parameters"}),"\n",(0,i.jsx)(s.h5,{id:"y-10",children:"y"}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.a,{href:"/o1js/2.4.0/api-reference/classes/UInt32",children:(0,i.jsx)(s.code,{children:"UInt32"})})}),"\n",(0,i.jsx)(s.h4,{id:"returns-19",children:"Returns"}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.a,{href:"/o1js/2.4.0/api-reference/classes/Bool",children:(0,i.jsx)(s.code,{children:"Bool"})})}),"\n",(0,i.jsx)(s.hr,{}),"\n",(0,i.jsx)(s.h3,{id:"lessthanorequal",children:"lessThanOrEqual()"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-ts",children:"lessThanOrEqual(y: UInt32): Bool\n"})}),"\n",(0,i.jsxs)(s.p,{children:["Defined in: ",(0,i.jsx)(s.a,{href:"https://github.com/o1-labs/o1js/blob/df1ff77af12d7cbbed4a6167f02815fad4f0dceb/src/lib/provable/int.ts#L959",children:"lib/provable/int.ts:959"})]}),"\n",(0,i.jsxs)(s.p,{children:["Checks if a ",(0,i.jsx)(s.a,{href:"/o1js/2.4.0/api-reference/classes/UInt32",children:"UInt32"})," is less than or equal to another one."]}),"\n",(0,i.jsx)(s.h4,{id:"parameters-17",children:"Parameters"}),"\n",(0,i.jsx)(s.h5,{id:"y-11",children:"y"}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.a,{href:"/o1js/2.4.0/api-reference/classes/UInt32",children:(0,i.jsx)(s.code,{children:"UInt32"})})}),"\n",(0,i.jsx)(s.h4,{id:"returns-20",children:"Returns"}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.a,{href:"/o1js/2.4.0/api-reference/classes/Bool",children:(0,i.jsx)(s.code,{children:"Bool"})})}),"\n",(0,i.jsx)(s.hr,{}),"\n",(0,i.jsx)(s.h3,{id:"mod",children:"mod()"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-ts",children:"mod(y: number | UInt32): UInt32\n"})}),"\n",(0,i.jsxs)(s.p,{children:["Defined in: ",(0,i.jsx)(s.a,{href:"https://github.com/o1-labs/o1js/blob/df1ff77af12d7cbbed4a6167f02815fad4f0dceb/src/lib/provable/int.ts#L751",children:"lib/provable/int.ts:751"})]}),"\n",(0,i.jsx)(s.p,{children:"Integer remainder."}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.code,{children:"x.mod(y)"})," returns the value ",(0,i.jsx)(s.code,{children:"z"})," such that ",(0,i.jsx)(s.code,{children:"0 <= z < y"})," and\n",(0,i.jsx)(s.code,{children:"x - z"})," is divisible by ",(0,i.jsx)(s.code,{children:"y"}),"."]}),"\n",(0,i.jsx)(s.h4,{id:"parameters-18",children:"Parameters"}),"\n",(0,i.jsx)(s.h5,{id:"y-12",children:"y"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.code,{children:"number"})," | ",(0,i.jsx)(s.a,{href:"/o1js/2.4.0/api-reference/classes/UInt32",children:(0,i.jsx)(s.code,{children:"UInt32"})})]}),"\n",(0,i.jsx)(s.h4,{id:"returns-21",children:"Returns"}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.a,{href:"/o1js/2.4.0/api-reference/classes/UInt32",children:(0,i.jsx)(s.code,{children:"UInt32"})})}),"\n",(0,i.jsx)(s.hr,{}),"\n",(0,i.jsx)(s.h3,{id:"mul",children:"mul()"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-ts",children:"mul(y: number | UInt32): UInt32\n"})}),"\n",(0,i.jsxs)(s.p,{children:["Defined in: ",(0,i.jsx)(s.a,{href:"https://github.com/o1-labs/o1js/blob/df1ff77af12d7cbbed4a6167f02815fad4f0dceb/src/lib/provable/int.ts#L757",children:"lib/provable/int.ts:757"})]}),"\n",(0,i.jsx)(s.p,{children:"Multiplication with overflow checking."}),"\n",(0,i.jsx)(s.h4,{id:"parameters-19",children:"Parameters"}),"\n",(0,i.jsx)(s.h5,{id:"y-13",children:"y"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.code,{children:"number"})," | ",(0,i.jsx)(s.a,{href:"/o1js/2.4.0/api-reference/classes/UInt32",children:(0,i.jsx)(s.code,{children:"UInt32"})})]}),"\n",(0,i.jsx)(s.h4,{id:"returns-22",children:"Returns"}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.a,{href:"/o1js/2.4.0/api-reference/classes/UInt32",children:(0,i.jsx)(s.code,{children:"UInt32"})})}),"\n",(0,i.jsx)(s.hr,{}),"\n",(0,i.jsx)(s.h3,{id:"not",children:"not()"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-ts",children:"not(): UInt32\n"})}),"\n",(0,i.jsxs)(s.p,{children:["Defined in: ",(0,i.jsx)(s.a,{href:"https://github.com/o1-labs/o1js/blob/df1ff77af12d7cbbed4a6167f02815fad4f0dceb/src/lib/provable/int.ts#L828",children:"lib/provable/int.ts:828"})]}),"\n",(0,i.jsxs)(s.p,{children:["Bitwise NOT gate on ",(0,i.jsx)(s.a,{href:"/o1js/2.4.0/api-reference/classes/UInt32",children:"UInt32"})," elements. Similar to the [bitwise\nNOT ",(0,i.jsx)(s.code,{children:"~"})," operator in JavaScript](",(0,i.jsx)(s.a,{href:"https://developer.mozilla.org/en-US/docs/",children:"https://developer.mozilla.org/en-US/docs/"}),"\nWeb/JavaScript/Reference/Operators/Bitwise_NOT)."]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Note:"})," The NOT gate operates over 32 bit for UInt32 types."]}),"\n",(0,i.jsxs)(s.p,{children:["A NOT gate works by returning ",(0,i.jsx)(s.code,{children:"1"})," in each bit position if the\ncorresponding bit of the operand is ",(0,i.jsx)(s.code,{children:"0"}),", and returning ",(0,i.jsx)(s.code,{children:"0"})," if the\ncorresponding bit of the operand is ",(0,i.jsx)(s.code,{children:"1"}),"."]}),"\n",(0,i.jsx)(s.p,{children:"NOT is implemented as a subtraction of the input from the all one bitmask."}),"\n",(0,i.jsxs)(s.p,{children:["You can find more details about the implementation in the ",(0,i.jsx)(s.a,{href:"https://o1-labs.github.io/proof-systems/specs/kimchi.html?highlight=gates#not",children:"Mina book"})]}),"\n",(0,i.jsx)(s.h4,{id:"returns-23",children:"Returns"}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.a,{href:"/o1js/2.4.0/api-reference/classes/UInt32",children:(0,i.jsx)(s.code,{children:"UInt32"})})}),"\n",(0,i.jsx)(s.h4,{id:"example-2",children:"Example"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-ts",children:"// NOTing 4 bits with the unchecked version\nlet a = UInt32.from(0b0101);\nlet b = a.not();\n\nconsole.log(b.toBigInt().toString(2));\n// 11111111111111111111111111111010\n"})}),"\n",(0,i.jsx)(s.hr,{}),"\n",(0,i.jsx)(s.h3,{id:"or",children:"or()"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-ts",children:"or(x: UInt32): UInt32\n"})}),"\n",(0,i.jsxs)(s.p,{children:["Defined in: ",(0,i.jsx)(s.a,{href:"https://github.com/o1-labs/o1js/blob/df1ff77af12d7cbbed4a6167f02815fad4f0dceb/src/lib/provable/int.ts#L952",children:"lib/provable/int.ts:952"})]}),"\n",(0,i.jsxs)(s.p,{children:["Bitwise OR gadget on ",(0,i.jsx)(s.a,{href:"/o1js/2.4.0/api-reference/classes/UInt32",children:"UInt32"})," elements. Equivalent to the ",(0,i.jsxs)(s.a,{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Bitwise_OR",children:["bitwise OR ",(0,i.jsx)(s.code,{children:"|"})," operator in JavaScript"]}),".\nThe OR gate works by comparing two bits and returning ",(0,i.jsx)(s.code,{children:"1"})," if at least one bit is ",(0,i.jsx)(s.code,{children:"1"}),", and ",(0,i.jsx)(s.code,{children:"0"})," otherwise."]}),"\n",(0,i.jsx)(s.h4,{id:"parameters-20",children:"Parameters"}),"\n",(0,i.jsx)(s.h5,{id:"x-5",children:"x"}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.a,{href:"/o1js/2.4.0/api-reference/classes/UInt32",children:(0,i.jsx)(s.code,{children:"UInt32"})})}),"\n",(0,i.jsx)(s.h4,{id:"returns-24",children:"Returns"}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.a,{href:"/o1js/2.4.0/api-reference/classes/UInt32",children:(0,i.jsx)(s.code,{children:"UInt32"})})}),"\n",(0,i.jsx)(s.h4,{id:"example-3",children:"Example"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-typescript",children:"let a = UInt32.from(3);    // ... 000011\nlet b = UInt32.from(5);    // ... 000101\n\nlet c = a.or(b);    // ... 000111\nc.assertEquals(7);\n"})}),"\n",(0,i.jsx)(s.hr,{}),"\n",(0,i.jsx)(s.h3,{id:"rightshift",children:"rightShift()"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-ts",children:"rightShift(bits: number): UInt32\n"})}),"\n",(0,i.jsxs)(s.p,{children:["Defined in: ",(0,i.jsx)(s.a,{href:"https://github.com/o1-labs/o1js/blob/df1ff77af12d7cbbed4a6167f02815fad4f0dceb/src/lib/provable/int.ts#L906",children:"lib/provable/int.ts:906"})]}),"\n",(0,i.jsxs)(s.p,{children:["Performs a left right operation on the provided ",(0,i.jsx)(s.a,{href:"/o1js/2.4.0/api-reference/classes/UInt32",children:"UInt32"})," element.\nThis operation is similar to the ",(0,i.jsx)(s.code,{children:">>"})," shift operation in JavaScript,\nwhere bits are shifted to the right, and the overflowing bits are discarded."]}),"\n",(0,i.jsx)(s.p,{children:"It\u2019s important to note that these operations are performed considering the big-endian 32-bit representation of the number,\nwhere the most significant (32th) bit is on the left end and the least significant bit is on the right end."}),"\n",(0,i.jsx)(s.h4,{id:"parameters-21",children:"Parameters"}),"\n",(0,i.jsx)(s.h5,{id:"bits-1",children:"bits"}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.code,{children:"number"})}),"\n",(0,i.jsxs)(s.p,{children:["Amount of bits to shift the ",(0,i.jsx)(s.a,{href:"/o1js/2.4.0/api-reference/classes/UInt32",children:"UInt32"})," element to the right. The amount should be between 0 and 32 (or else the shift will fail)."]}),"\n",(0,i.jsx)(s.p,{children:"The operation expects the input to be range checked to 32 bit."}),"\n",(0,i.jsx)(s.h4,{id:"returns-25",children:"Returns"}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.a,{href:"/o1js/2.4.0/api-reference/classes/UInt32",children:(0,i.jsx)(s.code,{children:"UInt32"})})}),"\n",(0,i.jsx)(s.h4,{id:"example-4",children:"Example"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-ts",children:"const x = UInt32.from(0b001100); // 12 in binary\nconst y = x.rightShift(2); // left shift by 2 bits\ny.assertEquals(0b000011); // 48 in binary\n"})}),"\n",(0,i.jsx)(s.hr,{}),"\n",(0,i.jsx)(s.h3,{id:"rotate",children:"rotate()"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-ts",children:'rotate(bits: number, direction: "left" | "right"): UInt32\n'})}),"\n",(0,i.jsxs)(s.p,{children:["Defined in: ",(0,i.jsx)(s.a,{href:"https://github.com/o1-labs/o1js/blob/df1ff77af12d7cbbed4a6167f02815fad4f0dceb/src/lib/provable/int.ts#L860",children:"lib/provable/int.ts:860"})]}),"\n",(0,i.jsxs)(s.p,{children:["A (left and right) rotation operates similarly to the shift operation (",(0,i.jsx)(s.code,{children:"<<"})," for left and ",(0,i.jsx)(s.code,{children:">>"})," for right) in JavaScript,\nwith the distinction that the bits are circulated to the opposite end of a 64-bit representation rather than being discarded.\nFor a left rotation, this means that bits shifted off the left end reappear at the right end.\nConversely, for a right rotation, bits shifted off the right end reappear at the left end."]}),"\n",(0,i.jsxs)(s.p,{children:["It\u2019s important to note that these operations are performed considering the big-endian 64-bit representation of the number,\nwhere the most significant (64th) bit is on the left end and the least significant bit is on the right end.\nThe ",(0,i.jsx)(s.code,{children:"direction"})," parameter is a string that accepts either ",(0,i.jsx)(s.code,{children:"'left'"})," or ",(0,i.jsx)(s.code,{children:"'right'"}),", determining the direction of the rotation."]}),"\n",(0,i.jsxs)(s.p,{children:["To safely use ",(0,i.jsx)(s.code,{children:"rotate()"}),", you need to make sure that the value passed in is range-checked to 64 bits;\nfor example, using ",(0,i.jsx)(s.a,{href:"/o1js/2.4.0/api-reference/variables/Gadgets#rangecheck64",children:"Gadgets.rangeCheck64"}),"."]}),"\n",(0,i.jsxs)(s.p,{children:["You can find more details about the implementation in the ",(0,i.jsx)(s.a,{href:"https://o1-labs.github.io/proof-systems/specs/kimchi.html?highlight=gates#rotation",children:"Mina book"})]}),"\n",(0,i.jsx)(s.h4,{id:"parameters-22",children:"Parameters"}),"\n",(0,i.jsx)(s.h5,{id:"bits-2",children:"bits"}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.code,{children:"number"})}),"\n",(0,i.jsxs)(s.p,{children:["amount of bits to rotate this ",(0,i.jsx)(s.a,{href:"/o1js/2.4.0/api-reference/classes/UInt32",children:"UInt32"})," element with."]}),"\n",(0,i.jsx)(s.h5,{id:"direction",children:"direction"}),"\n",(0,i.jsx)(s.p,{children:"left or right rotation direction."}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.code,{children:'"left"'})," | ",(0,i.jsx)(s.code,{children:'"right"'})]}),"\n",(0,i.jsx)(s.h4,{id:"returns-26",children:"Returns"}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.a,{href:"/o1js/2.4.0/api-reference/classes/UInt32",children:(0,i.jsx)(s.code,{children:"UInt32"})})}),"\n",(0,i.jsx)(s.h4,{id:"example-5",children:"Example"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-ts",children:"const x = UInt32.from(0b001100);\nconst y = x.rotate(2, 'left');\nconst z = x.rotate(2, 'right'); // right rotation by 2 bits\ny.assertEquals(0b110000);\nz.assertEquals(0b000011);\n"})}),"\n",(0,i.jsx)(s.hr,{}),"\n",(0,i.jsx)(s.h3,{id:"sub",children:"sub()"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-ts",children:"sub(y: number | UInt32): UInt32\n"})}),"\n",(0,i.jsxs)(s.p,{children:["Defined in: ",(0,i.jsx)(s.a,{href:"https://github.com/o1-labs/o1js/blob/df1ff77af12d7cbbed4a6167f02815fad4f0dceb/src/lib/provable/int.ts#L773",children:"lib/provable/int.ts:773"})]}),"\n",(0,i.jsx)(s.p,{children:"Subtraction with underflow checking."}),"\n",(0,i.jsx)(s.h4,{id:"parameters-23",children:"Parameters"}),"\n",(0,i.jsx)(s.h5,{id:"y-14",children:"y"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.code,{children:"number"})," | ",(0,i.jsx)(s.a,{href:"/o1js/2.4.0/api-reference/classes/UInt32",children:(0,i.jsx)(s.code,{children:"UInt32"})})]}),"\n",(0,i.jsx)(s.h4,{id:"returns-27",children:"Returns"}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.a,{href:"/o1js/2.4.0/api-reference/classes/UInt32",children:(0,i.jsx)(s.code,{children:"UInt32"})})}),"\n",(0,i.jsx)(s.hr,{}),"\n",(0,i.jsx)(s.h3,{id:"tobigint",children:"toBigint()"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-ts",children:"toBigint(): bigint\n"})}),"\n",(0,i.jsxs)(s.p,{children:["Defined in: ",(0,i.jsx)(s.a,{href:"https://github.com/o1-labs/o1js/blob/df1ff77af12d7cbbed4a6167f02815fad4f0dceb/src/lib/provable/int.ts#L635",children:"lib/provable/int.ts:635"})]}),"\n",(0,i.jsxs)(s.p,{children:["Turns the ",(0,i.jsx)(s.a,{href:"/o1js/2.4.0/api-reference/classes/UInt32",children:"UInt32"})," into a BigInt."]}),"\n",(0,i.jsx)(s.h4,{id:"returns-28",children:"Returns"}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.code,{children:"bigint"})}),"\n",(0,i.jsx)(s.hr,{}),"\n",(0,i.jsx)(s.h3,{id:"tobits",children:"toBits()"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-ts",children:"toBits(length: number): Bool[]\n"})}),"\n",(0,i.jsxs)(s.p,{children:["Defined in: ",(0,i.jsx)(s.a,{href:"https://github.com/o1-labs/o1js/blob/df1ff77af12d7cbbed4a6167f02815fad4f0dceb/src/lib/provable/int.ts#L1084",children:"lib/provable/int.ts:1084"})]}),"\n",(0,i.jsxs)(s.p,{children:["Returns an array of ",(0,i.jsx)(s.a,{href:"/o1js/2.4.0/api-reference/variables/Bool",children:"Bool"})," elements representing ",(0,i.jsx)(s.a,{href:"https://en.wikipedia.org/wiki/Endianness",children:"little endian binary representation"})," of this ",(0,i.jsx)(s.a,{href:"/o1js/2.4.0/api-reference/classes/UInt32",children:"UInt32"})," element."]}),"\n",(0,i.jsxs)(s.p,{children:["If you use the optional ",(0,i.jsx)(s.code,{children:"length"})," argument, proves that the UInt32 element fits in ",(0,i.jsx)(s.code,{children:"length"})," bits.\nThe ",(0,i.jsx)(s.code,{children:"length"})," has to be between 0 and 32 and the method throws if it isn't."]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Warning"}),": The cost of this operation in a zk proof depends on the ",(0,i.jsx)(s.code,{children:"length"})," you specify,\nwhich by default is 32 bits. Prefer to pass a smaller ",(0,i.jsx)(s.code,{children:"length"})," if possible."]}),"\n",(0,i.jsx)(s.h4,{id:"parameters-24",children:"Parameters"}),"\n",(0,i.jsx)(s.h5,{id:"length",children:"length"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.code,{children:"number"})," = ",(0,i.jsx)(s.code,{children:"32"})]}),"\n",(0,i.jsxs)(s.p,{children:["the number of bits to fit the element. If the element does not fit in ",(0,i.jsx)(s.code,{children:"length"})," bits, the functions throws an error."]}),"\n",(0,i.jsx)(s.h4,{id:"returns-29",children:"Returns"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.a,{href:"/o1js/2.4.0/api-reference/classes/Bool",children:(0,i.jsx)(s.code,{children:"Bool"})}),"[]"]}),"\n",(0,i.jsxs)(s.p,{children:["An array of ",(0,i.jsx)(s.a,{href:"/o1js/2.4.0/api-reference/variables/Bool",children:"Bool"})," element representing little endian binary representation of this ",(0,i.jsx)(s.a,{href:"/o1js/2.4.0/api-reference/classes/UInt32",children:"UInt32"}),"."]}),"\n",(0,i.jsx)(s.hr,{}),"\n",(0,i.jsx)(s.h3,{id:"tobytes",children:"toBytes()"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-ts",children:"toBytes(): [UInt8, UInt8, UInt8, UInt8]\n"})}),"\n",(0,i.jsxs)(s.p,{children:["Defined in: ",(0,i.jsx)(s.a,{href:"https://github.com/o1-labs/o1js/blob/df1ff77af12d7cbbed4a6167f02815fad4f0dceb/src/lib/provable/int.ts#L1045",children:"lib/provable/int.ts:1045"})]}),"\n",(0,i.jsx)(s.p,{children:"Split a UInt32 into 4 UInt8s, in little-endian order."}),"\n",(0,i.jsx)(s.h4,{id:"returns-30",children:"Returns"}),"\n",(0,i.jsxs)(s.p,{children:["[",(0,i.jsx)(s.a,{href:"/o1js/2.4.0/api-reference/classes/UInt8",children:(0,i.jsx)(s.code,{children:"UInt8"})}),", ",(0,i.jsx)(s.a,{href:"/o1js/2.4.0/api-reference/classes/UInt8",children:(0,i.jsx)(s.code,{children:"UInt8"})}),", ",(0,i.jsx)(s.a,{href:"/o1js/2.4.0/api-reference/classes/UInt8",children:(0,i.jsx)(s.code,{children:"UInt8"})}),", ",(0,i.jsx)(s.a,{href:"/o1js/2.4.0/api-reference/classes/UInt8",children:(0,i.jsx)(s.code,{children:"UInt8"})}),"]"]}),"\n",(0,i.jsx)(s.hr,{}),"\n",(0,i.jsx)(s.h3,{id:"tobytesbe",children:"toBytesBE()"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-ts",children:"toBytesBE(): [UInt8, UInt8, UInt8, UInt8]\n"})}),"\n",(0,i.jsxs)(s.p,{children:["Defined in: ",(0,i.jsx)(s.a,{href:"https://github.com/o1-labs/o1js/blob/df1ff77af12d7cbbed4a6167f02815fad4f0dceb/src/lib/provable/int.ts#L1052",children:"lib/provable/int.ts:1052"})]}),"\n",(0,i.jsx)(s.p,{children:"Split a UInt32 into 4 UInt8s, in big-endian order."}),"\n",(0,i.jsx)(s.h4,{id:"returns-31",children:"Returns"}),"\n",(0,i.jsxs)(s.p,{children:["[",(0,i.jsx)(s.a,{href:"/o1js/2.4.0/api-reference/classes/UInt8",children:(0,i.jsx)(s.code,{children:"UInt8"})}),", ",(0,i.jsx)(s.a,{href:"/o1js/2.4.0/api-reference/classes/UInt8",children:(0,i.jsx)(s.code,{children:"UInt8"})}),", ",(0,i.jsx)(s.a,{href:"/o1js/2.4.0/api-reference/classes/UInt8",children:(0,i.jsx)(s.code,{children:"UInt8"})}),", ",(0,i.jsx)(s.a,{href:"/o1js/2.4.0/api-reference/classes/UInt8",children:(0,i.jsx)(s.code,{children:"UInt8"})}),"]"]}),"\n",(0,i.jsx)(s.hr,{}),"\n",(0,i.jsx)(s.h3,{id:"toconstant",children:"toConstant()"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-ts",children:"toConstant(): this\n"})}),"\n",(0,i.jsxs)(s.p,{children:["Defined in: ",(0,i.jsx)(s.a,{href:"https://github.com/o1-labs/o1js/blob/df1ff77af12d7cbbed4a6167f02815fad4f0dceb/src/lib/provable/types/circuit-value.ts#L113",children:"lib/provable/types/circuit-value.ts:113"})]}),"\n",(0,i.jsx)(s.h4,{id:"returns-32",children:"Returns"}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.code,{children:"this"})}),"\n",(0,i.jsx)(s.h4,{id:"inherited-from-3",children:"Inherited from"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-ts",children:"CircuitValue.toConstant\n"})}),"\n",(0,i.jsx)(s.hr,{}),"\n",(0,i.jsx)(s.h3,{id:"tofields",children:"toFields()"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-ts",children:"toFields(): Field[]\n"})}),"\n",(0,i.jsxs)(s.p,{children:["Defined in: ",(0,i.jsx)(s.a,{href:"https://github.com/o1-labs/o1js/blob/df1ff77af12d7cbbed4a6167f02815fad4f0dceb/src/lib/provable/types/circuit-value.ts#L79",children:"lib/provable/types/circuit-value.ts:79"})]}),"\n",(0,i.jsx)(s.h4,{id:"returns-33",children:"Returns"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.a,{href:"/o1js/2.4.0/api-reference/classes/Field",children:(0,i.jsx)(s.code,{children:"Field"})}),"[]"]}),"\n",(0,i.jsx)(s.h4,{id:"inherited-from-4",children:"Inherited from"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-ts",children:"CircuitValue.toFields\n"})}),"\n",(0,i.jsx)(s.hr,{}),"\n",(0,i.jsx)(s.h3,{id:"tojson",children:"toJSON()"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-ts",children:"toJSON(): any\n"})}),"\n",(0,i.jsxs)(s.p,{children:["Defined in: ",(0,i.jsx)(s.a,{href:"https://github.com/o1-labs/o1js/blob/df1ff77af12d7cbbed4a6167f02815fad4f0dceb/src/lib/provable/types/circuit-value.ts#L109",children:"lib/provable/types/circuit-value.ts:109"})]}),"\n",(0,i.jsx)(s.h4,{id:"returns-34",children:"Returns"}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.code,{children:"any"})}),"\n",(0,i.jsx)(s.h4,{id:"inherited-from-5",children:"Inherited from"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-ts",children:"CircuitValue.toJSON\n"})}),"\n",(0,i.jsx)(s.hr,{}),"\n",(0,i.jsx)(s.h3,{id:"tostring",children:"toString()"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-ts",children:"toString(): string\n"})}),"\n",(0,i.jsxs)(s.p,{children:["Defined in: ",(0,i.jsx)(s.a,{href:"https://github.com/o1-labs/o1js/blob/df1ff77af12d7cbbed4a6167f02815fad4f0dceb/src/lib/provable/int.ts#L629",children:"lib/provable/int.ts:629"})]}),"\n",(0,i.jsxs)(s.p,{children:["Turns the ",(0,i.jsx)(s.a,{href:"/o1js/2.4.0/api-reference/classes/UInt32",children:"UInt32"})," into a string."]}),"\n",(0,i.jsx)(s.h4,{id:"returns-35",children:"Returns"}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.code,{children:"string"})}),"\n",(0,i.jsx)(s.hr,{}),"\n",(0,i.jsx)(s.h3,{id:"touint64",children:"toUInt64()"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-ts",children:"toUInt64(): UInt64\n"})}),"\n",(0,i.jsxs)(s.p,{children:["Defined in: ",(0,i.jsx)(s.a,{href:"https://github.com/o1-labs/o1js/blob/df1ff77af12d7cbbed4a6167f02815fad4f0dceb/src/lib/provable/int.ts#L641",children:"lib/provable/int.ts:641"})]}),"\n",(0,i.jsxs)(s.p,{children:["Turns the ",(0,i.jsx)(s.a,{href:"/o1js/2.4.0/api-reference/classes/UInt32",children:"UInt32"})," into a ",(0,i.jsx)(s.a,{href:"/o1js/2.4.0/api-reference/classes/UInt64",children:"UInt64"}),"."]}),"\n",(0,i.jsx)(s.h4,{id:"returns-36",children:"Returns"}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.a,{href:"/o1js/2.4.0/api-reference/classes/UInt64",children:(0,i.jsx)(s.code,{children:"UInt64"})})}),"\n",(0,i.jsx)(s.hr,{}),"\n",(0,i.jsx)(s.h3,{id:"xor",children:"xor()"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-ts",children:"xor(x: UInt32): UInt32\n"})}),"\n",(0,i.jsxs)(s.p,{children:["Defined in: ",(0,i.jsx)(s.a,{href:"https://github.com/o1-labs/o1js/blob/df1ff77af12d7cbbed4a6167f02815fad4f0dceb/src/lib/provable/int.ts#L798",children:"lib/provable/int.ts:798"})]}),"\n",(0,i.jsxs)(s.p,{children:["Bitwise XOR gadget on ",(0,i.jsx)(s.a,{href:"/o1js/2.4.0/api-reference/classes/UInt32",children:"UInt32"})," elements. Equivalent to the ",(0,i.jsxs)(s.a,{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Bitwise_XOR",children:["bitwise XOR ",(0,i.jsx)(s.code,{children:"^"})," operator in JavaScript"]}),".\nA XOR gate works by comparing two bits and returning ",(0,i.jsx)(s.code,{children:"1"})," if two bits differ, and ",(0,i.jsx)(s.code,{children:"0"})," if two bits are equal."]}),"\n",(0,i.jsx)(s.p,{children:"This gadget builds a chain of XOR gates recursively."}),"\n",(0,i.jsxs)(s.p,{children:["You can find more details about the implementation in the ",(0,i.jsx)(s.a,{href:"https://o1-labs.github.io/proof-systems/specs/kimchi.html?highlight=gates#xor-1",children:"Mina book"})]}),"\n",(0,i.jsx)(s.h4,{id:"parameters-25",children:"Parameters"}),"\n",(0,i.jsx)(s.h5,{id:"x-6",children:"x"}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.a,{href:"/o1js/2.4.0/api-reference/classes/UInt32",children:(0,i.jsx)(s.code,{children:"UInt32"})})}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.a,{href:"/o1js/2.4.0/api-reference/classes/UInt32",children:"UInt32"})," element to compare."]}),"\n",(0,i.jsx)(s.h4,{id:"returns-37",children:"Returns"}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.a,{href:"/o1js/2.4.0/api-reference/classes/UInt32",children:(0,i.jsx)(s.code,{children:"UInt32"})})}),"\n",(0,i.jsx)(s.h4,{id:"example-6",children:"Example"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-ts",children:"let a = UInt32.from(0b0101);\nlet b = UInt32.from(0b0011);\n\nlet c = a.xor(b);\nc.assertEquals(0b0110);\n"})}),"\n",(0,i.jsx)(s.hr,{}),"\n",(0,i.jsx)(s.h3,{id:"check",children:"check()"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-ts",children:"static check(x: UInt32): void\n"})}),"\n",(0,i.jsxs)(s.p,{children:["Defined in: ",(0,i.jsx)(s.a,{href:"https://github.com/o1-labs/o1js/blob/df1ff77af12d7cbbed4a6167f02815fad4f0dceb/src/lib/provable/int.ts#L646",children:"lib/provable/int.ts:646"})]}),"\n",(0,i.jsx)(s.h4,{id:"parameters-26",children:"Parameters"}),"\n",(0,i.jsx)(s.h5,{id:"x-7",children:"x"}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.a,{href:"/o1js/2.4.0/api-reference/classes/UInt32",children:(0,i.jsx)(s.code,{children:"UInt32"})})}),"\n",(0,i.jsx)(s.h4,{id:"returns-38",children:"Returns"}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.code,{children:"void"})}),"\n",(0,i.jsx)(s.h4,{id:"overrides-1",children:"Overrides"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-ts",children:"CircuitValue.check\n"})}),"\n",(0,i.jsx)(s.hr,{}),"\n",(0,i.jsx)(s.h3,{id:"empty",children:"empty()"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-ts",children:"static empty<T>(): InstanceType<T>\n"})}),"\n",(0,i.jsxs)(s.p,{children:["Defined in: ",(0,i.jsx)(s.a,{href:"https://github.com/o1-labs/o1js/blob/df1ff77af12d7cbbed4a6167f02815fad4f0dceb/src/lib/provable/types/circuit-value.ts#L205",children:"lib/provable/types/circuit-value.ts:205"})]}),"\n",(0,i.jsx)(s.h4,{id:"type-parameters",children:"Type Parameters"}),"\n",(0,i.jsxs)(s.p,{children:["\u2022 ",(0,i.jsx)(s.strong,{children:"T"})," ",(0,i.jsx)(s.em,{children:"extends"})," ",(0,i.jsx)(s.code,{children:"AnyConstructor"})]}),"\n",(0,i.jsx)(s.h4,{id:"returns-39",children:"Returns"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.code,{children:"InstanceType"}),"<",(0,i.jsx)(s.code,{children:"T"}),">"]}),"\n",(0,i.jsx)(s.h4,{id:"inherited-from-6",children:"Inherited from"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-ts",children:"CircuitValue.empty\n"})}),"\n",(0,i.jsx)(s.hr,{}),"\n",(0,i.jsx)(s.h3,{id:"from",children:"from()"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-ts",children:"static from(x: string | number | bigint | UInt32): UInt32\n"})}),"\n",(0,i.jsxs)(s.p,{children:["Defined in: ",(0,i.jsx)(s.a,{href:"https://github.com/o1-labs/o1js/blob/df1ff77af12d7cbbed4a6167f02815fad4f0dceb/src/lib/provable/int.ts#L679",children:"lib/provable/int.ts:679"})]}),"\n",(0,i.jsxs)(s.p,{children:["Creates a new ",(0,i.jsx)(s.a,{href:"/o1js/2.4.0/api-reference/classes/UInt32",children:"UInt32"}),"."]}),"\n",(0,i.jsx)(s.h4,{id:"parameters-27",children:"Parameters"}),"\n",(0,i.jsx)(s.h5,{id:"x-8",children:"x"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.code,{children:"string"})," | ",(0,i.jsx)(s.code,{children:"number"})," | ",(0,i.jsx)(s.code,{children:"bigint"})," | ",(0,i.jsx)(s.a,{href:"/o1js/2.4.0/api-reference/classes/UInt32",children:(0,i.jsx)(s.code,{children:"UInt32"})})]}),"\n",(0,i.jsx)(s.h4,{id:"returns-40",children:"Returns"}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.a,{href:"/o1js/2.4.0/api-reference/classes/UInt32",children:(0,i.jsx)(s.code,{children:"UInt32"})})}),"\n",(0,i.jsx)(s.hr,{}),"\n",(0,i.jsx)(s.h3,{id:"frombits",children:"fromBits()"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-ts",children:"static fromBits(bits: (boolean | Bool)[]): UInt32\n"})}),"\n",(0,i.jsxs)(s.p,{children:["Defined in: ",(0,i.jsx)(s.a,{href:"https://github.com/o1-labs/o1js/blob/df1ff77af12d7cbbed4a6167f02815fad4f0dceb/src/lib/provable/int.ts#L1108",children:"lib/provable/int.ts:1108"})]}),"\n",(0,i.jsxs)(s.p,{children:["Convert a bit array into a ",(0,i.jsx)(s.a,{href:"/o1js/2.4.0/api-reference/classes/UInt32",children:"UInt32"})," element using ",(0,i.jsx)(s.a,{href:"https://en.wikipedia.org/wiki/Endianness",children:"little endian binary representation"})]}),"\n",(0,i.jsx)(s.p,{children:"The method throws if the given bits do not fit in a single UInt32 element. In this case, no more than 32 bits are allowed."}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Important"}),": If the given ",(0,i.jsx)(s.code,{children:"bits"})," array is an array of ",(0,i.jsx)(s.code,{children:"booleans"})," or ",(0,i.jsx)(s.a,{href:"/o1js/2.4.0/api-reference/variables/Bool",children:"Bool"})," elements that all are ",(0,i.jsx)(s.code,{children:"constant"}),",\nthe resulting ",(0,i.jsx)(s.a,{href:"/o1js/2.4.0/api-reference/classes/UInt32",children:"UInt32"})," element will be a constant as well. Or else, if the given array is a mixture of constants and variables of ",(0,i.jsx)(s.a,{href:"/o1js/2.4.0/api-reference/variables/Bool",children:"Bool"})," type,\nthe resulting ",(0,i.jsx)(s.a,{href:"/o1js/2.4.0/api-reference/classes/UInt32",children:"UInt32"})," will be a variable as well."]}),"\n",(0,i.jsx)(s.h4,{id:"parameters-28",children:"Parameters"}),"\n",(0,i.jsx)(s.h5,{id:"bits-3",children:"bits"}),"\n",(0,i.jsxs)(s.p,{children:["(",(0,i.jsx)(s.code,{children:"boolean"})," | ",(0,i.jsx)(s.a,{href:"/o1js/2.4.0/api-reference/classes/Bool",children:(0,i.jsx)(s.code,{children:"Bool"})}),")[]"]}),"\n",(0,i.jsxs)(s.p,{children:["An array of ",(0,i.jsx)(s.a,{href:"/o1js/2.4.0/api-reference/variables/Bool",children:"Bool"})," or ",(0,i.jsx)(s.code,{children:"boolean"})," type."]}),"\n",(0,i.jsx)(s.h4,{id:"returns-41",children:"Returns"}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.a,{href:"/o1js/2.4.0/api-reference/classes/UInt32",children:(0,i.jsx)(s.code,{children:"UInt32"})})}),"\n",(0,i.jsxs)(s.p,{children:["A ",(0,i.jsx)(s.a,{href:"/o1js/2.4.0/api-reference/classes/UInt32",children:"UInt32"})," element matching the ",(0,i.jsx)(s.a,{href:"https://en.wikipedia.org/wiki/Endianness",children:"little endian binary representation"})," of the given ",(0,i.jsx)(s.code,{children:"bits"})," array."]}),"\n",(0,i.jsx)(s.hr,{}),"\n",(0,i.jsx)(s.h3,{id:"frombytes",children:"fromBytes()"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-ts",children:"static fromBytes(bytes: UInt8[]): UInt32\n"})}),"\n",(0,i.jsxs)(s.p,{children:["Defined in: ",(0,i.jsx)(s.a,{href:"https://github.com/o1-labs/o1js/blob/df1ff77af12d7cbbed4a6167f02815fad4f0dceb/src/lib/provable/int.ts#L1059",children:"lib/provable/int.ts:1059"})]}),"\n",(0,i.jsx)(s.p,{children:"Combine 4 UInt8s into a UInt32, in little-endian order."}),"\n",(0,i.jsx)(s.h4,{id:"parameters-29",children:"Parameters"}),"\n",(0,i.jsx)(s.h5,{id:"bytes",children:"bytes"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.a,{href:"/o1js/2.4.0/api-reference/classes/UInt8",children:(0,i.jsx)(s.code,{children:"UInt8"})}),"[]"]}),"\n",(0,i.jsx)(s.h4,{id:"returns-42",children:"Returns"}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.a,{href:"/o1js/2.4.0/api-reference/classes/UInt32",children:(0,i.jsx)(s.code,{children:"UInt32"})})}),"\n",(0,i.jsx)(s.hr,{}),"\n",(0,i.jsx)(s.h3,{id:"frombytesbe",children:"fromBytesBE()"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-ts",children:"static fromBytesBE(bytes: UInt8[]): UInt32\n"})}),"\n",(0,i.jsxs)(s.p,{children:["Defined in: ",(0,i.jsx)(s.a,{href:"https://github.com/o1-labs/o1js/blob/df1ff77af12d7cbbed4a6167f02815fad4f0dceb/src/lib/provable/int.ts#L1067",children:"lib/provable/int.ts:1067"})]}),"\n",(0,i.jsx)(s.p,{children:"Combine 4 UInt8s into a UInt32, in big-endian order."}),"\n",(0,i.jsx)(s.h4,{id:"parameters-30",children:"Parameters"}),"\n",(0,i.jsx)(s.h5,{id:"bytes-1",children:"bytes"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.a,{href:"/o1js/2.4.0/api-reference/classes/UInt8",children:(0,i.jsx)(s.code,{children:"UInt8"})}),"[]"]}),"\n",(0,i.jsx)(s.h4,{id:"returns-43",children:"Returns"}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.a,{href:"/o1js/2.4.0/api-reference/classes/UInt32",children:(0,i.jsx)(s.code,{children:"UInt32"})})}),"\n",(0,i.jsx)(s.hr,{}),"\n",(0,i.jsx)(s.h3,{id:"fromfields",children:"fromFields()"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-ts",children:"static fromFields<T>(this: T, xs: Field[]): InstanceType<T>\n"})}),"\n",(0,i.jsxs)(s.p,{children:["Defined in: ",(0,i.jsx)(s.a,{href:"https://github.com/o1-labs/o1js/blob/df1ff77af12d7cbbed4a6167f02815fad4f0dceb/src/lib/provable/types/circuit-value.ts#L129",children:"lib/provable/types/circuit-value.ts:129"})]}),"\n",(0,i.jsx)(s.h4,{id:"type-parameters-1",children:"Type Parameters"}),"\n",(0,i.jsxs)(s.p,{children:["\u2022 ",(0,i.jsx)(s.strong,{children:"T"})," ",(0,i.jsx)(s.em,{children:"extends"})," ",(0,i.jsx)(s.code,{children:"AnyConstructor"})]}),"\n",(0,i.jsx)(s.h4,{id:"parameters-31",children:"Parameters"}),"\n",(0,i.jsx)(s.h5,{id:"this",children:"this"}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.code,{children:"T"})}),"\n",(0,i.jsx)(s.h5,{id:"xs",children:"xs"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.a,{href:"/o1js/2.4.0/api-reference/classes/Field",children:(0,i.jsx)(s.code,{children:"Field"})}),"[]"]}),"\n",(0,i.jsx)(s.h4,{id:"returns-44",children:"Returns"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.code,{children:"InstanceType"}),"<",(0,i.jsx)(s.code,{children:"T"}),">"]}),"\n",(0,i.jsx)(s.h4,{id:"inherited-from-7",children:"Inherited from"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-ts",children:"CircuitValue.fromFields\n"})}),"\n",(0,i.jsx)(s.hr,{}),"\n",(0,i.jsx)(s.h3,{id:"fromjson",children:"fromJSON()"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-ts",children:"static fromJSON<T>(x: string): InstanceType<T>\n"})}),"\n",(0,i.jsxs)(s.p,{children:["Defined in: ",(0,i.jsx)(s.a,{href:"https://github.com/o1-labs/o1js/blob/df1ff77af12d7cbbed4a6167f02815fad4f0dceb/src/lib/provable/int.ts#L662",children:"lib/provable/int.ts:662"})]}),"\n",(0,i.jsx)(s.p,{children:"Decodes a JSON-like object into this structure."}),"\n",(0,i.jsx)(s.h4,{id:"type-parameters-2",children:"Type Parameters"}),"\n",(0,i.jsxs)(s.p,{children:["\u2022 ",(0,i.jsx)(s.strong,{children:"T"})," ",(0,i.jsx)(s.em,{children:"extends"})," ",(0,i.jsx)(s.code,{children:"AnyConstructor"})]}),"\n",(0,i.jsx)(s.h4,{id:"parameters-32",children:"Parameters"}),"\n",(0,i.jsx)(s.h5,{id:"x-9",children:"x"}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.code,{children:"string"})}),"\n",(0,i.jsx)(s.h4,{id:"returns-45",children:"Returns"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.code,{children:"InstanceType"}),"<",(0,i.jsx)(s.code,{children:"T"}),">"]}),"\n",(0,i.jsx)(s.h4,{id:"overrides-2",children:"Overrides"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-ts",children:"CircuitValue.fromJSON\n"})}),"\n",(0,i.jsx)(s.hr,{}),"\n",(0,i.jsx)(s.h3,{id:"fromobject",children:"fromObject()"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-ts",children:"static fromObject<T>(this: T, value: NonMethods<InstanceType<T>>): InstanceType<T>\n"})}),"\n",(0,i.jsxs)(s.p,{children:["Defined in: ",(0,i.jsx)(s.a,{href:"https://github.com/o1-labs/o1js/blob/df1ff77af12d7cbbed4a6167f02815fad4f0dceb/src/lib/provable/types/circuit-value.ts#L30",children:"lib/provable/types/circuit-value.ts:30"})]}),"\n",(0,i.jsx)(s.h4,{id:"type-parameters-3",children:"Type Parameters"}),"\n",(0,i.jsxs)(s.p,{children:["\u2022 ",(0,i.jsx)(s.strong,{children:"T"})," ",(0,i.jsx)(s.em,{children:"extends"})," ",(0,i.jsx)(s.code,{children:"AnyConstructor"})]}),"\n",(0,i.jsx)(s.h4,{id:"parameters-33",children:"Parameters"}),"\n",(0,i.jsx)(s.h5,{id:"this-1",children:"this"}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.code,{children:"T"})}),"\n",(0,i.jsx)(s.h5,{id:"value-1",children:"value"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.code,{children:"NonMethods"}),"<",(0,i.jsx)(s.code,{children:"InstanceType"}),"<",(0,i.jsx)(s.code,{children:"T"}),">>"]}),"\n",(0,i.jsx)(s.h4,{id:"returns-46",children:"Returns"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.code,{children:"InstanceType"}),"<",(0,i.jsx)(s.code,{children:"T"}),">"]}),"\n",(0,i.jsx)(s.h4,{id:"inherited-from-8",children:"Inherited from"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-ts",children:"CircuitValue.fromObject\n"})}),"\n",(0,i.jsx)(s.hr,{}),"\n",(0,i.jsx)(s.h3,{id:"fromvalue",children:"fromValue()"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-ts",children:"static fromValue<T>(x: number | bigint | UInt32): InstanceType<T>\n"})}),"\n",(0,i.jsxs)(s.p,{children:["Defined in: ",(0,i.jsx)(s.a,{href:"https://github.com/o1-labs/o1js/blob/df1ff77af12d7cbbed4a6167f02815fad4f0dceb/src/lib/provable/int.ts#L1038",children:"lib/provable/int.ts:1038"})]}),"\n",(0,i.jsx)(s.h4,{id:"type-parameters-4",children:"Type Parameters"}),"\n",(0,i.jsxs)(s.p,{children:["\u2022 ",(0,i.jsx)(s.strong,{children:"T"})," ",(0,i.jsx)(s.em,{children:"extends"})," ",(0,i.jsx)(s.code,{children:"AnyConstructor"})]}),"\n",(0,i.jsx)(s.h4,{id:"parameters-34",children:"Parameters"}),"\n",(0,i.jsx)(s.h5,{id:"x-10",children:"x"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.code,{children:"number"})," | ",(0,i.jsx)(s.code,{children:"bigint"})," | ",(0,i.jsx)(s.a,{href:"/o1js/2.4.0/api-reference/classes/UInt32",children:(0,i.jsx)(s.code,{children:"UInt32"})})]}),"\n",(0,i.jsx)(s.h4,{id:"returns-47",children:"Returns"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.code,{children:"InstanceType"}),"<",(0,i.jsx)(s.code,{children:"T"}),">"]}),"\n",(0,i.jsx)(s.h4,{id:"overrides-3",children:"Overrides"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-ts",children:"CircuitValue.fromValue\n"})}),"\n",(0,i.jsx)(s.hr,{}),"\n",(0,i.jsx)(s.h3,{id:"maxint",children:"MAXINT()"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-ts",children:"static MAXINT(): UInt32\n"})}),"\n",(0,i.jsxs)(s.p,{children:["Defined in: ",(0,i.jsx)(s.a,{href:"https://github.com/o1-labs/o1js/blob/df1ff77af12d7cbbed4a6167f02815fad4f0dceb/src/lib/provable/int.ts#L687",children:"lib/provable/int.ts:687"})]}),"\n",(0,i.jsxs)(s.p,{children:["Creates a ",(0,i.jsx)(s.a,{href:"/o1js/2.4.0/api-reference/classes/UInt32",children:"UInt32"})," with a value of 4,294,967,295."]}),"\n",(0,i.jsx)(s.h4,{id:"returns-48",children:"Returns"}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.a,{href:"/o1js/2.4.0/api-reference/classes/UInt32",children:(0,i.jsx)(s.code,{children:"UInt32"})})}),"\n",(0,i.jsx)(s.hr,{}),"\n",(0,i.jsx)(s.h3,{id:"sizeinfields",children:"sizeInFields()"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-ts",children:"static sizeInFields(): number\n"})}),"\n",(0,i.jsxs)(s.p,{children:["Defined in: ",(0,i.jsx)(s.a,{href:"https://github.com/o1-labs/o1js/blob/df1ff77af12d7cbbed4a6167f02815fad4f0dceb/src/lib/provable/types/circuit-value.ts#L37",children:"lib/provable/types/circuit-value.ts:37"})]}),"\n",(0,i.jsx)(s.h4,{id:"returns-49",children:"Returns"}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.code,{children:"number"})}),"\n",(0,i.jsx)(s.h4,{id:"inherited-from-9",children:"Inherited from"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-ts",children:"CircuitValue.sizeInFields\n"})}),"\n",(0,i.jsx)(s.hr,{}),"\n",(0,i.jsx)(s.h3,{id:"toauxiliary",children:"toAuxiliary()"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-ts",children:"static toAuxiliary(): []\n"})}),"\n",(0,i.jsxs)(s.p,{children:["Defined in: ",(0,i.jsx)(s.a,{href:"https://github.com/o1-labs/o1js/blob/df1ff77af12d7cbbed4a6167f02815fad4f0dceb/src/lib/provable/types/circuit-value.ts#L56",children:"lib/provable/types/circuit-value.ts:56"})]}),"\n",(0,i.jsx)(s.h4,{id:"returns-50",children:"Returns"}),"\n",(0,i.jsx)(s.p,{children:"[]"}),"\n",(0,i.jsx)(s.h4,{id:"inherited-from-10",children:"Inherited from"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-ts",children:"CircuitValue.toAuxiliary\n"})}),"\n",(0,i.jsx)(s.hr,{}),"\n",(0,i.jsx)(s.h3,{id:"tocanonical",children:"toCanonical()"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-ts",children:"static toCanonical<T>(this: T, value: InstanceType<T>): InstanceType<T>\n"})}),"\n",(0,i.jsxs)(s.p,{children:["Defined in: ",(0,i.jsx)(s.a,{href:"https://github.com/o1-labs/o1js/blob/df1ff77af12d7cbbed4a6167f02815fad4f0dceb/src/lib/provable/types/circuit-value.ts#L161",children:"lib/provable/types/circuit-value.ts:161"})]}),"\n",(0,i.jsx)(s.h4,{id:"type-parameters-5",children:"Type Parameters"}),"\n",(0,i.jsxs)(s.p,{children:["\u2022 ",(0,i.jsx)(s.strong,{children:"T"})," ",(0,i.jsx)(s.em,{children:"extends"})," ",(0,i.jsx)(s.code,{children:"AnyConstructor"})]}),"\n",(0,i.jsx)(s.h4,{id:"parameters-35",children:"Parameters"}),"\n",(0,i.jsx)(s.h5,{id:"this-2",children:"this"}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.code,{children:"T"})}),"\n",(0,i.jsx)(s.h5,{id:"value-2",children:"value"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.code,{children:"InstanceType"}),"<",(0,i.jsx)(s.code,{children:"T"}),">"]}),"\n",(0,i.jsx)(s.h4,{id:"returns-51",children:"Returns"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.code,{children:"InstanceType"}),"<",(0,i.jsx)(s.code,{children:"T"}),">"]}),"\n",(0,i.jsx)(s.h4,{id:"inherited-from-11",children:"Inherited from"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-ts",children:"CircuitValue.toCanonical\n"})}),"\n",(0,i.jsx)(s.hr,{}),"\n",(0,i.jsx)(s.h3,{id:"toconstant-1",children:"toConstant()"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-ts",children:"static toConstant<T>(this: T, t: InstanceType<T>): InstanceType<T>\n"})}),"\n",(0,i.jsxs)(s.p,{children:["Defined in: ",(0,i.jsx)(s.a,{href:"https://github.com/o1-labs/o1js/blob/df1ff77af12d7cbbed4a6167f02815fad4f0dceb/src/lib/provable/types/circuit-value.ts#L170",children:"lib/provable/types/circuit-value.ts:170"})]}),"\n",(0,i.jsx)(s.h4,{id:"type-parameters-6",children:"Type Parameters"}),"\n",(0,i.jsxs)(s.p,{children:["\u2022 ",(0,i.jsx)(s.strong,{children:"T"})," ",(0,i.jsx)(s.em,{children:"extends"})," ",(0,i.jsx)(s.code,{children:"AnyConstructor"})]}),"\n",(0,i.jsx)(s.h4,{id:"parameters-36",children:"Parameters"}),"\n",(0,i.jsx)(s.h5,{id:"this-3",children:"this"}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.code,{children:"T"})}),"\n",(0,i.jsx)(s.h5,{id:"t",children:"t"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.code,{children:"InstanceType"}),"<",(0,i.jsx)(s.code,{children:"T"}),">"]}),"\n",(0,i.jsx)(s.h4,{id:"returns-52",children:"Returns"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.code,{children:"InstanceType"}),"<",(0,i.jsx)(s.code,{children:"T"}),">"]}),"\n",(0,i.jsx)(s.h4,{id:"inherited-from-12",children:"Inherited from"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-ts",children:"CircuitValue.toConstant\n"})}),"\n",(0,i.jsx)(s.hr,{}),"\n",(0,i.jsx)(s.h3,{id:"tofields-1",children:"toFields()"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-ts",children:"static toFields<T>(this: T, v: InstanceType<T>): Field[]\n"})}),"\n",(0,i.jsxs)(s.p,{children:["Defined in: ",(0,i.jsx)(s.a,{href:"https://github.com/o1-labs/o1js/blob/df1ff77af12d7cbbed4a6167f02815fad4f0dceb/src/lib/provable/types/circuit-value.ts#L42",children:"lib/provable/types/circuit-value.ts:42"})]}),"\n",(0,i.jsx)(s.h4,{id:"type-parameters-7",children:"Type Parameters"}),"\n",(0,i.jsxs)(s.p,{children:["\u2022 ",(0,i.jsx)(s.strong,{children:"T"})," ",(0,i.jsx)(s.em,{children:"extends"})," ",(0,i.jsx)(s.code,{children:"AnyConstructor"})]}),"\n",(0,i.jsx)(s.h4,{id:"parameters-37",children:"Parameters"}),"\n",(0,i.jsx)(s.h5,{id:"this-4",children:"this"}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.code,{children:"T"})}),"\n",(0,i.jsx)(s.h5,{id:"v",children:"v"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.code,{children:"InstanceType"}),"<",(0,i.jsx)(s.code,{children:"T"}),">"]}),"\n",(0,i.jsx)(s.h4,{id:"returns-53",children:"Returns"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.a,{href:"/o1js/2.4.0/api-reference/classes/Field",children:(0,i.jsx)(s.code,{children:"Field"})}),"[]"]}),"\n",(0,i.jsx)(s.h4,{id:"inherited-from-13",children:"Inherited from"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-ts",children:"CircuitValue.toFields\n"})}),"\n",(0,i.jsx)(s.hr,{}),"\n",(0,i.jsx)(s.h3,{id:"toinput",children:"toInput()"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-ts",children:"static toInput(x: UInt32): HashInput\n"})}),"\n",(0,i.jsxs)(s.p,{children:["Defined in: ",(0,i.jsx)(s.a,{href:"https://github.com/o1-labs/o1js/blob/df1ff77af12d7cbbed4a6167f02815fad4f0dceb/src/lib/provable/int.ts#L649",children:"lib/provable/int.ts:649"})]}),"\n",(0,i.jsx)(s.h4,{id:"parameters-38",children:"Parameters"}),"\n",(0,i.jsx)(s.h5,{id:"x-11",children:"x"}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.a,{href:"/o1js/2.4.0/api-reference/classes/UInt32",children:(0,i.jsx)(s.code,{children:"UInt32"})})}),"\n",(0,i.jsx)(s.h4,{id:"returns-54",children:"Returns"}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.code,{children:"HashInput"})}),"\n",(0,i.jsx)(s.h4,{id:"overrides-4",children:"Overrides"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-ts",children:"CircuitValue.toInput\n"})}),"\n",(0,i.jsx)(s.hr,{}),"\n",(0,i.jsx)(s.h3,{id:"tojson-1",children:"toJSON()"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-ts",children:"static toJSON(x: UInt32): string\n"})}),"\n",(0,i.jsxs)(s.p,{children:["Defined in: ",(0,i.jsx)(s.a,{href:"https://github.com/o1-labs/o1js/blob/df1ff77af12d7cbbed4a6167f02815fad4f0dceb/src/lib/provable/int.ts#L655",children:"lib/provable/int.ts:655"})]}),"\n",(0,i.jsx)(s.p,{children:"Encodes this structure into a JSON-like object."}),"\n",(0,i.jsx)(s.h4,{id:"parameters-39",children:"Parameters"}),"\n",(0,i.jsx)(s.h5,{id:"x-12",children:"x"}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.a,{href:"/o1js/2.4.0/api-reference/classes/UInt32",children:(0,i.jsx)(s.code,{children:"UInt32"})})}),"\n",(0,i.jsx)(s.h4,{id:"returns-55",children:"Returns"}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.code,{children:"string"})}),"\n",(0,i.jsx)(s.h4,{id:"overrides-5",children:"Overrides"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-ts",children:"CircuitValue.toJSON\n"})}),"\n",(0,i.jsx)(s.hr,{}),"\n",(0,i.jsx)(s.h3,{id:"tovalue",children:"toValue()"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-ts",children:"static toValue(x: UInt32): bigint\n"})}),"\n",(0,i.jsxs)(s.p,{children:["Defined in: ",(0,i.jsx)(s.a,{href:"https://github.com/o1-labs/o1js/blob/df1ff77af12d7cbbed4a6167f02815fad4f0dceb/src/lib/provable/int.ts#L1034",children:"lib/provable/int.ts:1034"})]}),"\n",(0,i.jsx)(s.h4,{id:"parameters-40",children:"Parameters"}),"\n",(0,i.jsx)(s.h5,{id:"x-13",children:"x"}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.a,{href:"/o1js/2.4.0/api-reference/classes/UInt32",children:(0,i.jsx)(s.code,{children:"UInt32"})})}),"\n",(0,i.jsx)(s.h4,{id:"returns-56",children:"Returns"}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.code,{children:"bigint"})}),"\n",(0,i.jsx)(s.h4,{id:"overrides-6",children:"Overrides"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-ts",children:"CircuitValue.toValue\n"})})]})}function o(e={}){const{wrapper:s}={...(0,l.R)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}}}]);