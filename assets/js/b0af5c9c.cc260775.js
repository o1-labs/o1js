"use strict";(self.webpackChunkdocumentation_site=self.webpackChunkdocumentation_site||[]).push([[616],{28453:(e,n,s)=>{s.d(n,{R:()=>l,x:()=>a});var r=s(96540);const d={},i=r.createContext(d);function l(e){const n=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(d):e.components||d:l(e.components),r.createElement(i.Provider,{value:n},e.children)}},75916:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>l,metadata:()=>r,toc:()=>t});const r=JSON.parse('{"id":"api-reference/classes/Unconstrained","title":"Unconstrained","description":"Defined in39","source":"@site/versioned_docs/version-2.4.0/api-reference/classes/Unconstrained.mdx","sourceDirName":"api-reference/classes","slug":"/api-reference/classes/Unconstrained","permalink":"/o1js/2.4.0/api-reference/classes/Unconstrained","draft":false,"unlisted":false,"editUrl":"https://github.com/versioned_docs/version-2.4.0/api-reference/classes/Unconstrained.mdx","tags":[],"version":"2.4.0","frontMatter":{},"sidebar":"docs","previous":{"title":"UInt8","permalink":"/o1js/2.4.0/api-reference/classes/UInt8"},"next":{"title":"UnreducedForeignField","permalink":"/o1js/2.4.0/api-reference/classes/UnreducedForeignField"}}');var d=s(74848),i=s(28453);const l={},a=void 0,c={},t=[{value:"Example",id:"example",level:2},{value:"Type Parameters",id:"type-parameters",level:2},{value:"Properties",id:"properties",level:2},{value:"provable",id:"provable",level:3},{value:"Type declaration",id:"type-declaration",level:4},{value:"empty()",id:"empty",level:5},{value:"Returns",id:"returns",level:6},{value:"toInput()",id:"toinput",level:5},{value:"Parameters",id:"parameters",level:6},{value:"x",id:"x",level:6},{value:"Returns",id:"returns-1",level:6},{value:"fields?",id:"fields",level:6},{value:"packed?",id:"packed",level:6},{value:"Methods",id:"methods",level:2},{value:"get()",id:"get",level:3},{value:"Returns",id:"returns-2",level:4},{value:"set()",id:"set",level:3},{value:"Parameters",id:"parameters-1",level:4},{value:"value",id:"value",level:5},{value:"Returns",id:"returns-3",level:4},{value:"setTo()",id:"setto",level:3},{value:"Parameters",id:"parameters-2",level:4},{value:"value",id:"value-1",level:5},{value:"Returns",id:"returns-4",level:4},{value:"updateAsProver()",id:"updateasprover",level:3},{value:"Parameters",id:"parameters-3",level:4},{value:"compute",id:"compute",level:5},{value:"Returns",id:"returns-5",level:4},{value:"from()",id:"from",level:3},{value:"Type Parameters",id:"type-parameters-1",level:4},{value:"Parameters",id:"parameters-4",level:4},{value:"value",id:"value-2",level:5},{value:"Returns",id:"returns-6",level:4},{value:"withEmpty()",id:"withempty",level:3},{value:"Type Parameters",id:"type-parameters-2",level:4},{value:"Parameters",id:"parameters-5",level:4},{value:"empty",id:"empty-1",level:5},{value:"Returns",id:"returns-7",level:4},{value:"witness()",id:"witness",level:3},{value:"Type Parameters",id:"type-parameters-3",level:4},{value:"Parameters",id:"parameters-6",level:4},{value:"compute",id:"compute-1",level:5},{value:"Returns",id:"returns-8",level:4}];function o(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",h4:"h4",h5:"h5",h6:"h6",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,d.jsxs)(d.Fragment,{children:[(0,d.jsxs)(n.p,{children:["Defined in: ",(0,d.jsx)(n.a,{href:"https://github.com/o1-labs/o1js/blob/df1ff77af12d7cbbed4a6167f02815fad4f0dceb/src/lib/provable/types/unconstrained.ts#L39",children:"lib/provable/types/unconstrained.ts:39"})]}),"\n",(0,d.jsx)(n.p,{children:"Container which holds an unconstrained value. This can be used to pass values\nbetween the out-of-circuit blocks in provable code."}),"\n",(0,d.jsx)(n.p,{children:"Invariants:"}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsxs)(n.li,{children:["An ",(0,d.jsx)(n.code,{children:"Unconstrained"}),"'s value can only be accessed in auxiliary contexts."]}),"\n",(0,d.jsxs)(n.li,{children:["An ",(0,d.jsx)(n.code,{children:"Unconstrained"})," can be empty when compiling, but never empty when running as the prover.\n(there is no way to create an empty ",(0,d.jsx)(n.code,{children:"Unconstrained"})," in the prover)"]}),"\n"]}),"\n",(0,d.jsx)(n.h2,{id:"example",children:"Example"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-ts",children:"let x = Unconstrained.from(0n);\n\nclass MyContract extends SmartContract {\n  `@method` myMethod(x: Unconstrained<bigint>) {\n\n    Provable.witness(Field, () => {\n      // we can access and modify `x` here\n      let newValue = x.get() + otherField.toBigInt();\n      x.set(newValue);\n\n      // ...\n    });\n\n    // throws an error!\n    x.get();\n  }\n"})}),"\n",(0,d.jsx)(n.h2,{id:"type-parameters",children:"Type Parameters"}),"\n",(0,d.jsxs)(n.p,{children:["\u2022 ",(0,d.jsx)(n.strong,{children:"T"})]}),"\n",(0,d.jsx)(n.h2,{id:"properties",children:"Properties"}),"\n",(0,d.jsx)(n.h3,{id:"provable",children:"provable"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-ts",children:"static provable: UnconstrainedProvable<any> & {\n  empty: () => Unconstrained<any>;\n  toInput: (x: Unconstrained<any>) => {\n     fields: Field[];\n     packed: [Field, number][];\n    };\n};\n"})}),"\n",(0,d.jsxs)(n.p,{children:["Defined in: ",(0,d.jsx)(n.a,{href:"https://github.com/o1-labs/o1js/blob/df1ff77af12d7cbbed4a6167f02815fad4f0dceb/src/lib/provable/types/unconstrained.ts#L109",children:"lib/provable/types/unconstrained.ts:109"})]}),"\n",(0,d.jsx)(n.h4,{id:"type-declaration",children:"Type declaration"}),"\n",(0,d.jsx)(n.h5,{id:"empty",children:"empty()"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-ts",children:"empty: () => Unconstrained<any>;\n"})}),"\n",(0,d.jsx)(n.h6,{id:"returns",children:"Returns"}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.a,{href:"/o1js/2.4.0/api-reference/classes/Unconstrained",children:(0,d.jsx)(n.code,{children:"Unconstrained"})}),"<",(0,d.jsx)(n.code,{children:"any"}),">"]}),"\n",(0,d.jsx)(n.h5,{id:"toinput",children:"toInput()"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-ts",children:"toInput: (x: Unconstrained<any>) => {\n  fields: Field[];\n  packed: [Field, number][];\n};\n"})}),"\n",(0,d.jsx)(n.h6,{id:"parameters",children:"Parameters"}),"\n",(0,d.jsx)(n.h6,{id:"x",children:"x"}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.a,{href:"/o1js/2.4.0/api-reference/classes/Unconstrained",children:(0,d.jsx)(n.code,{children:"Unconstrained"})}),"<",(0,d.jsx)(n.code,{children:"any"}),">"]}),"\n",(0,d.jsx)(n.h6,{id:"returns-1",children:"Returns"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-ts",children:"{\n  fields: Field[];\n  packed: [Field, number][];\n}\n"})}),"\n",(0,d.jsx)(n.h6,{id:"fields",children:"fields?"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-ts",children:"optional fields: Field[];\n"})}),"\n",(0,d.jsx)(n.h6,{id:"packed",children:"packed?"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-ts",children:"optional packed: [Field, number][];\n"})}),"\n",(0,d.jsx)(n.h2,{id:"methods",children:"Methods"}),"\n",(0,d.jsx)(n.h3,{id:"get",children:"get()"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-ts",children:"get(): T\n"})}),"\n",(0,d.jsxs)(n.p,{children:["Defined in: ",(0,d.jsx)(n.a,{href:"https://github.com/o1-labs/o1js/blob/df1ff77af12d7cbbed4a6167f02815fad4f0dceb/src/lib/provable/types/unconstrained.ts#L51",children:"lib/provable/types/unconstrained.ts:51"})]}),"\n",(0,d.jsx)(n.p,{children:"Read an unconstrained value."}),"\n",(0,d.jsx)(n.p,{children:"Note: Can only be called outside provable code."}),"\n",(0,d.jsx)(n.h4,{id:"returns-2",children:"Returns"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.code,{children:"T"})}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h3,{id:"set",children:"set()"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-ts",children:"set(value: T): void\n"})}),"\n",(0,d.jsxs)(n.p,{children:["Defined in: ",(0,d.jsx)(n.a,{href:"https://github.com/o1-labs/o1js/blob/df1ff77af12d7cbbed4a6167f02815fad4f0dceb/src/lib/provable/types/unconstrained.ts#L65",children:"lib/provable/types/unconstrained.ts:65"})]}),"\n",(0,d.jsx)(n.p,{children:"Modify the unconstrained value."}),"\n",(0,d.jsx)(n.h4,{id:"parameters-1",children:"Parameters"}),"\n",(0,d.jsx)(n.h5,{id:"value",children:"value"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.code,{children:"T"})}),"\n",(0,d.jsx)(n.h4,{id:"returns-3",children:"Returns"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.code,{children:"void"})}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h3,{id:"setto",children:"setTo()"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-ts",children:"setTo(value: Unconstrained<T>): void\n"})}),"\n",(0,d.jsxs)(n.p,{children:["Defined in: ",(0,d.jsx)(n.a,{href:"https://github.com/o1-labs/o1js/blob/df1ff77af12d7cbbed4a6167f02815fad4f0dceb/src/lib/provable/types/unconstrained.ts#L72",children:"lib/provable/types/unconstrained.ts:72"})]}),"\n",(0,d.jsxs)(n.p,{children:["Set the unconstrained value to the same as another ",(0,d.jsx)(n.code,{children:"Unconstrained"}),"."]}),"\n",(0,d.jsx)(n.h4,{id:"parameters-2",children:"Parameters"}),"\n",(0,d.jsx)(n.h5,{id:"value-1",children:"value"}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.a,{href:"/o1js/2.4.0/api-reference/classes/Unconstrained",children:(0,d.jsx)(n.code,{children:"Unconstrained"})}),"<",(0,d.jsx)(n.code,{children:"T"}),">"]}),"\n",(0,d.jsx)(n.h4,{id:"returns-4",children:"Returns"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.code,{children:"void"})}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h3,{id:"updateasprover",children:"updateAsProver()"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-ts",children:"updateAsProver(compute: (value: T) => T): void\n"})}),"\n",(0,d.jsxs)(n.p,{children:["Defined in: ",(0,d.jsx)(n.a,{href:"https://github.com/o1-labs/o1js/blob/df1ff77af12d7cbbed4a6167f02815fad4f0dceb/src/lib/provable/types/unconstrained.ts#L102",children:"lib/provable/types/unconstrained.ts:102"})]}),"\n",(0,d.jsxs)(n.p,{children:["Update an ",(0,d.jsx)(n.code,{children:"Unconstrained"})," by a witness computation."]}),"\n",(0,d.jsx)(n.h4,{id:"parameters-3",children:"Parameters"}),"\n",(0,d.jsx)(n.h5,{id:"compute",children:"compute"}),"\n",(0,d.jsxs)(n.p,{children:["(",(0,d.jsx)(n.code,{children:"value"}),": ",(0,d.jsx)(n.code,{children:"T"}),") => ",(0,d.jsx)(n.code,{children:"T"})]}),"\n",(0,d.jsx)(n.h4,{id:"returns-5",children:"Returns"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.code,{children:"void"})}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h3,{id:"from",children:"from()"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-ts",children:"static from<T>(value: T | Unconstrained<T>): Unconstrained<T>\n"})}),"\n",(0,d.jsxs)(n.p,{children:["Defined in: ",(0,d.jsx)(n.a,{href:"https://github.com/o1-labs/o1js/blob/df1ff77af12d7cbbed4a6167f02815fad4f0dceb/src/lib/provable/types/unconstrained.ts#L87",children:"lib/provable/types/unconstrained.ts:87"})]}),"\n",(0,d.jsxs)(n.p,{children:["Create an ",(0,d.jsx)(n.code,{children:"Unconstrained"})," with the given ",(0,d.jsx)(n.code,{children:"value"}),"."]}),"\n",(0,d.jsxs)(n.p,{children:["Note: If ",(0,d.jsx)(n.code,{children:"T"})," contains provable types, ",(0,d.jsx)(n.code,{children:"Unconstrained.from"})," is an anti-pattern,\nbecause it stores witnesses in a space that's intended to be used outside the proof.\nSomething like the following should be used instead:"]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-ts",children:"let xWrapped = Unconstrained.witness(() => Provable.toConstant(type, x));\n"})}),"\n",(0,d.jsx)(n.h4,{id:"type-parameters-1",children:"Type Parameters"}),"\n",(0,d.jsxs)(n.p,{children:["\u2022 ",(0,d.jsx)(n.strong,{children:"T"})]}),"\n",(0,d.jsx)(n.h4,{id:"parameters-4",children:"Parameters"}),"\n",(0,d.jsx)(n.h5,{id:"value-2",children:"value"}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"T"})," | ",(0,d.jsx)(n.a,{href:"/o1js/2.4.0/api-reference/classes/Unconstrained",children:(0,d.jsx)(n.code,{children:"Unconstrained"})}),"<",(0,d.jsx)(n.code,{children:"T"}),">"]}),"\n",(0,d.jsx)(n.h4,{id:"returns-6",children:"Returns"}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.a,{href:"/o1js/2.4.0/api-reference/classes/Unconstrained",children:(0,d.jsx)(n.code,{children:"Unconstrained"})}),"<",(0,d.jsx)(n.code,{children:"T"}),">"]}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h3,{id:"withempty",children:"withEmpty()"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-ts",children:"static withEmpty<T>(empty: T): Provable<Unconstrained<T>, T> & {\n  empty: () => Unconstrained<T>;\n  toInput: (x: Unconstrained<T>) => {\n     fields: Field[];\n     packed: [Field, number][];\n    };\n}\n"})}),"\n",(0,d.jsxs)(n.p,{children:["Defined in: ",(0,d.jsx)(n.a,{href:"https://github.com/o1-labs/o1js/blob/df1ff77af12d7cbbed4a6167f02815fad4f0dceb/src/lib/provable/types/unconstrained.ts#L129",children:"lib/provable/types/unconstrained.ts:129"})]}),"\n",(0,d.jsx)(n.h4,{id:"type-parameters-2",children:"Type Parameters"}),"\n",(0,d.jsxs)(n.p,{children:["\u2022 ",(0,d.jsx)(n.strong,{children:"T"})]}),"\n",(0,d.jsx)(n.h4,{id:"parameters-5",children:"Parameters"}),"\n",(0,d.jsx)(n.h5,{id:"empty-1",children:"empty"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.code,{children:"T"})}),"\n",(0,d.jsx)(n.h4,{id:"returns-7",children:"Returns"}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.a,{href:"/o1js/2.4.0/api-reference/type-aliases/Provable",children:(0,d.jsx)(n.code,{children:"Provable"})}),"<",(0,d.jsx)(n.a,{href:"/o1js/2.4.0/api-reference/classes/Unconstrained",children:(0,d.jsx)(n.code,{children:"Unconstrained"})}),"<",(0,d.jsx)(n.code,{children:"T"}),">, ",(0,d.jsx)(n.code,{children:"T"}),"> & {\n",(0,d.jsx)(n.code,{children:"empty"}),": () => ",(0,d.jsx)(n.a,{href:"/o1js/2.4.0/api-reference/classes/Unconstrained",children:(0,d.jsx)(n.code,{children:"Unconstrained"})}),"<",(0,d.jsx)(n.code,{children:"T"}),">;\n",(0,d.jsx)(n.code,{children:"toInput"}),": (",(0,d.jsx)(n.code,{children:"x"}),": ",(0,d.jsx)(n.a,{href:"/o1js/2.4.0/api-reference/classes/Unconstrained",children:(0,d.jsx)(n.code,{children:"Unconstrained"})}),"<",(0,d.jsx)(n.code,{children:"T"}),">) => {\n",(0,d.jsx)(n.code,{children:"fields"}),": ",(0,d.jsx)(n.a,{href:"/o1js/2.4.0/api-reference/classes/Field",children:(0,d.jsx)(n.code,{children:"Field"})}),"[];\n",(0,d.jsx)(n.code,{children:"packed"}),": [",(0,d.jsx)(n.a,{href:"/o1js/2.4.0/api-reference/classes/Field",children:(0,d.jsx)(n.code,{children:"Field"})}),", ",(0,d.jsx)(n.code,{children:"number"}),"][];\n};\n}"]}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h3,{id:"witness",children:"witness()"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-ts",children:"static witness<T>(compute: () => T): Unconstrained<T>\n"})}),"\n",(0,d.jsxs)(n.p,{children:["Defined in: ",(0,d.jsx)(n.a,{href:"https://github.com/o1-labs/o1js/blob/df1ff77af12d7cbbed4a6167f02815fad4f0dceb/src/lib/provable/types/unconstrained.ts#L95",children:"lib/provable/types/unconstrained.ts:95"})]}),"\n",(0,d.jsxs)(n.p,{children:["Create an ",(0,d.jsx)(n.code,{children:"Unconstrained"})," from a witness computation."]}),"\n",(0,d.jsx)(n.h4,{id:"type-parameters-3",children:"Type Parameters"}),"\n",(0,d.jsxs)(n.p,{children:["\u2022 ",(0,d.jsx)(n.strong,{children:"T"})]}),"\n",(0,d.jsx)(n.h4,{id:"parameters-6",children:"Parameters"}),"\n",(0,d.jsx)(n.h5,{id:"compute-1",children:"compute"}),"\n",(0,d.jsxs)(n.p,{children:["() => ",(0,d.jsx)(n.code,{children:"T"})]}),"\n",(0,d.jsx)(n.h4,{id:"returns-8",children:"Returns"}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.a,{href:"/o1js/2.4.0/api-reference/classes/Unconstrained",children:(0,d.jsx)(n.code,{children:"Unconstrained"})}),"<",(0,d.jsx)(n.code,{children:"T"}),">"]})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,d.jsx)(n,{...e,children:(0,d.jsx)(o,{...e})}):o(e)}}}]);