"use strict";(self.webpackChunkdocumentation_site=self.webpackChunkdocumentation_site||[]).push([[67279],{28453:(e,n,a)=>{a.d(n,{R:()=>i,x:()=>c});var t=a(96540);const s={},r=t.createContext(s);function i(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),t.createElement(r.Provider,{value:n},e.children)}},99433:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>o,contentTitle:()=>c,default:()=>p,frontMatter:()=>i,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"api-reference/namespaces/Mina/type-aliases/RejectedTransaction","title":"RejectedTransaction","description":"Defined in300","source":"@site/docs/api-reference/namespaces/Mina/type-aliases/RejectedTransaction.mdx","sourceDirName":"api-reference/namespaces/Mina/type-aliases","slug":"/api-reference/namespaces/Mina/type-aliases/RejectedTransaction","permalink":"/o1js/api-reference/namespaces/Mina/type-aliases/RejectedTransaction","draft":false,"unlisted":false,"editUrl":"https://github.com/docs/api-reference/namespaces/Mina/type-aliases/RejectedTransaction.mdx","tags":[],"version":"current","frontMatter":{},"sidebar":"docs","previous":{"title":"PendingTransactionStatus","permalink":"/o1js/api-reference/namespaces/Mina/type-aliases/PendingTransactionStatus"},"next":{"title":"TestPublicKey","permalink":"/o1js/api-reference/namespaces/Mina/type-aliases/TestPublicKey"}}');var s=a(74848),r=a(28453);const i={},c=void 0,o={},l=[{value:"Type declaration",id:"type-declaration",level:2},{value:"errors",id:"errors",level:3},{value:"status",id:"status",level:3},{value:"Example",id:"example",level:4}];function d(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",h4:"h4",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:'type RejectedTransaction = Pick<PendingTransaction, "transaction" | "toJSON" | "toPretty" | "hash" | "data"> & {\n  errors: string[];\n  status: "rejected";\n};\n'})}),"\n",(0,s.jsxs)(n.p,{children:["Defined in: ",(0,s.jsx)(n.a,{href:"https://github.com/o1-labs/o1js/blob/df1ff77af12d7cbbed4a6167f02815fad4f0dceb/src/lib/mina/v1/transaction.ts#L300",children:"lib/mina/v1/transaction.ts:300"})]}),"\n",(0,s.jsx)(n.p,{children:"Represents a transaction that has been rejected and not included in a blockchain block."}),"\n",(0,s.jsx)(n.h2,{id:"type-declaration",children:"Type declaration"}),"\n",(0,s.jsx)(n.h3,{id:"errors",children:"errors"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"errors: string[];\n"})}),"\n",(0,s.jsx)(n.h3,{id:"status",children:"status"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:'status: "rejected";\n'})}),"\n",(0,s.jsx)(n.h4,{id:"example",children:"Example"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"try {\n  const txResult = await pendingTransaction.wait();\n  // This line will not execute if the transaction is rejected, as `.wait()` will throw an error instead.\n  console.log(`Transaction ${txResult.hash} was successfully included in a block.`);\n} catch (error) {\n  console.error(`Transaction ${error.transaction.hash} was rejected.`);\n  error.errors.forEach((error, i) => {\n   console.error(`Error ${i + 1}: ${error}`);\n  });\n}\n"})})]})}function p(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}}}]);