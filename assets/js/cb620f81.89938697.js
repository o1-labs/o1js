"use strict";(self.webpackChunkdocumentation_site=self.webpackChunkdocumentation_site||[]).push([[26055],{28453:(e,n,c)=>{c.d(n,{R:()=>r,x:()=>o});var s=c(96540);const i={},d=s.createContext(i);function r(e){const n=s.useContext(d);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),s.createElement(d.Provider,{value:n},e.children)}},54477:(e,n,c)=>{c.r(n),c.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>r,metadata:()=>s,toc:()=>a});const s=JSON.parse('{"id":"api-reference/namespaces/Experimental/functions/ActionBatch","title":"ActionBatch","description":"Defined in216","source":"@site/docs/api-reference/namespaces/Experimental/functions/ActionBatch.mdx","sourceDirName":"api-reference/namespaces/Experimental/functions","slug":"/api-reference/namespaces/Experimental/functions/ActionBatch","permalink":"/o1js/api-reference/namespaces/Experimental/functions/ActionBatch","draft":false,"unlisted":false,"editUrl":"https://github.com/docs/api-reference/namespaces/Experimental/functions/ActionBatch.mdx","tags":[],"version":"current","frontMatter":{},"sidebar":"docs","previous":{"title":"OffchainStateCommitments","permalink":"/o1js/api-reference/namespaces/Experimental/classes/OffchainStateCommitments"},"next":{"title":"IndexedMerkleMap","permalink":"/o1js/api-reference/namespaces/Experimental/functions/IndexedMerkleMap"}}');var i=c(74848),d=c(28453);const r={},o=void 0,l={},a=[{value:"Type Parameters",id:"type-parameters",level:2},{value:"Parameters",id:"parameters",level:2},{value:"actionType",id:"actiontype",level:3},{value:"Returns",id:"returns",level:2}];function t(e){const n={a:"a",code:"code",em:"em",h2:"h2",h3:"h3",p:"p",pre:"pre",strong:"strong",...(0,d.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"function ActionBatch<A>(actionType: A): (value: {\n  isRecursive: Bool;\n  onchainActionState: Field;\n  onchainStack: Field;\n  processedActionState: Field;\n  stack: MerkleList<MerkleList<Hashed<InferProvable<A, Field>>>>;\n  useOnchainStack: Bool;\n  witnesses: Unconstrained<ActionWitnesses>;\n }) => {\n  isRecursive: Bool;\n  onchainActionState: Field;\n  onchainStack: Field;\n  processedActionState: Field;\n  stack: MerkleList<MerkleList<Hashed<InferProvable<A, Field>>>>;\n  useOnchainStack: Bool;\n  witnesses: Unconstrained<ActionWitnesses>;\n } & {\n  _isStruct: true;\n } & Provable<{\n  isRecursive: Bool;\n  onchainActionState: Field;\n  onchainStack: Field;\n  processedActionState: Field;\n  stack: MerkleList<MerkleList<Hashed<InferProvable<A, Field>>>>;\n  useOnchainStack: Bool;\n  witnesses: Unconstrained<ActionWitnesses>;\n }, {\n  isRecursive: boolean;\n  onchainActionState: bigint;\n  onchainStack: bigint;\n  processedActionState: bigint;\n  stack: any;\n  useOnchainStack: boolean;\n  witnesses: ActionWitnesses;\n }> & {\n  empty: () => {\n     isRecursive: Bool;\n     onchainActionState: Field;\n     onchainStack: Field;\n     processedActionState: Field;\n     stack: MerkleList<MerkleList<Hashed<InferProvable<A, Field>>>>;\n     useOnchainStack: Bool;\n     witnesses: Unconstrained<ActionWitnesses>;\n    };\n  fromJSON: (x: {\n     isRecursive: boolean;\n     onchainActionState: string;\n     onchainStack: string;\n     processedActionState: string;\n     stack: {\n        _emptyHash: null | string;\n        _innerProvable:   | null\n           | {\n           check: {};\n           empty: {};\n           fromFields: {};\n           fromValue: {};\n           toAuxiliary: {};\n           toCanonical: null | {};\n           toFields: {};\n           toInput: {};\n           toValue: {};\n           sizeInFields: ;\n          };\n        _nextHash: null | {};\n        _provable:   | null\n           | {\n           check: {};\n           empty: {};\n           fromFields: {};\n           fromValue: {};\n           toAuxiliary: {};\n           toCanonical: null | {};\n           toFields: {};\n           toInput: {};\n           toValue: {};\n           sizeInFields: ;\n          };\n        empty: {};\n        emptyHash: string;\n        from: {};\n        fromReverse: {};\n        prototype: {\n           Constructor: {\n              _emptyHash: null | string;\n              _innerProvable:   | null\n                 | {\n                 check: {};\n                 empty: {};\n                 fromFields: {};\n                 fromValue: {};\n                 toAuxiliary: {};\n                 toCanonical: null | {};\n                 toFields: {};\n                 toInput: {};\n                 toValue: {};\n                 sizeInFields: ;\n                };\n              _nextHash: null | {};\n              _provable:   | null\n                 | {\n                 check: {};\n                 empty: {};\n                 fromFields: {};\n                 fromValue: {};\n                 toAuxiliary: {};\n                 toCanonical: null | {};\n                 toFields: {};\n                 toInput: {};\n                 toValue: {};\n                 sizeInFields: ;\n                };\n              emptyHash: string;\n              prototype: { hash: string; data: { get: {}; set: {}; setTo: {}; updateAsProver: {}; }; isEmpty: {}; push: {}; pushIf: {}; popExn: {}; pop: {}; popOption: {}; popIf: {}; popIfUnsafe: {}; clone: {}; forEach: {}; startIterating: {}; ... 5 more ...; readonly innerProvable: { ...; }; };\n              create: ;\n             };\n           data: {\n              get: ;\n              set: ;\n              setTo: ;\n              updateAsProver: ;\n             };\n           hash: string;\n           innerProvable: {\n              check: {};\n              empty: {};\n              fromFields: {};\n              fromValue: {};\n              toAuxiliary: {};\n              toCanonical: null | {};\n              toFields: {};\n              toInput: {};\n              toValue: {};\n              sizeInFields: ;\n             };\n           clone: ;\n           forEach: ;\n           isEmpty: ;\n           lengthUnconstrained: ;\n           nextHash: ;\n           pop: ;\n           popExn: ;\n           popIf: ;\n           popIfUnsafe: ;\n           popOption: ;\n           push: ;\n           pushIf: ;\n           startIterating: ;\n           startIteratingFromLast: ;\n           toArrayUnconstrained: ;\n          };\n        provable: {\n           check: {};\n           empty: {};\n           fromFields: {};\n           fromValue: {};\n           toAuxiliary: {};\n           toCanonical: null | {};\n           toFields: {};\n           toInput: {};\n           toValue: {};\n           sizeInFields: ;\n          };\n        create: ;\n       };\n     useOnchainStack: boolean;\n     witnesses: {\n        check: {};\n        empty: {};\n        fromFields: {};\n        fromValue: {};\n        toAuxiliary: {};\n        toCanonical: null | {};\n        toFields: {};\n        toInput: {};\n        toValue: {};\n        sizeInFields: ;\n       };\n    }) => {\n     isRecursive: Bool;\n     onchainActionState: Field;\n     onchainStack: Field;\n     processedActionState: Field;\n     stack: MerkleList<MerkleList<Hashed<InferProvable<A, Field>>>>;\n     useOnchainStack: Bool;\n     witnesses: Unconstrained<ActionWitnesses>;\n    };\n  fromValue: (value: {\n     isRecursive: boolean | Bool;\n     onchainActionState: string | number | bigint | Field;\n     onchainStack: string | number | bigint | Field;\n     processedActionState: string | number | bigint | Field;\n     stack: any;\n     useOnchainStack: boolean | Bool;\n     witnesses:   | ActionWitnesses\n        | Unconstrained<ActionWitnesses>;\n    }) => {\n     isRecursive: Bool;\n     onchainActionState: Field;\n     onchainStack: Field;\n     processedActionState: Field;\n     stack: MerkleList<MerkleList<Hashed<InferProvable<A, Field>>>>;\n     useOnchainStack: Bool;\n     witnesses: Unconstrained<ActionWitnesses>;\n    };\n  toInput: (x: {\n     isRecursive: Bool;\n     onchainActionState: Field;\n     onchainStack: Field;\n     processedActionState: Field;\n     stack: MerkleList<MerkleList<Hashed<InferProvable<A, Field>>>>;\n     useOnchainStack: Bool;\n     witnesses: Unconstrained<ActionWitnesses>;\n    }) => {\n     fields: Field[];\n     packed: [Field, number][];\n    };\n  toJSON: (x: {\n     isRecursive: Bool;\n     onchainActionState: Field;\n     onchainStack: Field;\n     processedActionState: Field;\n     stack: MerkleList<MerkleList<Hashed<InferProvable<A, Field>>>>;\n     useOnchainStack: Bool;\n     witnesses: Unconstrained<ActionWitnesses>;\n    }) => {\n     isRecursive: boolean;\n     onchainActionState: string;\n     onchainStack: string;\n     processedActionState: string;\n     stack: {\n        _emptyHash: null | string;\n        _innerProvable:   | null\n           | {\n           check: {};\n           empty: {};\n           fromFields: {};\n           fromValue: {};\n           toAuxiliary: {};\n           toCanonical: null | {};\n           toFields: {};\n           toInput: {};\n           toValue: {};\n           sizeInFields: ;\n          };\n        _nextHash: null | {};\n        _provable:   | null\n           | {\n           check: {};\n           empty: {};\n           fromFields: {};\n           fromValue: {};\n           toAuxiliary: {};\n           toCanonical: null | {};\n           toFields: {};\n           toInput: {};\n           toValue: {};\n           sizeInFields: ;\n          };\n        empty: {};\n        emptyHash: string;\n        from: {};\n        fromReverse: {};\n        prototype: {\n           Constructor: {\n              _emptyHash: null | string;\n              _innerProvable:   | null\n                 | {\n                 check: {};\n                 empty: {};\n                 fromFields: {};\n                 fromValue: {};\n                 toAuxiliary: {};\n                 toCanonical: null | {};\n                 toFields: {};\n                 toInput: {};\n                 toValue: {};\n                 sizeInFields: ;\n                };\n              _nextHash: null | {};\n              _provable:   | null\n                 | {\n                 check: {};\n                 empty: {};\n                 fromFields: {};\n                 fromValue: {};\n                 toAuxiliary: {};\n                 toCanonical: null | {};\n                 toFields: {};\n                 toInput: {};\n                 toValue: {};\n                 sizeInFields: ;\n                };\n              emptyHash: string;\n              prototype: { hash: string; data: { get: {}; set: {}; setTo: {}; updateAsProver: {}; }; isEmpty: {}; push: {}; pushIf: {}; popExn: {}; pop: {}; popOption: {}; popIf: {}; popIfUnsafe: {}; clone: {}; forEach: {}; startIterating: {}; ... 5 more ...; readonly innerProvable: { ...; }; };\n              create: ;\n             };\n           data: {\n              get: ;\n              set: ;\n              setTo: ;\n              updateAsProver: ;\n             };\n           hash: string;\n           innerProvable: {\n              check: {};\n              empty: {};\n              fromFields: {};\n              fromValue: {};\n              toAuxiliary: {};\n              toCanonical: null | {};\n              toFields: {};\n              toInput: {};\n              toValue: {};\n              sizeInFields: ;\n             };\n           clone: ;\n           forEach: ;\n           isEmpty: ;\n           lengthUnconstrained: ;\n           nextHash: ;\n           pop: ;\n           popExn: ;\n           popIf: ;\n           popIfUnsafe: ;\n           popOption: ;\n           push: ;\n           pushIf: ;\n           startIterating: ;\n           startIteratingFromLast: ;\n           toArrayUnconstrained: ;\n          };\n        provable: {\n           check: {};\n           empty: {};\n           fromFields: {};\n           fromValue: {};\n           toAuxiliary: {};\n           toCanonical: null | {};\n           toFields: {};\n           toInput: {};\n           toValue: {};\n           sizeInFields: ;\n          };\n        create: ;\n       };\n     useOnchainStack: boolean;\n     witnesses: {\n        check: {};\n        empty: {};\n        fromFields: {};\n        fromValue: {};\n        toAuxiliary: {};\n        toCanonical: null | {};\n        toFields: {};\n        toInput: {};\n        toValue: {};\n        sizeInFields: ;\n       };\n    };\n}\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Defined in: ",(0,i.jsx)(n.a,{href:"https://github.com/o1-labs/o1js/blob/df1ff77af12d7cbbed4a6167f02815fad4f0dceb/src/index.ts#L216",children:"index.ts:216"})]}),"\n",(0,i.jsx)(n.p,{children:"Provable type that represents a batch of actions."}),"\n",(0,i.jsx)(n.h2,{id:"type-parameters",children:"Type Parameters"}),"\n",(0,i.jsxs)(n.p,{children:["\u2022 ",(0,i.jsx)(n.strong,{children:"A"})," ",(0,i.jsx)(n.em,{children:"extends"})," ",(0,i.jsx)(n.code,{children:"Actionable"}),"<",(0,i.jsx)(n.code,{children:"any"}),">"]}),"\n",(0,i.jsx)(n.h2,{id:"parameters",children:"Parameters"}),"\n",(0,i.jsx)(n.h3,{id:"actiontype",children:"actionType"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"A"})}),"\n",(0,i.jsx)(n.h2,{id:"returns",children:"Returns"}),"\n",(0,i.jsxs)(n.p,{children:["(",(0,i.jsx)(n.code,{children:"value"}),": {\n",(0,i.jsx)(n.code,{children:"isRecursive"}),": ",(0,i.jsx)(n.a,{href:"/o1js/api-reference/classes/Bool",children:(0,i.jsx)(n.code,{children:"Bool"})}),";\n",(0,i.jsx)(n.code,{children:"onchainActionState"}),": ",(0,i.jsx)(n.a,{href:"/o1js/api-reference/classes/Field",children:(0,i.jsx)(n.code,{children:"Field"})}),";\n",(0,i.jsx)(n.code,{children:"onchainStack"}),": ",(0,i.jsx)(n.a,{href:"/o1js/api-reference/classes/Field",children:(0,i.jsx)(n.code,{children:"Field"})}),";\n",(0,i.jsx)(n.code,{children:"processedActionState"}),": ",(0,i.jsx)(n.a,{href:"/o1js/api-reference/classes/Field",children:(0,i.jsx)(n.code,{children:"Field"})}),";\n",(0,i.jsx)(n.code,{children:"stack"}),": ",(0,i.jsx)(n.a,{href:"/o1js/api-reference/classes/MerkleList",children:(0,i.jsx)(n.code,{children:"MerkleList"})}),"<",(0,i.jsx)(n.a,{href:"/o1js/api-reference/classes/MerkleList",children:(0,i.jsx)(n.code,{children:"MerkleList"})}),"<",(0,i.jsx)(n.a,{href:"/o1js/api-reference/classes/Hashed",children:(0,i.jsx)(n.code,{children:"Hashed"})}),"<",(0,i.jsx)(n.code,{children:"InferProvable"}),"<",(0,i.jsx)(n.code,{children:"A"}),", ",(0,i.jsx)(n.a,{href:"/o1js/api-reference/classes/Field",children:(0,i.jsx)(n.code,{children:"Field"})}),">>>>;\n",(0,i.jsx)(n.code,{children:"useOnchainStack"}),": ",(0,i.jsx)(n.a,{href:"/o1js/api-reference/classes/Bool",children:(0,i.jsx)(n.code,{children:"Bool"})}),";\n",(0,i.jsx)(n.code,{children:"witnesses"}),": ",(0,i.jsx)(n.a,{href:"/o1js/api-reference/classes/Unconstrained",children:(0,i.jsx)(n.code,{children:"Unconstrained"})}),"<",(0,i.jsx)(n.code,{children:"ActionWitnesses"}),">;\n}) => {\n",(0,i.jsx)(n.code,{children:"isRecursive"}),": ",(0,i.jsx)(n.a,{href:"/o1js/api-reference/classes/Bool",children:(0,i.jsx)(n.code,{children:"Bool"})}),";\n",(0,i.jsx)(n.code,{children:"onchainActionState"}),": ",(0,i.jsx)(n.a,{href:"/o1js/api-reference/classes/Field",children:(0,i.jsx)(n.code,{children:"Field"})}),";\n",(0,i.jsx)(n.code,{children:"onchainStack"}),": ",(0,i.jsx)(n.a,{href:"/o1js/api-reference/classes/Field",children:(0,i.jsx)(n.code,{children:"Field"})}),";\n",(0,i.jsx)(n.code,{children:"processedActionState"}),": ",(0,i.jsx)(n.a,{href:"/o1js/api-reference/classes/Field",children:(0,i.jsx)(n.code,{children:"Field"})}),";\n",(0,i.jsx)(n.code,{children:"stack"}),": ",(0,i.jsx)(n.a,{href:"/o1js/api-reference/classes/MerkleList",children:(0,i.jsx)(n.code,{children:"MerkleList"})}),"<",(0,i.jsx)(n.a,{href:"/o1js/api-reference/classes/MerkleList",children:(0,i.jsx)(n.code,{children:"MerkleList"})}),"<",(0,i.jsx)(n.a,{href:"/o1js/api-reference/classes/Hashed",children:(0,i.jsx)(n.code,{children:"Hashed"})}),"<",(0,i.jsx)(n.code,{children:"InferProvable"}),"<",(0,i.jsx)(n.code,{children:"A"}),", ",(0,i.jsx)(n.a,{href:"/o1js/api-reference/classes/Field",children:(0,i.jsx)(n.code,{children:"Field"})}),">>>>;\n",(0,i.jsx)(n.code,{children:"useOnchainStack"}),": ",(0,i.jsx)(n.a,{href:"/o1js/api-reference/classes/Bool",children:(0,i.jsx)(n.code,{children:"Bool"})}),";\n",(0,i.jsx)(n.code,{children:"witnesses"}),": ",(0,i.jsx)(n.a,{href:"/o1js/api-reference/classes/Unconstrained",children:(0,i.jsx)(n.code,{children:"Unconstrained"})}),"<",(0,i.jsx)(n.code,{children:"ActionWitnesses"}),">;\n} & {\n",(0,i.jsx)(n.code,{children:"_isStruct"}),": ",(0,i.jsx)(n.code,{children:"true"}),";\n} & ",(0,i.jsx)(n.a,{href:"/o1js/api-reference/type-aliases/Provable",children:(0,i.jsx)(n.code,{children:"Provable"})}),"<{\n",(0,i.jsx)(n.code,{children:"isRecursive"}),": ",(0,i.jsx)(n.a,{href:"/o1js/api-reference/classes/Bool",children:(0,i.jsx)(n.code,{children:"Bool"})}),";\n",(0,i.jsx)(n.code,{children:"onchainActionState"}),": ",(0,i.jsx)(n.a,{href:"/o1js/api-reference/classes/Field",children:(0,i.jsx)(n.code,{children:"Field"})}),";\n",(0,i.jsx)(n.code,{children:"onchainStack"}),": ",(0,i.jsx)(n.a,{href:"/o1js/api-reference/classes/Field",children:(0,i.jsx)(n.code,{children:"Field"})}),";\n",(0,i.jsx)(n.code,{children:"processedActionState"}),": ",(0,i.jsx)(n.a,{href:"/o1js/api-reference/classes/Field",children:(0,i.jsx)(n.code,{children:"Field"})}),";\n",(0,i.jsx)(n.code,{children:"stack"}),": ",(0,i.jsx)(n.a,{href:"/o1js/api-reference/classes/MerkleList",children:(0,i.jsx)(n.code,{children:"MerkleList"})}),"<",(0,i.jsx)(n.a,{href:"/o1js/api-reference/classes/MerkleList",children:(0,i.jsx)(n.code,{children:"MerkleList"})}),"<",(0,i.jsx)(n.a,{href:"/o1js/api-reference/classes/Hashed",children:(0,i.jsx)(n.code,{children:"Hashed"})}),"<",(0,i.jsx)(n.code,{children:"InferProvable"}),"<",(0,i.jsx)(n.code,{children:"A"}),", ",(0,i.jsx)(n.a,{href:"/o1js/api-reference/classes/Field",children:(0,i.jsx)(n.code,{children:"Field"})}),">>>>;\n",(0,i.jsx)(n.code,{children:"useOnchainStack"}),": ",(0,i.jsx)(n.a,{href:"/o1js/api-reference/classes/Bool",children:(0,i.jsx)(n.code,{children:"Bool"})}),";\n",(0,i.jsx)(n.code,{children:"witnesses"}),": ",(0,i.jsx)(n.a,{href:"/o1js/api-reference/classes/Unconstrained",children:(0,i.jsx)(n.code,{children:"Unconstrained"})}),"<",(0,i.jsx)(n.code,{children:"ActionWitnesses"}),">;\n}, {\n",(0,i.jsx)(n.code,{children:"isRecursive"}),": ",(0,i.jsx)(n.code,{children:"boolean"}),";\n",(0,i.jsx)(n.code,{children:"onchainActionState"}),": ",(0,i.jsx)(n.code,{children:"bigint"}),";\n",(0,i.jsx)(n.code,{children:"onchainStack"}),": ",(0,i.jsx)(n.code,{children:"bigint"}),";\n",(0,i.jsx)(n.code,{children:"processedActionState"}),": ",(0,i.jsx)(n.code,{children:"bigint"}),";\n",(0,i.jsx)(n.code,{children:"stack"}),": ",(0,i.jsx)(n.code,{children:"any"}),";\n",(0,i.jsx)(n.code,{children:"useOnchainStack"}),": ",(0,i.jsx)(n.code,{children:"boolean"}),";\n",(0,i.jsx)(n.code,{children:"witnesses"}),": ",(0,i.jsx)(n.code,{children:"ActionWitnesses"}),";\n}> & {\n",(0,i.jsx)(n.code,{children:"empty"}),": () => {\n",(0,i.jsx)(n.code,{children:"isRecursive"}),": ",(0,i.jsx)(n.a,{href:"/o1js/api-reference/classes/Bool",children:(0,i.jsx)(n.code,{children:"Bool"})}),";\n",(0,i.jsx)(n.code,{children:"onchainActionState"}),": ",(0,i.jsx)(n.a,{href:"/o1js/api-reference/classes/Field",children:(0,i.jsx)(n.code,{children:"Field"})}),";\n",(0,i.jsx)(n.code,{children:"onchainStack"}),": ",(0,i.jsx)(n.a,{href:"/o1js/api-reference/classes/Field",children:(0,i.jsx)(n.code,{children:"Field"})}),";\n",(0,i.jsx)(n.code,{children:"processedActionState"}),": ",(0,i.jsx)(n.a,{href:"/o1js/api-reference/classes/Field",children:(0,i.jsx)(n.code,{children:"Field"})}),";\n",(0,i.jsx)(n.code,{children:"stack"}),": ",(0,i.jsx)(n.a,{href:"/o1js/api-reference/classes/MerkleList",children:(0,i.jsx)(n.code,{children:"MerkleList"})}),"<",(0,i.jsx)(n.a,{href:"/o1js/api-reference/classes/MerkleList",children:(0,i.jsx)(n.code,{children:"MerkleList"})}),"<",(0,i.jsx)(n.a,{href:"/o1js/api-reference/classes/Hashed",children:(0,i.jsx)(n.code,{children:"Hashed"})}),"<",(0,i.jsx)(n.code,{children:"InferProvable"}),"<",(0,i.jsx)(n.code,{children:"A"}),", ",(0,i.jsx)(n.a,{href:"/o1js/api-reference/classes/Field",children:(0,i.jsx)(n.code,{children:"Field"})}),">>>>;\n",(0,i.jsx)(n.code,{children:"useOnchainStack"}),": ",(0,i.jsx)(n.a,{href:"/o1js/api-reference/classes/Bool",children:(0,i.jsx)(n.code,{children:"Bool"})}),";\n",(0,i.jsx)(n.code,{children:"witnesses"}),": ",(0,i.jsx)(n.a,{href:"/o1js/api-reference/classes/Unconstrained",children:(0,i.jsx)(n.code,{children:"Unconstrained"})}),"<",(0,i.jsx)(n.code,{children:"ActionWitnesses"}),">;\n};\n",(0,i.jsx)(n.code,{children:"fromJSON"}),": (",(0,i.jsx)(n.code,{children:"x"}),": {\n",(0,i.jsx)(n.code,{children:"isRecursive"}),": ",(0,i.jsx)(n.code,{children:"boolean"}),";\n",(0,i.jsx)(n.code,{children:"onchainActionState"}),": ",(0,i.jsx)(n.code,{children:"string"}),";\n",(0,i.jsx)(n.code,{children:"onchainStack"}),": ",(0,i.jsx)(n.code,{children:"string"}),";\n",(0,i.jsx)(n.code,{children:"processedActionState"}),": ",(0,i.jsx)(n.code,{children:"string"}),";\n",(0,i.jsx)(n.code,{children:"stack"}),": {\n",(0,i.jsx)(n.code,{children:"_emptyHash"}),": ",(0,i.jsx)(n.code,{children:"null"})," | ",(0,i.jsx)(n.code,{children:"string"}),";\n",(0,i.jsx)(n.code,{children:"_innerProvable"}),":   | ",(0,i.jsx)(n.code,{children:"null"}),"\n| {\n",(0,i.jsx)(n.code,{children:"check"}),": {};\n",(0,i.jsx)(n.code,{children:"empty"}),": {};\n",(0,i.jsx)(n.code,{children:"fromFields"}),": {};\n",(0,i.jsx)(n.code,{children:"fromValue"}),": {};\n",(0,i.jsx)(n.code,{children:"toAuxiliary"}),": {};\n",(0,i.jsx)(n.code,{children:"toCanonical"}),": ",(0,i.jsx)(n.code,{children:"null"})," | {};\n",(0,i.jsx)(n.code,{children:"toFields"}),": {};\n",(0,i.jsx)(n.code,{children:"toInput"}),": {};\n",(0,i.jsx)(n.code,{children:"toValue"}),": {};\n",(0,i.jsx)(n.code,{children:"sizeInFields"}),": ;\n};\n",(0,i.jsx)(n.code,{children:"_nextHash"}),": ",(0,i.jsx)(n.code,{children:"null"})," | {};\n",(0,i.jsx)(n.code,{children:"_provable"}),":   | ",(0,i.jsx)(n.code,{children:"null"}),"\n| {\n",(0,i.jsx)(n.code,{children:"check"}),": {};\n",(0,i.jsx)(n.code,{children:"empty"}),": {};\n",(0,i.jsx)(n.code,{children:"fromFields"}),": {};\n",(0,i.jsx)(n.code,{children:"fromValue"}),": {};\n",(0,i.jsx)(n.code,{children:"toAuxiliary"}),": {};\n",(0,i.jsx)(n.code,{children:"toCanonical"}),": ",(0,i.jsx)(n.code,{children:"null"})," | {};\n",(0,i.jsx)(n.code,{children:"toFields"}),": {};\n",(0,i.jsx)(n.code,{children:"toInput"}),": {};\n",(0,i.jsx)(n.code,{children:"toValue"}),": {};\n",(0,i.jsx)(n.code,{children:"sizeInFields"}),": ;\n};\n",(0,i.jsx)(n.code,{children:"empty"}),": {};\n",(0,i.jsx)(n.code,{children:"emptyHash"}),": ",(0,i.jsx)(n.code,{children:"string"}),";\n",(0,i.jsx)(n.code,{children:"from"}),": {};\n",(0,i.jsx)(n.code,{children:"fromReverse"}),": {};\n",(0,i.jsx)(n.code,{children:"prototype"}),": {\n",(0,i.jsx)(n.code,{children:"Constructor"}),": {\n",(0,i.jsx)(n.code,{children:"_emptyHash"}),": ",(0,i.jsx)(n.code,{children:"null"})," | ",(0,i.jsx)(n.code,{children:"string"}),";\n",(0,i.jsx)(n.code,{children:"_innerProvable"}),":   | ",(0,i.jsx)(n.code,{children:"null"}),"\n| {\n",(0,i.jsx)(n.code,{children:"check"}),": {};\n",(0,i.jsx)(n.code,{children:"empty"}),": {};\n",(0,i.jsx)(n.code,{children:"fromFields"}),": {};\n",(0,i.jsx)(n.code,{children:"fromValue"}),": {};\n",(0,i.jsx)(n.code,{children:"toAuxiliary"}),": {};\n",(0,i.jsx)(n.code,{children:"toCanonical"}),": ",(0,i.jsx)(n.code,{children:"null"})," | {};\n",(0,i.jsx)(n.code,{children:"toFields"}),": {};\n",(0,i.jsx)(n.code,{children:"toInput"}),": {};\n",(0,i.jsx)(n.code,{children:"toValue"}),": {};\n",(0,i.jsx)(n.code,{children:"sizeInFields"}),": ;\n};\n",(0,i.jsx)(n.code,{children:"_nextHash"}),": ",(0,i.jsx)(n.code,{children:"null"})," | {};\n",(0,i.jsx)(n.code,{children:"_provable"}),":   | ",(0,i.jsx)(n.code,{children:"null"}),"\n| {\n",(0,i.jsx)(n.code,{children:"check"}),": {};\n",(0,i.jsx)(n.code,{children:"empty"}),": {};\n",(0,i.jsx)(n.code,{children:"fromFields"}),": {};\n",(0,i.jsx)(n.code,{children:"fromValue"}),": {};\n",(0,i.jsx)(n.code,{children:"toAuxiliary"}),": {};\n",(0,i.jsx)(n.code,{children:"toCanonical"}),": ",(0,i.jsx)(n.code,{children:"null"})," | {};\n",(0,i.jsx)(n.code,{children:"toFields"}),": {};\n",(0,i.jsx)(n.code,{children:"toInput"}),": {};\n",(0,i.jsx)(n.code,{children:"toValue"}),": {};\n",(0,i.jsx)(n.code,{children:"sizeInFields"}),": ;\n};\n",(0,i.jsx)(n.code,{children:"emptyHash"}),": ",(0,i.jsx)(n.code,{children:"string"}),";\n",(0,i.jsx)(n.code,{children:"prototype"}),": { hash: string; data: { get: {}; set: {}; setTo: {}; updateAsProver: {}; }; isEmpty: {}; push: {}; pushIf: {}; popExn: {}; pop: {}; popOption: {}; popIf: {}; popIfUnsafe: {}; clone: {}; forEach: {}; startIterating: {}; ... 5 more ...; readonly innerProvable: { ...; }; };\n",(0,i.jsx)(n.code,{children:"create"}),": ;\n};\n",(0,i.jsx)(n.code,{children:"data"}),": {\n",(0,i.jsx)(n.code,{children:"get"}),": ;\n",(0,i.jsx)(n.code,{children:"set"}),": ;\n",(0,i.jsx)(n.code,{children:"setTo"}),": ;\n",(0,i.jsx)(n.code,{children:"updateAsProver"}),": ;\n};\n",(0,i.jsx)(n.code,{children:"hash"}),": ",(0,i.jsx)(n.code,{children:"string"}),";\n",(0,i.jsx)(n.code,{children:"innerProvable"}),": {\n",(0,i.jsx)(n.code,{children:"check"}),": {};\n",(0,i.jsx)(n.code,{children:"empty"}),": {};\n",(0,i.jsx)(n.code,{children:"fromFields"}),": {};\n",(0,i.jsx)(n.code,{children:"fromValue"}),": {};\n",(0,i.jsx)(n.code,{children:"toAuxiliary"}),": {};\n",(0,i.jsx)(n.code,{children:"toCanonical"}),": ",(0,i.jsx)(n.code,{children:"null"})," | {};\n",(0,i.jsx)(n.code,{children:"toFields"}),": {};\n",(0,i.jsx)(n.code,{children:"toInput"}),": {};\n",(0,i.jsx)(n.code,{children:"toValue"}),": {};\n",(0,i.jsx)(n.code,{children:"sizeInFields"}),": ;\n};\n",(0,i.jsx)(n.code,{children:"clone"}),": ;\n",(0,i.jsx)(n.code,{children:"forEach"}),": ;\n",(0,i.jsx)(n.code,{children:"isEmpty"}),": ;\n",(0,i.jsx)(n.code,{children:"lengthUnconstrained"}),": ;\n",(0,i.jsx)(n.code,{children:"nextHash"}),": ;\n",(0,i.jsx)(n.code,{children:"pop"}),": ;\n",(0,i.jsx)(n.code,{children:"popExn"}),": ;\n",(0,i.jsx)(n.code,{children:"popIf"}),": ;\n",(0,i.jsx)(n.code,{children:"popIfUnsafe"}),": ;\n",(0,i.jsx)(n.code,{children:"popOption"}),": ;\n",(0,i.jsx)(n.code,{children:"push"}),": ;\n",(0,i.jsx)(n.code,{children:"pushIf"}),": ;\n",(0,i.jsx)(n.code,{children:"startIterating"}),": ;\n",(0,i.jsx)(n.code,{children:"startIteratingFromLast"}),": ;\n",(0,i.jsx)(n.code,{children:"toArrayUnconstrained"}),": ;\n};\n",(0,i.jsx)(n.code,{children:"provable"}),": {\n",(0,i.jsx)(n.code,{children:"check"}),": {};\n",(0,i.jsx)(n.code,{children:"empty"}),": {};\n",(0,i.jsx)(n.code,{children:"fromFields"}),": {};\n",(0,i.jsx)(n.code,{children:"fromValue"}),": {};\n",(0,i.jsx)(n.code,{children:"toAuxiliary"}),": {};\n",(0,i.jsx)(n.code,{children:"toCanonical"}),": ",(0,i.jsx)(n.code,{children:"null"})," | {};\n",(0,i.jsx)(n.code,{children:"toFields"}),": {};\n",(0,i.jsx)(n.code,{children:"toInput"}),": {};\n",(0,i.jsx)(n.code,{children:"toValue"}),": {};\n",(0,i.jsx)(n.code,{children:"sizeInFields"}),": ;\n};\n",(0,i.jsx)(n.code,{children:"create"}),": ;\n};\n",(0,i.jsx)(n.code,{children:"useOnchainStack"}),": ",(0,i.jsx)(n.code,{children:"boolean"}),";\n",(0,i.jsx)(n.code,{children:"witnesses"}),": {\n",(0,i.jsx)(n.code,{children:"check"}),": {};\n",(0,i.jsx)(n.code,{children:"empty"}),": {};\n",(0,i.jsx)(n.code,{children:"fromFields"}),": {};\n",(0,i.jsx)(n.code,{children:"fromValue"}),": {};\n",(0,i.jsx)(n.code,{children:"toAuxiliary"}),": {};\n",(0,i.jsx)(n.code,{children:"toCanonical"}),": ",(0,i.jsx)(n.code,{children:"null"})," | {};\n",(0,i.jsx)(n.code,{children:"toFields"}),": {};\n",(0,i.jsx)(n.code,{children:"toInput"}),": {};\n",(0,i.jsx)(n.code,{children:"toValue"}),": {};\n",(0,i.jsx)(n.code,{children:"sizeInFields"}),": ;\n};\n}) => {\n",(0,i.jsx)(n.code,{children:"isRecursive"}),": ",(0,i.jsx)(n.a,{href:"/o1js/api-reference/classes/Bool",children:(0,i.jsx)(n.code,{children:"Bool"})}),";\n",(0,i.jsx)(n.code,{children:"onchainActionState"}),": ",(0,i.jsx)(n.a,{href:"/o1js/api-reference/classes/Field",children:(0,i.jsx)(n.code,{children:"Field"})}),";\n",(0,i.jsx)(n.code,{children:"onchainStack"}),": ",(0,i.jsx)(n.a,{href:"/o1js/api-reference/classes/Field",children:(0,i.jsx)(n.code,{children:"Field"})}),";\n",(0,i.jsx)(n.code,{children:"processedActionState"}),": ",(0,i.jsx)(n.a,{href:"/o1js/api-reference/classes/Field",children:(0,i.jsx)(n.code,{children:"Field"})}),";\n",(0,i.jsx)(n.code,{children:"stack"}),": ",(0,i.jsx)(n.a,{href:"/o1js/api-reference/classes/MerkleList",children:(0,i.jsx)(n.code,{children:"MerkleList"})}),"<",(0,i.jsx)(n.a,{href:"/o1js/api-reference/classes/MerkleList",children:(0,i.jsx)(n.code,{children:"MerkleList"})}),"<",(0,i.jsx)(n.a,{href:"/o1js/api-reference/classes/Hashed",children:(0,i.jsx)(n.code,{children:"Hashed"})}),"<",(0,i.jsx)(n.code,{children:"InferProvable"}),"<",(0,i.jsx)(n.code,{children:"A"}),", ",(0,i.jsx)(n.a,{href:"/o1js/api-reference/classes/Field",children:(0,i.jsx)(n.code,{children:"Field"})}),">>>>;\n",(0,i.jsx)(n.code,{children:"useOnchainStack"}),": ",(0,i.jsx)(n.a,{href:"/o1js/api-reference/classes/Bool",children:(0,i.jsx)(n.code,{children:"Bool"})}),";\n",(0,i.jsx)(n.code,{children:"witnesses"}),": ",(0,i.jsx)(n.a,{href:"/o1js/api-reference/classes/Unconstrained",children:(0,i.jsx)(n.code,{children:"Unconstrained"})}),"<",(0,i.jsx)(n.code,{children:"ActionWitnesses"}),">;\n};\n",(0,i.jsx)(n.code,{children:"fromValue"}),": (",(0,i.jsx)(n.code,{children:"value"}),": {\n",(0,i.jsx)(n.code,{children:"isRecursive"}),": ",(0,i.jsx)(n.code,{children:"boolean"})," | ",(0,i.jsx)(n.a,{href:"/o1js/api-reference/classes/Bool",children:(0,i.jsx)(n.code,{children:"Bool"})}),";\n",(0,i.jsx)(n.code,{children:"onchainActionState"}),": ",(0,i.jsx)(n.code,{children:"string"})," | ",(0,i.jsx)(n.code,{children:"number"})," | ",(0,i.jsx)(n.code,{children:"bigint"})," | ",(0,i.jsx)(n.a,{href:"/o1js/api-reference/classes/Field",children:(0,i.jsx)(n.code,{children:"Field"})}),";\n",(0,i.jsx)(n.code,{children:"onchainStack"}),": ",(0,i.jsx)(n.code,{children:"string"})," | ",(0,i.jsx)(n.code,{children:"number"})," | ",(0,i.jsx)(n.code,{children:"bigint"})," | ",(0,i.jsx)(n.a,{href:"/o1js/api-reference/classes/Field",children:(0,i.jsx)(n.code,{children:"Field"})}),";\n",(0,i.jsx)(n.code,{children:"processedActionState"}),": ",(0,i.jsx)(n.code,{children:"string"})," | ",(0,i.jsx)(n.code,{children:"number"})," | ",(0,i.jsx)(n.code,{children:"bigint"})," | ",(0,i.jsx)(n.a,{href:"/o1js/api-reference/classes/Field",children:(0,i.jsx)(n.code,{children:"Field"})}),";\n",(0,i.jsx)(n.code,{children:"stack"}),": ",(0,i.jsx)(n.code,{children:"any"}),";\n",(0,i.jsx)(n.code,{children:"useOnchainStack"}),": ",(0,i.jsx)(n.code,{children:"boolean"})," | ",(0,i.jsx)(n.a,{href:"/o1js/api-reference/classes/Bool",children:(0,i.jsx)(n.code,{children:"Bool"})}),";\n",(0,i.jsx)(n.code,{children:"witnesses"}),":   | ",(0,i.jsx)(n.code,{children:"ActionWitnesses"}),"\n| ",(0,i.jsx)(n.a,{href:"/o1js/api-reference/classes/Unconstrained",children:(0,i.jsx)(n.code,{children:"Unconstrained"})}),"<",(0,i.jsx)(n.code,{children:"ActionWitnesses"}),">;\n}) => {\n",(0,i.jsx)(n.code,{children:"isRecursive"}),": ",(0,i.jsx)(n.a,{href:"/o1js/api-reference/classes/Bool",children:(0,i.jsx)(n.code,{children:"Bool"})}),";\n",(0,i.jsx)(n.code,{children:"onchainActionState"}),": ",(0,i.jsx)(n.a,{href:"/o1js/api-reference/classes/Field",children:(0,i.jsx)(n.code,{children:"Field"})}),";\n",(0,i.jsx)(n.code,{children:"onchainStack"}),": ",(0,i.jsx)(n.a,{href:"/o1js/api-reference/classes/Field",children:(0,i.jsx)(n.code,{children:"Field"})}),";\n",(0,i.jsx)(n.code,{children:"processedActionState"}),": ",(0,i.jsx)(n.a,{href:"/o1js/api-reference/classes/Field",children:(0,i.jsx)(n.code,{children:"Field"})}),";\n",(0,i.jsx)(n.code,{children:"stack"}),": ",(0,i.jsx)(n.a,{href:"/o1js/api-reference/classes/MerkleList",children:(0,i.jsx)(n.code,{children:"MerkleList"})}),"<",(0,i.jsx)(n.a,{href:"/o1js/api-reference/classes/MerkleList",children:(0,i.jsx)(n.code,{children:"MerkleList"})}),"<",(0,i.jsx)(n.a,{href:"/o1js/api-reference/classes/Hashed",children:(0,i.jsx)(n.code,{children:"Hashed"})}),"<",(0,i.jsx)(n.code,{children:"InferProvable"}),"<",(0,i.jsx)(n.code,{children:"A"}),", ",(0,i.jsx)(n.a,{href:"/o1js/api-reference/classes/Field",children:(0,i.jsx)(n.code,{children:"Field"})}),">>>>;\n",(0,i.jsx)(n.code,{children:"useOnchainStack"}),": ",(0,i.jsx)(n.a,{href:"/o1js/api-reference/classes/Bool",children:(0,i.jsx)(n.code,{children:"Bool"})}),";\n",(0,i.jsx)(n.code,{children:"witnesses"}),": ",(0,i.jsx)(n.a,{href:"/o1js/api-reference/classes/Unconstrained",children:(0,i.jsx)(n.code,{children:"Unconstrained"})}),"<",(0,i.jsx)(n.code,{children:"ActionWitnesses"}),">;\n};\n",(0,i.jsx)(n.code,{children:"toInput"}),": (",(0,i.jsx)(n.code,{children:"x"}),": {\n",(0,i.jsx)(n.code,{children:"isRecursive"}),": ",(0,i.jsx)(n.a,{href:"/o1js/api-reference/classes/Bool",children:(0,i.jsx)(n.code,{children:"Bool"})}),";\n",(0,i.jsx)(n.code,{children:"onchainActionState"}),": ",(0,i.jsx)(n.a,{href:"/o1js/api-reference/classes/Field",children:(0,i.jsx)(n.code,{children:"Field"})}),";\n",(0,i.jsx)(n.code,{children:"onchainStack"}),": ",(0,i.jsx)(n.a,{href:"/o1js/api-reference/classes/Field",children:(0,i.jsx)(n.code,{children:"Field"})}),";\n",(0,i.jsx)(n.code,{children:"processedActionState"}),": ",(0,i.jsx)(n.a,{href:"/o1js/api-reference/classes/Field",children:(0,i.jsx)(n.code,{children:"Field"})}),";\n",(0,i.jsx)(n.code,{children:"stack"}),": ",(0,i.jsx)(n.a,{href:"/o1js/api-reference/classes/MerkleList",children:(0,i.jsx)(n.code,{children:"MerkleList"})}),"<",(0,i.jsx)(n.a,{href:"/o1js/api-reference/classes/MerkleList",children:(0,i.jsx)(n.code,{children:"MerkleList"})}),"<",(0,i.jsx)(n.a,{href:"/o1js/api-reference/classes/Hashed",children:(0,i.jsx)(n.code,{children:"Hashed"})}),"<",(0,i.jsx)(n.code,{children:"InferProvable"}),"<",(0,i.jsx)(n.code,{children:"A"}),", ",(0,i.jsx)(n.a,{href:"/o1js/api-reference/classes/Field",children:(0,i.jsx)(n.code,{children:"Field"})}),">>>>;\n",(0,i.jsx)(n.code,{children:"useOnchainStack"}),": ",(0,i.jsx)(n.a,{href:"/o1js/api-reference/classes/Bool",children:(0,i.jsx)(n.code,{children:"Bool"})}),";\n",(0,i.jsx)(n.code,{children:"witnesses"}),": ",(0,i.jsx)(n.a,{href:"/o1js/api-reference/classes/Unconstrained",children:(0,i.jsx)(n.code,{children:"Unconstrained"})}),"<",(0,i.jsx)(n.code,{children:"ActionWitnesses"}),">;\n}) => {\n",(0,i.jsx)(n.code,{children:"fields"}),": ",(0,i.jsx)(n.a,{href:"/o1js/api-reference/classes/Field",children:(0,i.jsx)(n.code,{children:"Field"})}),"[];\n",(0,i.jsx)(n.code,{children:"packed"}),": [",(0,i.jsx)(n.a,{href:"/o1js/api-reference/classes/Field",children:(0,i.jsx)(n.code,{children:"Field"})}),", ",(0,i.jsx)(n.code,{children:"number"}),"][];\n};\n",(0,i.jsx)(n.code,{children:"toJSON"}),": (",(0,i.jsx)(n.code,{children:"x"}),": {\n",(0,i.jsx)(n.code,{children:"isRecursive"}),": ",(0,i.jsx)(n.a,{href:"/o1js/api-reference/classes/Bool",children:(0,i.jsx)(n.code,{children:"Bool"})}),";\n",(0,i.jsx)(n.code,{children:"onchainActionState"}),": ",(0,i.jsx)(n.a,{href:"/o1js/api-reference/classes/Field",children:(0,i.jsx)(n.code,{children:"Field"})}),";\n",(0,i.jsx)(n.code,{children:"onchainStack"}),": ",(0,i.jsx)(n.a,{href:"/o1js/api-reference/classes/Field",children:(0,i.jsx)(n.code,{children:"Field"})}),";\n",(0,i.jsx)(n.code,{children:"processedActionState"}),": ",(0,i.jsx)(n.a,{href:"/o1js/api-reference/classes/Field",children:(0,i.jsx)(n.code,{children:"Field"})}),";\n",(0,i.jsx)(n.code,{children:"stack"}),": ",(0,i.jsx)(n.a,{href:"/o1js/api-reference/classes/MerkleList",children:(0,i.jsx)(n.code,{children:"MerkleList"})}),"<",(0,i.jsx)(n.a,{href:"/o1js/api-reference/classes/MerkleList",children:(0,i.jsx)(n.code,{children:"MerkleList"})}),"<",(0,i.jsx)(n.a,{href:"/o1js/api-reference/classes/Hashed",children:(0,i.jsx)(n.code,{children:"Hashed"})}),"<",(0,i.jsx)(n.code,{children:"InferProvable"}),"<",(0,i.jsx)(n.code,{children:"A"}),", ",(0,i.jsx)(n.a,{href:"/o1js/api-reference/classes/Field",children:(0,i.jsx)(n.code,{children:"Field"})}),">>>>;\n",(0,i.jsx)(n.code,{children:"useOnchainStack"}),": ",(0,i.jsx)(n.a,{href:"/o1js/api-reference/classes/Bool",children:(0,i.jsx)(n.code,{children:"Bool"})}),";\n",(0,i.jsx)(n.code,{children:"witnesses"}),": ",(0,i.jsx)(n.a,{href:"/o1js/api-reference/classes/Unconstrained",children:(0,i.jsx)(n.code,{children:"Unconstrained"})}),"<",(0,i.jsx)(n.code,{children:"ActionWitnesses"}),">;\n}) => {\n",(0,i.jsx)(n.code,{children:"isRecursive"}),": ",(0,i.jsx)(n.code,{children:"boolean"}),";\n",(0,i.jsx)(n.code,{children:"onchainActionState"}),": ",(0,i.jsx)(n.code,{children:"string"}),";\n",(0,i.jsx)(n.code,{children:"onchainStack"}),": ",(0,i.jsx)(n.code,{children:"string"}),";\n",(0,i.jsx)(n.code,{children:"processedActionState"}),": ",(0,i.jsx)(n.code,{children:"string"}),";\n",(0,i.jsx)(n.code,{children:"stack"}),": {\n",(0,i.jsx)(n.code,{children:"_emptyHash"}),": ",(0,i.jsx)(n.code,{children:"null"})," | ",(0,i.jsx)(n.code,{children:"string"}),";\n",(0,i.jsx)(n.code,{children:"_innerProvable"}),":   | ",(0,i.jsx)(n.code,{children:"null"}),"\n| {\n",(0,i.jsx)(n.code,{children:"check"}),": {};\n",(0,i.jsx)(n.code,{children:"empty"}),": {};\n",(0,i.jsx)(n.code,{children:"fromFields"}),": {};\n",(0,i.jsx)(n.code,{children:"fromValue"}),": {};\n",(0,i.jsx)(n.code,{children:"toAuxiliary"}),": {};\n",(0,i.jsx)(n.code,{children:"toCanonical"}),": ",(0,i.jsx)(n.code,{children:"null"})," | {};\n",(0,i.jsx)(n.code,{children:"toFields"}),": {};\n",(0,i.jsx)(n.code,{children:"toInput"}),": {};\n",(0,i.jsx)(n.code,{children:"toValue"}),": {};\n",(0,i.jsx)(n.code,{children:"sizeInFields"}),": ;\n};\n",(0,i.jsx)(n.code,{children:"_nextHash"}),": ",(0,i.jsx)(n.code,{children:"null"})," | {};\n",(0,i.jsx)(n.code,{children:"_provable"}),":   | ",(0,i.jsx)(n.code,{children:"null"}),"\n| {\n",(0,i.jsx)(n.code,{children:"check"}),": {};\n",(0,i.jsx)(n.code,{children:"empty"}),": {};\n",(0,i.jsx)(n.code,{children:"fromFields"}),": {};\n",(0,i.jsx)(n.code,{children:"fromValue"}),": {};\n",(0,i.jsx)(n.code,{children:"toAuxiliary"}),": {};\n",(0,i.jsx)(n.code,{children:"toCanonical"}),": ",(0,i.jsx)(n.code,{children:"null"})," | {};\n",(0,i.jsx)(n.code,{children:"toFields"}),": {};\n",(0,i.jsx)(n.code,{children:"toInput"}),": {};\n",(0,i.jsx)(n.code,{children:"toValue"}),": {};\n",(0,i.jsx)(n.code,{children:"sizeInFields"}),": ;\n};\n",(0,i.jsx)(n.code,{children:"empty"}),": {};\n",(0,i.jsx)(n.code,{children:"emptyHash"}),": ",(0,i.jsx)(n.code,{children:"string"}),";\n",(0,i.jsx)(n.code,{children:"from"}),": {};\n",(0,i.jsx)(n.code,{children:"fromReverse"}),": {};\n",(0,i.jsx)(n.code,{children:"prototype"}),": {\n",(0,i.jsx)(n.code,{children:"Constructor"}),": {\n",(0,i.jsx)(n.code,{children:"_emptyHash"}),": ",(0,i.jsx)(n.code,{children:"null"})," | ",(0,i.jsx)(n.code,{children:"string"}),";\n",(0,i.jsx)(n.code,{children:"_innerProvable"}),":   | ",(0,i.jsx)(n.code,{children:"null"}),"\n| {\n",(0,i.jsx)(n.code,{children:"check"}),": {};\n",(0,i.jsx)(n.code,{children:"empty"}),": {};\n",(0,i.jsx)(n.code,{children:"fromFields"}),": {};\n",(0,i.jsx)(n.code,{children:"fromValue"}),": {};\n",(0,i.jsx)(n.code,{children:"toAuxiliary"}),": {};\n",(0,i.jsx)(n.code,{children:"toCanonical"}),": ",(0,i.jsx)(n.code,{children:"null"})," | {};\n",(0,i.jsx)(n.code,{children:"toFields"}),": {};\n",(0,i.jsx)(n.code,{children:"toInput"}),": {};\n",(0,i.jsx)(n.code,{children:"toValue"}),": {};\n",(0,i.jsx)(n.code,{children:"sizeInFields"}),": ;\n};\n",(0,i.jsx)(n.code,{children:"_nextHash"}),": ",(0,i.jsx)(n.code,{children:"null"})," | {};\n",(0,i.jsx)(n.code,{children:"_provable"}),":   | ",(0,i.jsx)(n.code,{children:"null"}),"\n| {\n",(0,i.jsx)(n.code,{children:"check"}),": {};\n",(0,i.jsx)(n.code,{children:"empty"}),": {};\n",(0,i.jsx)(n.code,{children:"fromFields"}),": {};\n",(0,i.jsx)(n.code,{children:"fromValue"}),": {};\n",(0,i.jsx)(n.code,{children:"toAuxiliary"}),": {};\n",(0,i.jsx)(n.code,{children:"toCanonical"}),": ",(0,i.jsx)(n.code,{children:"null"})," | {};\n",(0,i.jsx)(n.code,{children:"toFields"}),": {};\n",(0,i.jsx)(n.code,{children:"toInput"}),": {};\n",(0,i.jsx)(n.code,{children:"toValue"}),": {};\n",(0,i.jsx)(n.code,{children:"sizeInFields"}),": ;\n};\n",(0,i.jsx)(n.code,{children:"emptyHash"}),": ",(0,i.jsx)(n.code,{children:"string"}),";\n",(0,i.jsx)(n.code,{children:"prototype"}),": { hash: string; data: { get: {}; set: {}; setTo: {}; updateAsProver: {}; }; isEmpty: {}; push: {}; pushIf: {}; popExn: {}; pop: {}; popOption: {}; popIf: {}; popIfUnsafe: {}; clone: {}; forEach: {}; startIterating: {}; ... 5 more ...; readonly innerProvable: { ...; }; };\n",(0,i.jsx)(n.code,{children:"create"}),": ;\n};\n",(0,i.jsx)(n.code,{children:"data"}),": {\n",(0,i.jsx)(n.code,{children:"get"}),": ;\n",(0,i.jsx)(n.code,{children:"set"}),": ;\n",(0,i.jsx)(n.code,{children:"setTo"}),": ;\n",(0,i.jsx)(n.code,{children:"updateAsProver"}),": ;\n};\n",(0,i.jsx)(n.code,{children:"hash"}),": ",(0,i.jsx)(n.code,{children:"string"}),";\n",(0,i.jsx)(n.code,{children:"innerProvable"}),": {\n",(0,i.jsx)(n.code,{children:"check"}),": {};\n",(0,i.jsx)(n.code,{children:"empty"}),": {};\n",(0,i.jsx)(n.code,{children:"fromFields"}),": {};\n",(0,i.jsx)(n.code,{children:"fromValue"}),": {};\n",(0,i.jsx)(n.code,{children:"toAuxiliary"}),": {};\n",(0,i.jsx)(n.code,{children:"toCanonical"}),": ",(0,i.jsx)(n.code,{children:"null"})," | {};\n",(0,i.jsx)(n.code,{children:"toFields"}),": {};\n",(0,i.jsx)(n.code,{children:"toInput"}),": {};\n",(0,i.jsx)(n.code,{children:"toValue"}),": {};\n",(0,i.jsx)(n.code,{children:"sizeInFields"}),": ;\n};\n",(0,i.jsx)(n.code,{children:"clone"}),": ;\n",(0,i.jsx)(n.code,{children:"forEach"}),": ;\n",(0,i.jsx)(n.code,{children:"isEmpty"}),": ;\n",(0,i.jsx)(n.code,{children:"lengthUnconstrained"}),": ;\n",(0,i.jsx)(n.code,{children:"nextHash"}),": ;\n",(0,i.jsx)(n.code,{children:"pop"}),": ;\n",(0,i.jsx)(n.code,{children:"popExn"}),": ;\n",(0,i.jsx)(n.code,{children:"popIf"}),": ;\n",(0,i.jsx)(n.code,{children:"popIfUnsafe"}),": ;\n",(0,i.jsx)(n.code,{children:"popOption"}),": ;\n",(0,i.jsx)(n.code,{children:"push"}),": ;\n",(0,i.jsx)(n.code,{children:"pushIf"}),": ;\n",(0,i.jsx)(n.code,{children:"startIterating"}),": ;\n",(0,i.jsx)(n.code,{children:"startIteratingFromLast"}),": ;\n",(0,i.jsx)(n.code,{children:"toArrayUnconstrained"}),": ;\n};\n",(0,i.jsx)(n.code,{children:"provable"}),": {\n",(0,i.jsx)(n.code,{children:"check"}),": {};\n",(0,i.jsx)(n.code,{children:"empty"}),": {};\n",(0,i.jsx)(n.code,{children:"fromFields"}),": {};\n",(0,i.jsx)(n.code,{children:"fromValue"}),": {};\n",(0,i.jsx)(n.code,{children:"toAuxiliary"}),": {};\n",(0,i.jsx)(n.code,{children:"toCanonical"}),": ",(0,i.jsx)(n.code,{children:"null"})," | {};\n",(0,i.jsx)(n.code,{children:"toFields"}),": {};\n",(0,i.jsx)(n.code,{children:"toInput"}),": {};\n",(0,i.jsx)(n.code,{children:"toValue"}),": {};\n",(0,i.jsx)(n.code,{children:"sizeInFields"}),": ;\n};\n",(0,i.jsx)(n.code,{children:"create"}),": ;\n};\n",(0,i.jsx)(n.code,{children:"useOnchainStack"}),": ",(0,i.jsx)(n.code,{children:"boolean"}),";\n",(0,i.jsx)(n.code,{children:"witnesses"}),": {\n",(0,i.jsx)(n.code,{children:"check"}),": {};\n",(0,i.jsx)(n.code,{children:"empty"}),": {};\n",(0,i.jsx)(n.code,{children:"fromFields"}),": {};\n",(0,i.jsx)(n.code,{children:"fromValue"}),": {};\n",(0,i.jsx)(n.code,{children:"toAuxiliary"}),": {};\n",(0,i.jsx)(n.code,{children:"toCanonical"}),": ",(0,i.jsx)(n.code,{children:"null"})," | {};\n",(0,i.jsx)(n.code,{children:"toFields"}),": {};\n",(0,i.jsx)(n.code,{children:"toInput"}),": {};\n",(0,i.jsx)(n.code,{children:"toValue"}),": {};\n",(0,i.jsx)(n.code,{children:"sizeInFields"}),": ;\n};\n};\n}"]})]})}function h(e={}){const{wrapper:n}={...(0,d.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(t,{...e})}):t(e)}}}]);