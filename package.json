{
  "name": "o1js",
  "description": "TypeScript framework for zk-SNARKs and zkApps",
  "version": "2.6.0",
  "license": "Apache-2.0",
  "homepage": "https://github.com/o1-labs/o1js/",
  "repository": {
    "type": "git",
    "url": "https://github.com/o1-labs/o1js.git"
  },
  "keywords": [
    "mina",
    "zkapp",
    "zk",
    "smart contract",
    "cryptography",
    "blockchain",
    "web3",
    "zk-snark",
    "zero knowledge"
  ],
  "type": "module",
  "exports": {
    "types": "./dist/node/index.d.ts",
    "browser": "./dist/web/index.js",
    "node": {
      "import": "./dist/node/index.js",
      "require": "./dist/node/index.cjs"
    },
    "default": "./dist/web/index.js"
  },
  "types": "./dist/node/index.d.ts",
  "files": [
    "src/build",
    "dist",
    "src/**/*.ts",
    "src/**/*.d.ts",
    "dist/**/*.map",
    "src/**/*.map"
  ],
  "bin": {
    "snarky-run": "src/build/run.js"
  },
  "engines": {
    "node": ">=18.14.0"
  },
  "scripts": {
    "dev": "npx tsc -p tsconfig.test.json && node src/build/copy-to-dist.js",
    "build": "npm run checkForBindings && node src/build/copy-artifacts.js && rimraf ./dist/node && npm run dev && node src/build/build-node.js",
    "build:all": "npm run build:update-bindings && npm run build:sparky && npm run build",
    "build:all-safe": "npm run build:update-bindings && (npm run build:sparky || echo 'Sparky build failed, continuing...') && npm run build",
    "build:bindings": "./src/bindings/scripts/build-o1js-node.sh",
    "build:update-bindings": "./src/bindings/scripts/update-o1js-bindings.sh",
    "build:bindings-remote": "./src/bindings/scripts/remote-build-bindings.sh && npm run build",
    "build:bindings-download": "./src/bindings/scripts/download-bindings.sh",
    "build:wasm": "./src/bindings/scripts/update-wasm-and-types.sh",
    "build:sparky": "./src/bindings/scripts/build-sparky-wasm.sh",
    "build:web": "rimraf ./dist/web && node src/build/build-web.js",
    "build:examples": "npm run build && rimraf ./dist/examples && npx tsc -p tsconfig.examples.json && npx tsc -p benchmark/tsconfig.json",
    "checkForBindings": "test -d ./src/bindings/compiled || npm run build:bindings-download",
    "build:docs": "npx typedoc",
    "prepublish:web": "npm run checkForBindings && NODE_ENV=production node src/build/build-web.js",
    "prepublish:node": "npm run checkForBindings && node src/build/copy-artifacts.js && rimraf ./dist/node && tsc -p tsconfig.node.json && node src/build/copy-to-dist.js && NODE_ENV=production node src/build/build-node.js",
    "prepublishOnly": "npm run prepublish:web && npm run prepublish:node",
    "dump-vks": "npm run build && ./run tests/vk-regression/vk-regression.ts --bundle --dump",
    "format": "prettier --write --ignore-unknown",
    "format:check": "prettier --check --ignore-unknown",
    "clean": "rimraf ./dist && rimraf ./src/bindings/compiled/_node_bindings",
    "clean-all": "npm run clean && rimraf ./tests/report && rimraf ./tests/test-artifacts",
    "lint": "npx oxlint",
    "lint:fix": "npx oxlint --fix --fix-suggestions",
    "lint:strict": "npx oxlint --max-warnings 0",
    "test": "./run-jest-tests.sh",
    "test:integration": "./run-integration-tests.sh",
    "test:unit": "./run-unit-tests.sh",
    "test:sparky": "NODE_OPTIONS=--experimental-vm-modules npx jest src/test/integration/sparky-*.test.ts",
    "test:sparky:report": "npx tsx src/test/integration/run-sparky-integration-tests.ts",
    "test:vk-compatibility": "npx tsx src/test/vk-compatibility/run-tests.ts",
    "test:vk-parity": "NODE_OPTIONS=--experimental-vm-modules npx jest src/test/vk-parity-comprehensive.test.ts --verbose",
    "test:backend-infrastructure": "NODE_OPTIONS=--experimental-vm-modules npx jest src/test/backend-infrastructure.test.ts --verbose",
    "test:constraint-analysis": "NODE_OPTIONS=--experimental-vm-modules npx jest src/test/constraint-system-analysis.test.ts --verbose",
    "test:framework": "npm run test:vk-parity && npm run test:backend-infrastructure && npm run test:constraint-analysis",
    "test:unified-report": "npx tsx src/test/run-unified-test-report.ts",
    "generate:compatibility-dashboard": "npx ts-node src/test/pbt/ci/AutomatedReporting.ts",
    "monitor:performance": "npx ts-node src/test/pbt/ci/PerformanceMonitoring.ts",
    "ci:setup": "./scripts/ci/setup-ci-environment.sh",
    "ci:setup-dirs": "mkdir -p test-results performance-reports historical-data compatibility-dashboard vk-analysis constraint-analysis",
    "ci:docker-quick": "docker-compose -f scripts/ci/docker-compose.ci.yml --profile quick up --build",
    "ci:docker-comprehensive": "docker-compose -f scripts/ci/docker-compose.ci.yml --profile comprehensive up --build",
    "ci:docker-full": "docker-compose -f scripts/ci/docker-compose.ci.yml --profile full up --build",
    "ci:docker-dashboard": "docker-compose -f scripts/ci/docker-compose.ci.yml --profile dashboard up -d",
    "test:pbt": "NODE_OPTIONS=--experimental-vm-modules npx jest src/test/pbt/**/*.test.ts --verbose",
    "test:pbt:phase1": "NODE_OPTIONS=--experimental-vm-modules npx jest src/test/pbt/properties/basic-field.test.ts --verbose",
    "test:pbt:phase2": "NODE_OPTIONS=--experimental-vm-modules npx jest src/test/pbt/properties/advanced-ops.test.ts --verbose",
    "test:pbt:phase3": "NODE_OPTIONS=--experimental-vm-modules npx jest src/test/pbt/properties/circuit-composition.test.ts --verbose",
    "test:pbt:report": "npx tsx src/test/pbt/reporting/generate-report.ts",
    "test:pbt:quick": "TEST_LEVEL=quick node scripts/ci/run-compatibility-tests.js",
    "test:pbt:comprehensive": "TEST_LEVEL=comprehensive node scripts/ci/run-compatibility-tests.js",
    "test:pbt:full-vk-analysis": "TEST_LEVEL=full node scripts/ci/run-compatibility-tests.js",
    "test:pbt:ci-quick": "./scripts/ci/run-quick-tests.sh",
    "test:pbt:ci-comprehensive": "./scripts/ci/run-comprehensive-tests.sh",
    "test:pbt:ci-full": "./scripts/ci/run-full-analysis.sh",
    "test:compatibility": "node test-comprehensive-compatibility.mjs",
    "test:compatibility:quick": "node test-comprehensive-compatibility.mjs --quick",
    "test:compatibility:minimal": "node test-comprehensive-compatibility.mjs --minimal",
    "test:compatibility:basic": "node test-comprehensive-compatibility.mjs --basic",
    "test:compatibility:intermediate": "node test-comprehensive-compatibility.mjs --intermediate",
    "test:compatibility:advanced": "node test-comprehensive-compatibility.mjs --advanced",
    "test:compatibility:comprehensive": "node test-comprehensive-compatibility.mjs --comprehensive",
    "test:compatibility:suite": "NODE_OPTIONS=--experimental-vm-modules npx jest src/test/pbt/suites/ComprehensiveCompatibilityTestSuite.test.ts --verbose",
    "test:e2e": "rimraf ./tests/report && rimraf ./tests/test-artifacts && npx playwright test",
    "test:all": "./run-all-local-tests.sh",
    "e2e:prepare-server": "npm run build:examples && (cp -rf dist/examples dist/web || :) && node src/build/e2e-tests-build-helper.js && cp -rf src/examples/plain-html/index.html src/examples/plain-html/server.js tests/artifacts/html/*.html tests/artifacts/javascript/*.js dist/web",
    "e2e:run-server": "node dist/web/server.js",
    "e2e:install": "npx playwright install --with-deps",
    "e2e:show-report": "npx playwright show-report tests/report",
    "update-changelog": "./update-changelog.sh",
    "checkCommit": "./src/bindings/scripts/check-commit.sh",
    "prepare": "husky"
  },
  "author": "O(1) Labs",
  "devDependencies": {
    "@influxdata/influxdb-client": "^1.33.2",
    "@noble/curves": "1.8.1",
    "@noble/hashes": "^1.3.2",
    "@playwright/test": "^1.48.0",
    "@types/jest": "^27.0.0",
    "@types/libsodium-wrappers-sumo": "^0.7.8",
    "@types/node": "^18.14.2",
    "esbuild": "^0.25.5",
    "expect": "^29.0.1",
    "fast-check": "^3.23.2",
    "fs-extra": "^10.0.0",
    "glob": "^8.0.3",
    "graphql": "^16.10.0",
    "howslow": "^0.1.0",
    "husky": "^9.1.7",
    "jest": "^28.1.3",
    "jstat": "^1.9.6",
    "minimist": "^1.2.7",
    "oxlint": "^1.0.0",
    "pkg-pr-new": "^0.0.9",
    "prettier": "^2.8.4",
    "replace-in-file": "^6.3.5",
    "rimraf": "^3.0.2",
    "ts-jest": "^28.0.8",
    "typedoc": "^0.28.5",
    "typedoc-plugin-markdown": "^4.6.4",
    "typedoc-plugin-merge-modules": "^7.0.0",
    "typescript": "^5.4.5"
  },
  "dependencies": {
    "blakejs": "1.2.1",
    "cachedir": "^2.4.0",
    "js-sha256": "^0.9.0",
    "libsodium-wrappers-sumo": "^0.7.15",
    "reflect-metadata": "^0.1.13",
    "stacktrace-js": "^2.0.2",
    "tslib": "^2.3.0"
  }
}
