{
  "timestamp": "2025-07-02T15:33:23.415Z",
  "totalDuration": 660603,
  "overallSuccessRate": 92.3076923076923,
  "vkParityStatus": {
    "name": "VK Parity Framework",
    "command": "npm run test:vk-parity",
    "description": "Systematic verification key generation parity testing",
    "output": "(node:1086302) ExperimentalWarning: VM Modules is an experimental feature and might change at any time\n(Use `node --trace-warnings ...` to show where the warning was created)\nts-jest[versions] (WARN) Version 5.4.5 of typescript installed has not been tested with ts-jest. If you're experiencing issues, consider using a supported version (>=4.3.0 <5.0.0-0). Please do not report issues in ts-jest if you are using unsupported versions.\nFAIL src/test/vk-parity-comprehensive.test.ts (52.805 s)\n  VK Parity Between Backends\n    Infrastructure Validation\n      ✕ backend routing infrastructure (2 ms)\n    Basic Circuit VK Parity\n      ✕ field multiplication constraint parity (40 ms)\n      ✓ field addition constraint parity (22 ms)\n      ✓ boolean logic constraint parity (14 ms)\n      ✓ complex expression constraint parity (28 ms)\n    ZkProgram VK Parity\n      ✓ simple multiplication program VK parity (15420 ms)\n      ✕ addition program VK parity (1870 ms)\n      ✓ complex program VK parity (6830 ms)\n    Edge Cases\n      ✕ empty circuit VK parity (5 ms)\n      ✓ identical circuit different compilation VK consistency (3745 ms)\n    Performance Impact Analysis\n      ✓ VK generation performance comparison (6859 ms)\n    Validation Metrics\n      ✕ generate VK parity report (15678 ms)\n\n  ● VK Parity Between Backends › Infrastructure Validation › backend routing infrastructure\n\n    expect(received).toContain(expected) // indexOf\n\n    Expected value: StringContaining \"globalThis.__snarky not updated\"\n    Received array: [\"globalThis.__snarky not initialized with Snarky backend\"]\n\n      28 |       // TODO: When routing is fixed, change this expectation\n      29 |       expect(result.passed).toBe(false);\n    > 30 |       expect(result.issues).toContain(expect.stringContaining('globalThis.__snarky not updated'));\n         |                             ^\n      31 |       \n      32 |       console.log('🚨 KNOWN ISSUE: Backend routing infrastructure is broken');\n      33 |       console.log('   All constraints route through OCaml regardless of backend selection');\n\n      at Object.<anonymous> (src/test/vk-parity-comprehensive.test.ts:30:29)\n\n  ● VK Parity Between Backends › Basic Circuit VK Parity › field multiplication constraint parity\n\n    expect(received).toContain(expected) // indexOf\n\n    Expected value: StringContaining \"Constraint count mismatch\"\n    Received array: [\"Constraint count mismatch: Snarky=1, Sparky=4\"]\n\n    Looks like you wanted to test for object/array equality with the stricter `toContain` matcher. You probably need to use `toContainEqual` instead.\n\n      48 |       // When fixed: Should generate same constraint count\n      49 |       expect(result.passed).toBe(false); // TODO: Change to true when routing fixed\n    > 50 |       expect(result.issues).toContain(expect.stringContaining('Constraint count mismatch'));\n         |                             ^\n      51 |       \n      52 |       console.log(`Field multiplication: Snarky=${result.snarky.constraintCount}, Sparky=${result.sparky.constraintCount}`);\n      53 |     });\n\n      at Object.<anonymous> (src/test/vk-parity-comprehensive.test.ts:50:29)\n\n  ● VK Parity Between Backends › ZkProgram VK Parity › addition program VK parity\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: false\n    Received: true\n\n      114 |       );\n      115 |       \n    > 116 |       expect(result.passed).toBe(false);\n          |                             ^\n      117 |       console.log(`Addition program - Snarky: ${result.snarky.constraintCount}, Sparky: ${result.sparky.constraintCount}`);\n      118 |     });\n      119 |\n\n      at Object.<anonymous> (src/test/vk-parity-comprehensive.test.ts:116:29)\n\n  ● VK Parity Between Backends › Edge Cases › empty circuit VK parity\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: false\n    Received: true\n\n      138 |       \n      139 |       // Even empty circuits should have same constraint count\n    > 140 |       expect(result.passed).toBe(false); // TODO: Should be true when fixed\n          |                             ^\n      141 |       console.log(`Empty circuit - Snarky: ${result.snarky.constraintCount}, Sparky: ${result.sparky.constraintCount}`);\n      142 |     });\n      143 |\n\n      at Object.<anonymous> (src/test/vk-parity-comprehensive.test.ts:140:29)\n\n  ● VK Parity Between Backends › Validation Metrics › generate VK parity report\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: 7\n    Received: 6\n\n      274 |\n      275 |       // For now, expect all tests to fail due to routing bug\n    > 276 |       expect(results.summary.failing).toBe(results.summary.totalTests);\n          |                                       ^\n      277 |       expect(results.summary.infrastructureIssues.length).toBeGreaterThan(0);\n      278 |       \n      279 |       // TODO: When routing is fixed, expect most/all tests to pass:\n\n      at Object.<anonymous> (src/test/vk-parity-comprehensive.test.ts:276:39)\n\nTest Suites: 1 failed, 1 total\nTests:       5 failed, 7 passed, 12 total\nSnapshots:   0 total\nTime:        52.846 s, estimated 55 s\nRan all test suites matching /src\\/test\\/vk-parity-comprehensive.test.ts/i.\n\n> o1js@2.6.0 test:vk-parity\n> NODE_OPTIONS=--experimental-vm-modules npx jest src/test/vk-parity-comprehensive.test.ts --verbose\n\n  console.log\n    Loading Snarky backend...\n\n      at initializeBindings (dist/node/bindings.js:67:15)\n\n  console.log\n    ✓ Snarky backend loaded\n\n      at initializeBindings (dist/node/bindings.js:84:15)\n\n  console.log\n    Switching backend from snarky to sparky\n\n      at initializeBindings (dist/node/bindings.js:24:13)\n\n  console.log\n    Loading Sparky backend...\n\n      at initializeBindings (dist/node/bindings.js:40:15)\n\n  console.log\n    OCaml backend bridge initialized: false\n\n      at initializeBindings (dist/node/bindings.js:51:15)\n\n  console.log\n    ✓ Sparky backend loaded\n\n      at initializeBindings (dist/node/bindings.js:64:15)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:967 Converting Add(Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(1)))), Scale(FieldElement(BigInt([11037532056220336128, 2469829653914515739, 0, 4611686018427387904])), Var(VarId(2)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n      at SnarkyRunCompat.getConstraintSystem (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3158:26)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n      at SnarkyRunCompat.getConstraintSystem (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3158:26)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:967 Converting Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(1)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:967 Converting Add(Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(1)))), Scale(FieldElement(BigInt([11037532056220336128, 2469829653914515739, 0, 4611686018427387904])), Var(VarId(2)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:331657)\n      at SnarkyConstraintSystemCompat.toJson (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:2252:26)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:331657)\n      at SnarkyConstraintSystemCompat.toJson (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:2252:26)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:967 Converting Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(1)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:331657)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:331657)\n\n  console.log\n    Field Multiplication Constraint Parity: ❌\n\n      at BackendTestFramework.testConstraintParity (src/test/framework/backend-test-framework.ts:170:13)\n\n  console.log\n    Issues: Constraint count mismatch: Snarky=1, Sparky=4\n\n      at BackendTestFramework.testConstraintParity (src/test/framework/backend-test-framework.ts:172:15)\n\n  console.log\n    Switching backend from sparky to snarky\n\n      at initializeBindings (dist/node/bindings.js:24:13)\n\n  console.log\n    Loading Snarky backend...\n\n      at initializeBindings (dist/node/bindings.js:67:15)\n\n  console.log\n    ✓ Snarky backend loaded\n\n      at initializeBindings (dist/node/bindings.js:84:15)\n\n  console.log\n    Switching backend from snarky to sparky\n\n      at initializeBindings (dist/node/bindings.js:24:13)\n\n  console.log\n    Loading Sparky backend...\n\n      at initializeBindings (dist/node/bindings.js:40:15)\n\n  console.log\n    OCaml backend bridge initialized: false\n\n      at initializeBindings (dist/node/bindings.js:51:15)\n\n  console.log\n    ✓ Sparky backend loaded\n\n      at initializeBindings (dist/node/bindings.js:64:15)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:967 Converting Add(Add(Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(0)))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(1)))), Scale(FieldElement(BigInt([11037532056220336128, 2469829653914515739, 0, 4611686018427387904])), Var(VarId(2)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n      at SnarkyRunCompat.getConstraintSystem (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3158:26)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n      at SnarkyRunCompat.getConstraintSystem (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3158:26)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:967 Converting Add(Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(0)))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(1)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:967 Converting Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(0)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:967 Converting Add(Add(Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(0)))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(1)))), Scale(FieldElement(BigInt([11037532056220336128, 2469829653914515739, 0, 4611686018427387904])), Var(VarId(2)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:331657)\n      at SnarkyConstraintSystemCompat.toJson (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:2252:26)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:331657)\n      at SnarkyConstraintSystemCompat.toJson (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:2252:26)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:967 Converting Add(Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(0)))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(1)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:331657)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:331657)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:967 Converting Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(0)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n\n  console.log\n    Field Addition Constraint Parity: ❌\n\n      at BackendTestFramework.testConstraintParity (src/test/framework/backend-test-framework.ts:170:13)\n\n  console.log\n    Issues: Constraint count mismatch: Snarky=1, Sparky=3\n\n      at BackendTestFramework.testConstraintParity (src/test/framework/backend-test-framework.ts:172:15)\n\n  console.log\n    Field addition: Snarky=1, Sparky=3\n\n      at Object.<anonymous> (src/test/vk-parity-comprehensive.test.ts:62:15)\n\n  console.log\n    Switching backend from sparky to snarky\n\n      at initializeBindings (dist/node/bindings.js:24:13)\n\n  console.log\n    Loading Snarky backend...\n\n      at initializeBindings (dist/node/bindings.js:67:15)\n\n  console.log\n    ✓ Snarky backend loaded\n\n      at initializeBindings (dist/node/bindings.js:84:15)\n\n  console.log\n    Switching backend from snarky to sparky\n\n      at initializeBindings (dist/node/bindings.js:24:13)\n\n  console.log\n    Loading Sparky backend...\n\n      at initializeBindings (dist/node/bindings.js:40:15)\n\n  console.log\n    OCaml backend bridge initialized: false\n\n      at initializeBindings (dist/node/bindings.js:51:15)\n\n  console.log\n    ✓ Sparky backend loaded\n\n      at initializeBindings (dist/node/bindings.js:64:15)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:967 Converting Add(Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(2)))), Scale(FieldElement(BigInt([11037532056220336128, 2469829653914515739, 0, 4611686018427387904])), Var(VarId(3)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n      at SnarkyRunCompat.getConstraintSystem (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3158:26)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n      at SnarkyRunCompat.getConstraintSystem (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3158:26)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:967 Converting Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(2)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:967 Converting Add(Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(2)))), Scale(FieldElement(BigInt([11037532056220336128, 2469829653914515739, 0, 4611686018427387904])), Var(VarId(3)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:331657)\n      at SnarkyConstraintSystemCompat.toJson (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:2252:26)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:331657)\n      at SnarkyConstraintSystemCompat.toJson (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:2252:26)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:967 Converting Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(2)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:331657)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:331657)\n\n  console.log\n    Boolean Logic Constraint Parity: ❌\n\n      at BackendTestFramework.testConstraintParity (src/test/framework/backend-test-framework.ts:170:13)\n\n  console.log\n    Issues: Constraint count mismatch: Snarky=1, Sparky=4\n\n      at BackendTestFramework.testConstraintParity (src/test/framework/backend-test-framework.ts:172:15)\n\n  console.log\n    Boolean logic: Snarky=1, Sparky=4\n\n      at Object.<anonymous> (src/test/vk-parity-comprehensive.test.ts:72:15)\n\n  console.log\n    Switching backend from sparky to snarky\n\n      at initializeBindings (dist/node/bindings.js:24:13)\n\n  console.log\n    Loading Snarky backend...\n\n      at initializeBindings (dist/node/bindings.js:67:15)\n\n  console.log\n    ✓ Snarky backend loaded\n\n      at initializeBindings (dist/node/bindings.js:84:15)\n\n  console.log\n    Switching backend from snarky to sparky\n\n      at initializeBindings (dist/node/bindings.js:24:13)\n\n  console.log\n    Loading Sparky backend...\n\n      at initializeBindings (dist/node/bindings.js:40:15)\n\n  console.log\n    OCaml backend bridge initialized: false\n\n      at initializeBindings (dist/node/bindings.js:51:15)\n\n  console.log\n    ✓ Sparky backend loaded\n\n      at initializeBindings (dist/node/bindings.js:64:15)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:967 Converting Add(Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(3)))), Scale(FieldElement(BigInt([11037532056220336128, 2469829653914515739, 0, 4611686018427387904])), Var(VarId(4)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n      at SnarkyRunCompat.getConstraintSystem (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3158:26)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n      at SnarkyRunCompat.getConstraintSystem (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3158:26)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:967 Converting Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(3)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:967 Converting Add(Add(Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(2)))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(3)))), Scale(FieldElement(BigInt([11037532056220336128, 2469829653914515739, 0, 4611686018427387904])), Var(VarId(5)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n      at SnarkyRunCompat.getConstraintSystem (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3158:26)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n      at SnarkyRunCompat.getConstraintSystem (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3158:26)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:967 Converting Add(Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(2)))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(3)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:967 Converting Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(2)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:967 Converting Add(Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(3)))), Scale(FieldElement(BigInt([11037532056220336128, 2469829653914515739, 0, 4611686018427387904])), Var(VarId(4)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:331657)\n      at SnarkyConstraintSystemCompat.toJson (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:2252:26)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:331657)\n      at SnarkyConstraintSystemCompat.toJson (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:2252:26)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:967 Converting Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(3)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:331657)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:331657)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:967 Converting Add(Add(Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(2)))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(3)))), Scale(FieldElement(BigInt([11037532056220336128, 2469829653914515739, 0, 4611686018427387904])), Var(VarId(5)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:331657)\n      at SnarkyConstraintSystemCompat.toJson (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:2252:26)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:331657)\n      at SnarkyConstraintSystemCompat.toJson (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:2252:26)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:967 Converting Add(Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(2)))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(3)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:331657)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:331657)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:967 Converting Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(2)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n\n  console.log\n    Complex Expression Constraint Parity: ❌\n\n      at BackendTestFramework.testConstraintParity (src/test/framework/backend-test-framework.ts:170:13)\n\n  console.log\n    Issues: Constraint count mismatch: Snarky=2, Sparky=6\n\n      at BackendTestFramework.testConstraintParity (src/test/framework/backend-test-framework.ts:172:15)\n\n  console.log\n    Complex expression: Snarky=2, Sparky=6\n\n      at Object.<anonymous> (src/test/vk-parity-comprehensive.test.ts:82:15)\n\n  console.log\n    Switching backend from sparky to snarky\n\n      at initializeBindings (dist/node/bindings.js:24:13)\n\n  console.log\n    Loading Snarky backend...\n\n      at initializeBindings (dist/node/bindings.js:67:15)\n\n  console.log\n    ✓ Snarky backend loaded\n\n      at initializeBindings (dist/node/bindings.js:84:15)\n\n  console.log\n    Testing Simple Multiplication Program with Snarky...\n\n      at BackendTestFramework.testVKParity (src/test/framework/backend-test-framework.ts:67:15)\n\n  console.log\n    Switching backend from snarky to sparky\n\n      at initializeBindings (dist/node/bindings.js:24:13)\n\n  console.log\n    Loading Sparky backend...\n\n      at initializeBindings (dist/node/bindings.js:40:15)\n\n  console.log\n    OCaml backend bridge initialized: false\n\n      at initializeBindings (dist/node/bindings.js:51:15)\n\n  console.log\n    ✓ Sparky backend loaded\n\n      at initializeBindings (dist/node/bindings.js:64:15)\n\n  console.log\n    Testing Simple Multiplication Program with Sparky...\n\n      at BackendTestFramework.testVKParity (src/test/framework/backend-test-framework.ts:81:15)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:967 Converting Add(Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(2)))), Scale(FieldElement(BigInt([11037532056220336128, 2469829653914515739, 0, 4611686018427387904])), Var(VarId(3)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n      at SnarkyRunCompat.getConstraintSystem (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3158:26)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n      at SnarkyRunCompat.getConstraintSystem (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3158:26)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:967 Converting Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(2)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:967 Converting Add(Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(2)))), Scale(FieldElement(BigInt([11037532056220336128, 2469829653914515739, 0, 4611686018427387904])), Var(VarId(3)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:331657)\n      at SnarkyConstraintSystemCompat.toJson (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:2252:26)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:331657)\n      at SnarkyConstraintSystemCompat.toJson (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:2252:26)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:967 Converting Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(2)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:331657)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:331657)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:967 Converting Add(Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(1)))), Scale(FieldElement(BigInt([11037532056220336128, 2469829653914515739, 0, 4611686018427387904])), Var(VarId(2)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n      at SnarkyRunCompat.getConstraintSystem (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3158:26)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n      at SnarkyRunCompat.getConstraintSystem (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3158:26)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:967 Converting Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(1)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:967 Converting Add(Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(1)))), Scale(FieldElement(BigInt([11037532056220336128, 2469829653914515739, 0, 4611686018427387904])), Var(VarId(2)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n      at SnarkyRunCompat.getConstraintSystem (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3158:26)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n      at SnarkyRunCompat.getConstraintSystem (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3158:26)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:967 Converting Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(1)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:967 Converting Add(Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(2)))), Scale(FieldElement(BigInt([11037532056220336128, 2469829653914515739, 0, 4611686018427387904])), Var(VarId(3)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n      at SnarkyRunCompat.getConstraintSystem (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3158:26)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n      at SnarkyRunCompat.getConstraintSystem (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3158:26)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:967 Converting Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(2)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:967 Converting Add(Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(2)))), Scale(FieldElement(BigInt([11037532056220336128, 2469829653914515739, 0, 4611686018427387904])), Var(VarId(3)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:331657)\n      at SnarkyConstraintSystemCompat.toJson (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:2252:26)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:331657)\n      at SnarkyConstraintSystemCompat.toJson (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:2252:26)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:967 Converting Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(2)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:331657)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:331657)\n\n  console.log\n    Simple Multiplication Program VK Parity: ❌\n\n      at BackendTestFramework.testVKParity (src/test/framework/backend-test-framework.ts:110:13)\n\n  console.log\n    Issues: VK hash mismatch: Snarky=21935875859669150575698916958402306035595916446111004865872563937535132004501, Sparky=9762594513460233033265114494257809367713715191669121927218041849851847148698, Constraint count mismatch: Snarky=1, Sparky=3\n\n      at BackendTestFramework.testVKParity (src/test/framework/backend-test-framework.ts:112:15)\n\n  console.log\n    🔍 VK Analysis:\n\n      at Object.<anonymous> (src/test/vk-parity-comprehensive.test.ts:99:15)\n\n  console.log\n      Snarky VK: 21935875859669150575698916958402306035595916446111004865872563937535132004501\n\n      at Object.<anonymous> (src/test/vk-parity-comprehensive.test.ts:100:15)\n\n  console.log\n      Sparky VK: 9762594513460233033265114494257809367713715191669121927218041849851847148698\n\n      at Object.<anonymous> (src/test/vk-parity-comprehensive.test.ts:101:15)\n\n  console.log\n      Snarky constraints: 1\n\n      at Object.<anonymous> (src/test/vk-parity-comprehensive.test.ts:102:15)\n\n  console.log\n      Sparky constraints: 3\n\n      at Object.<anonymous> (src/test/vk-parity-comprehensive.test.ts:103:15)\n\n  console.log\n    Switching backend from sparky to snarky\n\n      at initializeBindings (dist/node/bindings.js:24:13)\n\n  console.log\n    Loading Snarky backend...\n\n      at initializeBindings (dist/node/bindings.js:67:15)\n\n  console.log\n    ✓ Snarky backend loaded\n\n      at initializeBindings (dist/node/bindings.js:84:15)\n\n  console.log\n    Testing Addition Program with Snarky...\n\n      at BackendTestFramework.testVKParity (src/test/framework/backend-test-framework.ts:67:15)\n\n  console.log\n    Switching backend from snarky to sparky\n\n      at initializeBindings (dist/node/bindings.js:24:13)\n\n  console.log\n    Loading Sparky backend...\n\n      at initializeBindings (dist/node/bindings.js:40:15)\n\n  console.log\n    OCaml backend bridge initialized: false\n\n      at initializeBindings (dist/node/bindings.js:51:15)\n\n  console.log\n    ✓ Sparky backend loaded\n\n      at initializeBindings (dist/node/bindings.js:64:15)\n\n  console.log\n    Testing Addition Program with Sparky...\n\n      at BackendTestFramework.testVKParity (src/test/framework/backend-test-framework.ts:81:15)\n\n  console.log\n    Addition Program VK Parity: ✅\n\n      at BackendTestFramework.testVKParity (src/test/framework/backend-test-framework.ts:110:13)\n\n  console.log\n    Switching backend from sparky to snarky\n\n      at initializeBindings (dist/node/bindings.js:24:13)\n\n  console.log\n    Loading Snarky backend...\n\n      at initializeBindings (dist/node/bindings.js:67:15)\n\n  console.log\n    ✓ Snarky backend loaded\n\n      at initializeBindings (dist/node/bindings.js:84:15)\n\n  console.log\n    Testing Complex Program with Snarky...\n\n      at BackendTestFramework.testVKParity (src/test/framework/backend-test-framework.ts:67:15)\n\n  console.log\n    Switching backend from snarky to sparky\n\n      at initializeBindings (dist/node/bindings.js:24:13)\n\n  console.log\n    Loading Sparky backend...\n\n      at initializeBindings (dist/node/bindings.js:40:15)\n\n  console.log\n    OCaml backend bridge initialized: false\n\n      at initializeBindings (dist/node/bindings.js:51:15)\n\n  console.log\n    ✓ Sparky backend loaded\n\n      at initializeBindings (dist/node/bindings.js:64:15)\n\n  console.log\n    Testing Complex Program with Sparky...\n\n      at BackendTestFramework.testVKParity (src/test/framework/backend-test-framework.ts:81:15)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:967 Converting Add(Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(3)))), Scale(FieldElement(BigInt([11037532056220336128, 2469829653914515739, 0, 4611686018427387904])), Var(VarId(4)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n      at SnarkyRunCompat.getConstraintSystem (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3158:26)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n      at SnarkyRunCompat.getConstraintSystem (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3158:26)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:967 Converting Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(3)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:967 Converting Add(Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(3)))), Scale(FieldElement(BigInt([11037532056220336128, 2469829653914515739, 0, 4611686018427387904])), Var(VarId(4)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:331657)\n      at SnarkyConstraintSystemCompat.toJson (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:2252:26)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:331657)\n      at SnarkyConstraintSystemCompat.toJson (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:2252:26)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:967 Converting Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(3)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:331657)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:331657)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:967 Converting Add(Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(2)))), Scale(FieldElement(BigInt([11037532056220336128, 2469829653914515739, 0, 4611686018427387904])), Var(VarId(3)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n      at SnarkyRunCompat.getConstraintSystem (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3158:26)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n      at SnarkyRunCompat.getConstraintSystem (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3158:26)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:967 Converting Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(2)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:967 Converting Add(Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(2)))), Scale(FieldElement(BigInt([11037532056220336128, 2469829653914515739, 0, 4611686018427387904])), Var(VarId(3)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n      at SnarkyRunCompat.getConstraintSystem (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3158:26)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n      at SnarkyRunCompat.getConstraintSystem (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3158:26)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:967 Converting Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(2)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:967 Converting Add(Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(3)))), Scale(FieldElement(BigInt([11037532056220336128, 2469829653914515739, 0, 4611686018427387904])), Var(VarId(4)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n      at SnarkyRunCompat.getConstraintSystem (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3158:26)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n      at SnarkyRunCompat.getConstraintSystem (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3158:26)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:967 Converting Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(3)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:967 Converting Add(Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(3)))), Scale(FieldElement(BigInt([11037532056220336128, 2469829653914515739, 0, 4611686018427387904])), Var(VarId(4)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:331657)\n      at SnarkyConstraintSystemCompat.toJson (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:2252:26)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:331657)\n      at SnarkyConstraintSystemCompat.toJson (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:2252:26)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:967 Converting Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(3)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:331657)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:331657)\n\n  console.log\n    Complex Program VK Parity: ❌\n\n      at BackendTestFramework.testVKParity (src/test/framework/backend-test-framework.ts:110:13)\n\n  console.log\n    Issues: VK hash mismatch: Snarky=16782000924264405106079398393682574357647400888176543392817370426360681634716, Sparky=9762594513460233033265114494257809367713715191669121927218041849851847148698, Constraint count mismatch: Snarky=1, Sparky=3\n\n      at BackendTestFramework.testVKParity (src/test/framework/backend-test-framework.ts:112:15)\n\n  console.log\n    Complex program - Snarky: 1, Sparky: 3\n\n      at Object.<anonymous> (src/test/vk-parity-comprehensive.test.ts:127:15)\n\n  console.log\n    Switching backend from sparky to snarky\n\n      at initializeBindings (dist/node/bindings.js:24:13)\n\n  console.log\n    Loading Snarky backend...\n\n      at initializeBindings (dist/node/bindings.js:67:15)\n\n  console.log\n    ✓ Snarky backend loaded\n\n      at initializeBindings (dist/node/bindings.js:84:15)\n\n  console.log\n    Switching backend from snarky to sparky\n\n      at initializeBindings (dist/node/bindings.js:24:13)\n\n  console.log\n    Loading Sparky backend...\n\n      at initializeBindings (dist/node/bindings.js:40:15)\n\n  console.log\n    OCaml backend bridge initialized: false\n\n      at initializeBindings (dist/node/bindings.js:51:15)\n\n  console.log\n    ✓ Sparky backend loaded\n\n      at initializeBindings (dist/node/bindings.js:64:15)\n\n  console.log\n    Empty Circuit Constraint Parity: ✅\n\n      at BackendTestFramework.testConstraintParity (src/test/framework/backend-test-framework.ts:170:13)\n\n  console.log\n    Switching backend from sparky to snarky\n\n      at initializeBindings (dist/node/bindings.js:24:13)\n\n  console.log\n    Loading Snarky backend...\n\n      at initializeBindings (dist/node/bindings.js:67:15)\n\n  console.log\n    ✓ Snarky backend loaded\n\n      at initializeBindings (dist/node/bindings.js:84:15)\n\n  console.log\n    Testing Consistency Test 1 with Snarky...\n\n      at BackendTestFramework.testVKParity (src/test/framework/backend-test-framework.ts:67:15)\n\n  console.log\n    Switching backend from snarky to sparky\n\n      at initializeBindings (dist/node/bindings.js:24:13)\n\n  console.log\n    Loading Sparky backend...\n\n      at initializeBindings (dist/node/bindings.js:40:15)\n\n  console.log\n    OCaml backend bridge initialized: false\n\n      at initializeBindings (dist/node/bindings.js:51:15)\n\n  console.log\n    ✓ Sparky backend loaded\n\n      at initializeBindings (dist/node/bindings.js:64:15)\n\n  console.log\n    Testing Consistency Test 1 with Sparky...\n\n      at BackendTestFramework.testVKParity (src/test/framework/backend-test-framework.ts:81:15)\n\n  console.log\n    Consistency Test 1 VK Parity: ✅\n\n      at BackendTestFramework.testVKParity (src/test/framework/backend-test-framework.ts:110:13)\n\n  console.log\n    Switching backend from sparky to snarky\n\n      at initializeBindings (dist/node/bindings.js:24:13)\n\n  console.log\n    Loading Snarky backend...\n\n      at initializeBindings (dist/node/bindings.js:67:15)\n\n  console.log\n    ✓ Snarky backend loaded\n\n      at initializeBindings (dist/node/bindings.js:84:15)\n\n  console.log\n    Testing Consistency Test 2 with Snarky...\n\n      at BackendTestFramework.testVKParity (src/test/framework/backend-test-framework.ts:67:15)\n\n  console.log\n    Switching backend from snarky to sparky\n\n      at initializeBindings (dist/node/bindings.js:24:13)\n\n  console.log\n    Loading Sparky backend...\n\n      at initializeBindings (dist/node/bindings.js:40:15)\n\n  console.log\n    OCaml backend bridge initialized: false\n\n      at initializeBindings (dist/node/bindings.js:51:15)\n\n  console.log\n    ✓ Sparky backend loaded\n\n      at initializeBindings (dist/node/bindings.js:64:15)\n\n  console.log\n    Testing Consistency Test 2 with Sparky...\n\n      at BackendTestFramework.testVKParity (src/test/framework/backend-test-framework.ts:81:15)\n\n  console.log\n    Consistency Test 2 VK Parity: ✅\n\n      at BackendTestFramework.testVKParity (src/test/framework/backend-test-framework.ts:110:13)\n\n  console.log\n    🔍 VK Consistency Check:\n\n      at Object.<anonymous> (src/test/vk-parity-comprehensive.test.ts:168:15)\n\n  console.log\n      Snarky consistent: ✅\n\n      at Object.<anonymous> (src/test/vk-parity-comprehensive.test.ts:169:15)\n\n  console.log\n      Sparky consistent: ✅\n\n      at Object.<anonymous> (src/test/vk-parity-comprehensive.test.ts:170:15)\n\n  console.log\n    Switching backend from sparky to snarky\n\n      at initializeBindings (dist/node/bindings.js:24:13)\n\n  console.log\n    Loading Snarky backend...\n\n      at initializeBindings (dist/node/bindings.js:67:15)\n\n  console.log\n    ✓ Snarky backend loaded\n\n      at initializeBindings (dist/node/bindings.js:84:15)\n\n  console.log\n    Testing Performance Test (Timing) with Snarky...\n\n      at BackendTestFramework.testVKParity (src/test/framework/backend-test-framework.ts:67:15)\n\n  console.log\n    Switching backend from snarky to sparky\n\n      at initializeBindings (dist/node/bindings.js:24:13)\n\n  console.log\n    Loading Sparky backend...\n\n      at initializeBindings (dist/node/bindings.js:40:15)\n\n  console.log\n    OCaml backend bridge initialized: false\n\n      at initializeBindings (dist/node/bindings.js:51:15)\n\n  console.log\n    ✓ Sparky backend loaded\n\n      at initializeBindings (dist/node/bindings.js:64:15)\n\n  console.log\n    Testing Performance Test (Timing) with Sparky...\n\n      at BackendTestFramework.testVKParity (src/test/framework/backend-test-framework.ts:81:15)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:967 Converting Add(Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(4)))), Scale(FieldElement(BigInt([11037532056220336128, 2469829653914515739, 0, 4611686018427387904])), Var(VarId(5)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n      at SnarkyRunCompat.getConstraintSystem (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3158:26)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n      at SnarkyRunCompat.getConstraintSystem (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3158:26)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:967 Converting Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(4)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:967 Converting Add(Add(Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(2)))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(4)))), Scale(FieldElement(BigInt([11037532056220336128, 2469829653914515739, 0, 4611686018427387904])), Var(VarId(7)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n      at SnarkyRunCompat.getConstraintSystem (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3158:26)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n      at SnarkyRunCompat.getConstraintSystem (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3158:26)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:967 Converting Add(Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(2)))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(4)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:967 Converting Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(2)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:967 Converting Add(Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(6)))), Scale(FieldElement(BigInt([11037532056220336128, 2469829653914515739, 0, 4611686018427387904])), Var(VarId(8)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n      at SnarkyRunCompat.getConstraintSystem (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3158:26)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n      at SnarkyRunCompat.getConstraintSystem (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3158:26)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:967 Converting Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(6)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:967 Converting Add(Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(4)))), Scale(FieldElement(BigInt([11037532056220336128, 2469829653914515739, 0, 4611686018427387904])), Var(VarId(5)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:331657)\n      at SnarkyConstraintSystemCompat.toJson (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:2252:26)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:331657)\n      at SnarkyConstraintSystemCompat.toJson (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:2252:26)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:967 Converting Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(4)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:331657)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:331657)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:967 Converting Add(Add(Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(2)))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(4)))), Scale(FieldElement(BigInt([11037532056220336128, 2469829653914515739, 0, 4611686018427387904])), Var(VarId(7)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:331657)\n      at SnarkyConstraintSystemCompat.toJson (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:2252:26)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:331657)\n      at SnarkyConstraintSystemCompat.toJson (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:2252:26)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:967 Converting Add(Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(2)))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(4)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:331657)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:331657)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:967 Converting Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(2)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:967 Converting Add(Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(6)))), Scale(FieldElement(BigInt([11037532056220336128, 2469829653914515739, 0, 4611686018427387904])), Var(VarId(8)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:331657)\n      at SnarkyConstraintSystemCompat.toJson (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:2252:26)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:331657)\n      at SnarkyConstraintSystemCompat.toJson (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:2252:26)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:967 Converting Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(6)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:331657)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:331657)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:967 Converting Add(Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(3)))), Scale(FieldElement(BigInt([11037532056220336128, 2469829653914515739, 0, 4611686018427387904])), Var(VarId(4)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n      at SnarkyRunCompat.getConstraintSystem (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3158:26)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n      at SnarkyRunCompat.getConstraintSystem (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3158:26)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:967 Converting Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(3)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:967 Converting Add(Add(Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(2)))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(3)))), Scale(FieldElement(BigInt([11037532056220336128, 2469829653914515739, 0, 4611686018427387904])), Var(VarId(6)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n      at SnarkyRunCompat.getConstraintSystem (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3158:26)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n      at SnarkyRunCompat.getConstraintSystem (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3158:26)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:967 Converting Add(Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(2)))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(3)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:967 Converting Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(2)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:967 Converting Add(Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(5)))), Scale(FieldElement(BigInt([11037532056220336128, 2469829653914515739, 0, 4611686018427387904])), Var(VarId(7)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n      at SnarkyRunCompat.getConstraintSystem (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3158:26)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n      at SnarkyRunCompat.getConstraintSystem (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3158:26)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:967 Converting Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(5)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:967 Converting Add(Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(3)))), Scale(FieldElement(BigInt([11037532056220336128, 2469829653914515739, 0, 4611686018427387904])), Var(VarId(4)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n      at SnarkyRunCompat.getConstraintSystem (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3158:26)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n      at SnarkyRunCompat.getConstraintSystem (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3158:26)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:967 Converting Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(3)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:967 Converting Add(Add(Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(2)))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(3)))), Scale(FieldElement(BigInt([11037532056220336128, 2469829653914515739, 0, 4611686018427387904])), Var(VarId(6)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n      at SnarkyRunCompat.getConstraintSystem (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3158:26)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n      at SnarkyRunCompat.getConstraintSystem (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3158:26)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:967 Converting Add(Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(2)))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(3)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:967 Converting Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(2)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:967 Converting Add(Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(5)))), Scale(FieldElement(BigInt([11037532056220336128, 2469829653914515739, 0, 4611686018427387904])), Var(VarId(7)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n      at SnarkyRunCompat.getConstraintSystem (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3158:26)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n      at SnarkyRunCompat.getConstraintSystem (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3158:26)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:967 Converting Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(5)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:967 Converting Add(Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(4)))), Scale(FieldElement(BigInt([11037532056220336128, 2469829653914515739, 0, 4611686018427387904])), Var(VarId(5)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n      at SnarkyRunCompat.getConstraintSystem (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3158:26)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n      at SnarkyRunCompat.getConstraintSystem (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3158:26)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:967 Converting Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(4)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:967 Converting Add(Add(Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(2)))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(4)))), Scale(FieldElement(BigInt([11037532056220336128, 2469829653914515739, 0, 4611686018427387904])), Var(VarId(7)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n      at SnarkyRunCompat.getConstraintSystem (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3158:26)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n      at SnarkyRunCompat.getConstraintSystem (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3158:26)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:967 Converting Add(Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(2)))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(4)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:967 Converting Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(2)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:967 Converting Add(Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(6)))), Scale(FieldElement(BigInt([11037532056220336128, 2469829653914515739, 0, 4611686018427387904])), Var(VarId(8)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n      at SnarkyRunCompat.getConstraintSystem (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3158:26)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n      at SnarkyRunCompat.getConstraintSystem (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3158:26)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:967 Converting Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(6)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:967 Converting Add(Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(4)))), Scale(FieldElement(BigInt([11037532056220336128, 2469829653914515739, 0, 4611686018427387904])), Var(VarId(5)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:331657)\n      at SnarkyConstraintSystemCompat.toJson (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:2252:26)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:331657)\n      at SnarkyConstraintSystemCompat.toJson (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:2252:26)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:967 Converting Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(4)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:331657)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:331657)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:967 Converting Add(Add(Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(2)))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(4)))), Scale(FieldElement(BigInt([11037532056220336128, 2469829653914515739, 0, 4611686018427387904])), Var(VarId(7)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:331657)\n      at SnarkyConstraintSystemCompat.toJson (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:2252:26)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:331657)\n      at SnarkyConstraintSystemCompat.toJson (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:2252:26)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:967 Converting Add(Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(2)))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(4)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:331657)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:331657)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:967 Converting Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(2)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:967 Converting Add(Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(6)))), Scale(FieldElement(BigInt([11037532056220336128, 2469829653914515739, 0, 4611686018427387904])), Var(VarId(8)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:331657)\n      at SnarkyConstraintSystemCompat.toJson (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:2252:26)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:331657)\n      at SnarkyConstraintSystemCompat.toJson (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:2252:26)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:967 Converting Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(6)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:331657)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:331657)\n\n  console.log\n    Performance Test (Timing) VK Parity: ❌\n\n      at BackendTestFramework.testVKParity (src/test/framework/backend-test-framework.ts:110:13)\n\n  console.log\n    Issues: VK hash mismatch: Snarky=24335317297097545806117446191126449218084930070061574366024316301793469105264, Sparky=2292093388848071137105799346973748104210857517302826189706732152505472036423, Constraint count mismatch: Snarky=2, Sparky=8\n\n      at BackendTestFramework.testVKParity (src/test/framework/backend-test-framework.ts:112:15)\n\n  console.log\n    ⏱️  Performance Analysis:\n\n      at Object.<anonymous> (src/test/vk-parity-comprehensive.test.ts:196:15)\n\n  console.log\n      Snarky compilation time: 6858.75ms\n\n      at Object.<anonymous> (src/test/vk-parity-comprehensive.test.ts:197:15)\n\n  console.log\n      VK parity status: ❌\n\n      at Object.<anonymous> (src/test/vk-parity-comprehensive.test.ts:198:15)\n\n  console.log\n    Switching backend from sparky to snarky\n\n      at initializeBindings (dist/node/bindings.js:24:13)\n\n  console.log\n    Loading Snarky backend...\n\n      at initializeBindings (dist/node/bindings.js:67:15)\n\n  console.log\n    ✓ Snarky backend loaded\n\n      at initializeBindings (dist/node/bindings.js:84:15)\n\n  console.log\n    Switching backend from snarky to sparky\n\n      at initializeBindings (dist/node/bindings.js:24:13)\n\n  console.log\n    Loading Sparky backend...\n\n      at initializeBindings (dist/node/bindings.js:40:15)\n\n  console.log\n    OCaml backend bridge initialized: false\n\n      at initializeBindings (dist/node/bindings.js:51:15)\n\n  console.log\n    ✓ Sparky backend loaded\n\n      at initializeBindings (dist/node/bindings.js:64:15)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:967 Converting Add(Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(1)))), Scale(FieldElement(BigInt([11037532056220336128, 2469829653914515739, 0, 4611686018427387904])), Var(VarId(2)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n      at SnarkyRunCompat.getConstraintSystem (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3158:26)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n      at SnarkyRunCompat.getConstraintSystem (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3158:26)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:967 Converting Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(1)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:967 Converting Add(Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(1)))), Scale(FieldElement(BigInt([11037532056220336128, 2469829653914515739, 0, 4611686018427387904])), Var(VarId(2)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:331657)\n      at SnarkyConstraintSystemCompat.toJson (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:2252:26)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:331657)\n      at SnarkyConstraintSystemCompat.toJson (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:2252:26)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:967 Converting Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(1)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:331657)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:331657)\n\n  console.log\n    fieldMultiplication Constraint Parity: ❌\n\n      at BackendTestFramework.testConstraintParity (src/test/framework/backend-test-framework.ts:170:13)\n\n  console.log\n    Issues: Constraint count mismatch: Snarky=1, Sparky=4\n\n      at BackendTestFramework.testConstraintParity (src/test/framework/backend-test-framework.ts:172:15)\n\n  console.log\n    Switching backend from sparky to snarky\n\n      at initializeBindings (dist/node/bindings.js:24:13)\n\n  console.log\n    Loading Snarky backend...\n\n      at initializeBindings (dist/node/bindings.js:67:15)\n\n  console.log\n    ✓ Snarky backend loaded\n\n      at initializeBindings (dist/node/bindings.js:84:15)\n\n  console.log\n    Switching backend from snarky to sparky\n\n      at initializeBindings (dist/node/bindings.js:24:13)\n\n  console.log\n    Loading Sparky backend...\n\n      at initializeBindings (dist/node/bindings.js:40:15)\n\n  console.log\n    OCaml backend bridge initialized: false\n\n      at initializeBindings (dist/node/bindings.js:51:15)\n\n  console.log\n    ✓ Sparky backend loaded\n\n      at initializeBindings (dist/node/bindings.js:64:15)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:967 Converting Add(Add(Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(0)))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(1)))), Scale(FieldElement(BigInt([11037532056220336128, 2469829653914515739, 0, 4611686018427387904])), Var(VarId(2)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n      at SnarkyRunCompat.getConstraintSystem (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3158:26)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n      at SnarkyRunCompat.getConstraintSystem (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3158:26)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:967 Converting Add(Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(0)))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(1)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:967 Converting Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(0)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:967 Converting Add(Add(Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(0)))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(1)))), Scale(FieldElement(BigInt([11037532056220336128, 2469829653914515739, 0, 4611686018427387904])), Var(VarId(2)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:331657)\n      at SnarkyConstraintSystemCompat.toJson (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:2252:26)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:331657)\n      at SnarkyConstraintSystemCompat.toJson (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:2252:26)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:967 Converting Add(Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(0)))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(1)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:331657)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:331657)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:967 Converting Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(0)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n\n  console.log\n    fieldAddition Constraint Parity: ❌\n\n      at BackendTestFramework.testConstraintParity (src/test/framework/backend-test-framework.ts:170:13)\n\n  console.log\n    Issues: Constraint count mismatch: Snarky=1, Sparky=3\n\n      at BackendTestFramework.testConstraintParity (src/test/framework/backend-test-framework.ts:172:15)\n\n  console.log\n    Switching backend from sparky to snarky\n\n      at initializeBindings (dist/node/bindings.js:24:13)\n\n  console.log\n    Loading Snarky backend...\n\n      at initializeBindings (dist/node/bindings.js:67:15)\n\n  console.log\n    ✓ Snarky backend loaded\n\n      at initializeBindings (dist/node/bindings.js:84:15)\n\n  console.log\n    Switching backend from snarky to sparky\n\n      at initializeBindings (dist/node/bindings.js:24:13)\n\n  console.log\n    Loading Sparky backend...\n\n      at initializeBindings (dist/node/bindings.js:40:15)\n\n  console.log\n    OCaml backend bridge initialized: false\n\n      at initializeBindings (dist/node/bindings.js:51:15)\n\n  console.log\n    ✓ Sparky backend loaded\n\n      at initializeBindings (dist/node/bindings.js:64:15)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:967 Converting Add(Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(2)))), Scale(FieldElement(BigInt([11037532056220336128, 2469829653914515739, 0, 4611686018427387904])), Var(VarId(3)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n      at SnarkyRunCompat.getConstraintSystem (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3158:26)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n      at SnarkyRunCompat.getConstraintSystem (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3158:26)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:967 Converting Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(2)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:967 Converting Add(Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(2)))), Scale(FieldElement(BigInt([11037532056220336128, 2469829653914515739, 0, 4611686018427387904])), Var(VarId(3)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:331657)\n      at SnarkyConstraintSystemCompat.toJson (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:2252:26)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:331657)\n      at SnarkyConstraintSystemCompat.toJson (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:2252:26)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:967 Converting Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(2)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:331657)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:331657)\n\n  console.log\n    booleanLogic Constraint Parity: ❌\n\n      at BackendTestFramework.testConstraintParity (src/test/framework/backend-test-framework.ts:170:13)\n\n  console.log\n    Issues: Constraint count mismatch: Snarky=1, Sparky=4\n\n      at BackendTestFramework.testConstraintParity (src/test/framework/backend-test-framework.ts:172:15)\n\n  console.log\n    Switching backend from sparky to snarky\n\n      at initializeBindings (dist/node/bindings.js:24:13)\n\n  console.log\n    Loading Snarky backend...\n\n      at initializeBindings (dist/node/bindings.js:67:15)\n\n  console.log\n    ✓ Snarky backend loaded\n\n      at initializeBindings (dist/node/bindings.js:84:15)\n\n  console.log\n    Switching backend from snarky to sparky\n\n      at initializeBindings (dist/node/bindings.js:24:13)\n\n  console.log\n    Loading Sparky backend...\n\n      at initializeBindings (dist/node/bindings.js:40:15)\n\n  console.log\n    OCaml backend bridge initialized: false\n\n      at initializeBindings (dist/node/bindings.js:51:15)\n\n  console.log\n    ✓ Sparky backend loaded\n\n      at initializeBindings (dist/node/bindings.js:64:15)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:967 Converting Add(Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(3)))), Scale(FieldElement(BigInt([11037532056220336128, 2469829653914515739, 0, 4611686018427387904])), Var(VarId(4)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n      at SnarkyRunCompat.getConstraintSystem (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3158:26)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n      at SnarkyRunCompat.getConstraintSystem (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3158:26)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:967 Converting Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(3)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:967 Converting Add(Add(Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(2)))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(3)))), Scale(FieldElement(BigInt([11037532056220336128, 2469829653914515739, 0, 4611686018427387904])), Var(VarId(5)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n      at SnarkyRunCompat.getConstraintSystem (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3158:26)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n      at SnarkyRunCompat.getConstraintSystem (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3158:26)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:967 Converting Add(Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(2)))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(3)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:967 Converting Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(2)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:967 Converting Add(Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(3)))), Scale(FieldElement(BigInt([11037532056220336128, 2469829653914515739, 0, 4611686018427387904])), Var(VarId(4)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:331657)\n      at SnarkyConstraintSystemCompat.toJson (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:2252:26)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:331657)\n      at SnarkyConstraintSystemCompat.toJson (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:2252:26)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:967 Converting Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(3)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:331657)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:331657)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:967 Converting Add(Add(Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(2)))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(3)))), Scale(FieldElement(BigInt([11037532056220336128, 2469829653914515739, 0, 4611686018427387904])), Var(VarId(5)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:331657)\n      at SnarkyConstraintSystemCompat.toJson (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:2252:26)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:331657)\n      at SnarkyConstraintSystemCompat.toJson (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:2252:26)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:967 Converting Add(Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(2)))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(3)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:331657)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:331657)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:967 Converting Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(2)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n\n  console.log\n    complexExpression Constraint Parity: ❌\n\n      at BackendTestFramework.testConstraintParity (src/test/framework/backend-test-framework.ts:170:13)\n\n  console.log\n    Issues: Constraint count mismatch: Snarky=2, Sparky=6\n\n      at BackendTestFramework.testConstraintParity (src/test/framework/backend-test-framework.ts:172:15)\n\n  console.log\n    Switching backend from sparky to snarky\n\n      at initializeBindings (dist/node/bindings.js:24:13)\n\n  console.log\n    Loading Snarky backend...\n\n      at initializeBindings (dist/node/bindings.js:67:15)\n\n  console.log\n    ✓ Snarky backend loaded\n\n      at initializeBindings (dist/node/bindings.js:84:15)\n\n  console.log\n    Testing simpleMultiplication with Snarky...\n\n      at BackendTestFramework.testVKParity (src/test/framework/backend-test-framework.ts:67:15)\n\n  console.log\n    Switching backend from snarky to sparky\n\n      at initializeBindings (dist/node/bindings.js:24:13)\n\n  console.log\n    Loading Sparky backend...\n\n      at initializeBindings (dist/node/bindings.js:40:15)\n\n  console.log\n    OCaml backend bridge initialized: false\n\n      at initializeBindings (dist/node/bindings.js:51:15)\n\n  console.log\n    ✓ Sparky backend loaded\n\n      at initializeBindings (dist/node/bindings.js:64:15)\n\n  console.log\n    Testing simpleMultiplication with Sparky...\n\n      at BackendTestFramework.testVKParity (src/test/framework/backend-test-framework.ts:81:15)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:967 Converting Add(Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(2)))), Scale(FieldElement(BigInt([11037532056220336128, 2469829653914515739, 0, 4611686018427387904])), Var(VarId(3)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n      at SnarkyRunCompat.getConstraintSystem (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3158:26)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n      at SnarkyRunCompat.getConstraintSystem (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3158:26)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:967 Converting Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(2)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:967 Converting Add(Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(2)))), Scale(FieldElement(BigInt([11037532056220336128, 2469829653914515739, 0, 4611686018427387904])), Var(VarId(3)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:331657)\n      at SnarkyConstraintSystemCompat.toJson (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:2252:26)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:331657)\n      at SnarkyConstraintSystemCompat.toJson (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:2252:26)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:967 Converting Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(2)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:331657)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:331657)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:967 Converting Add(Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(1)))), Scale(FieldElement(BigInt([11037532056220336128, 2469829653914515739, 0, 4611686018427387904])), Var(VarId(2)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n      at SnarkyRunCompat.getConstraintSystem (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3158:26)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n      at SnarkyRunCompat.getConstraintSystem (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3158:26)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:967 Converting Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(1)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:967 Converting Add(Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(1)))), Scale(FieldElement(BigInt([11037532056220336128, 2469829653914515739, 0, 4611686018427387904])), Var(VarId(2)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n      at SnarkyRunCompat.getConstraintSystem (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3158:26)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n      at SnarkyRunCompat.getConstraintSystem (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3158:26)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:967 Converting Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(1)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:967 Converting Add(Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(2)))), Scale(FieldElement(BigInt([11037532056220336128, 2469829653914515739, 0, 4611686018427387904])), Var(VarId(3)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n      at SnarkyRunCompat.getConstraintSystem (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3158:26)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n      at SnarkyRunCompat.getConstraintSystem (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3158:26)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:967 Converting Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(2)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:967 Converting Add(Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(2)))), Scale(FieldElement(BigInt([11037532056220336128, 2469829653914515739, 0, 4611686018427387904])), Var(VarId(3)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:331657)\n      at SnarkyConstraintSystemCompat.toJson (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:2252:26)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:331657)\n      at SnarkyConstraintSystemCompat.toJson (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:2252:26)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:967 Converting Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(2)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:331657)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:331657)\n\n  console.log\n    simpleMultiplication VK Parity: ❌\n\n      at BackendTestFramework.testVKParity (src/test/framework/backend-test-framework.ts:110:13)\n\n  console.log\n    Issues: VK hash mismatch: Snarky=21935875859669150575698916958402306035595916446111004865872563937535132004501, Sparky=9762594513460233033265114494257809367713715191669121927218041849851847148698, Constraint count mismatch: Snarky=1, Sparky=3\n\n      at BackendTestFramework.testVKParity (src/test/framework/backend-test-framework.ts:112:15)\n\n  console.log\n    Switching backend from sparky to snarky\n\n      at initializeBindings (dist/node/bindings.js:24:13)\n\n  console.log\n    Loading Snarky backend...\n\n      at initializeBindings (dist/node/bindings.js:67:15)\n\n  console.log\n    ✓ Snarky backend loaded\n\n      at initializeBindings (dist/node/bindings.js:84:15)\n\n  console.log\n    Testing additionProgram with Snarky...\n\n      at BackendTestFramework.testVKParity (src/test/framework/backend-test-framework.ts:67:15)\n\n  console.log\n    Switching backend from snarky to sparky\n\n      at initializeBindings (dist/node/bindings.js:24:13)\n\n  console.log\n    Loading Sparky backend...\n\n      at initializeBindings (dist/node/bindings.js:40:15)\n\n  console.log\n    OCaml backend bridge initialized: false\n\n      at initializeBindings (dist/node/bindings.js:51:15)\n\n  console.log\n    ✓ Sparky backend loaded\n\n      at initializeBindings (dist/node/bindings.js:64:15)\n\n  console.log\n    Testing additionProgram with Sparky...\n\n      at BackendTestFramework.testVKParity (src/test/framework/backend-test-framework.ts:81:15)\n\n  console.log\n    additionProgram VK Parity: ✅\n\n      at BackendTestFramework.testVKParity (src/test/framework/backend-test-framework.ts:110:13)\n\n  console.log\n    Switching backend from sparky to snarky\n\n      at initializeBindings (dist/node/bindings.js:24:13)\n\n  console.log\n    Loading Snarky backend...\n\n      at initializeBindings (dist/node/bindings.js:67:15)\n\n  console.log\n    ✓ Snarky backend loaded\n\n      at initializeBindings (dist/node/bindings.js:84:15)\n\n  console.log\n    Testing complexProgram with Snarky...\n\n      at BackendTestFramework.testVKParity (src/test/framework/backend-test-framework.ts:67:15)\n\n  console.log\n    Switching backend from snarky to sparky\n\n      at initializeBindings (dist/node/bindings.js:24:13)\n\n  console.log\n    Loading Sparky backend...\n\n      at initializeBindings (dist/node/bindings.js:40:15)\n\n  console.log\n    OCaml backend bridge initialized: false\n\n      at initializeBindings (dist/node/bindings.js:51:15)\n\n  console.log\n    ✓ Sparky backend loaded\n\n      at initializeBindings (dist/node/bindings.js:64:15)\n\n  console.log\n    Testing complexProgram with Sparky...\n\n      at BackendTestFramework.testVKParity (src/test/framework/backend-test-framework.ts:81:15)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:967 Converting Add(Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(3)))), Scale(FieldElement(BigInt([11037532056220336128, 2469829653914515739, 0, 4611686018427387904])), Var(VarId(4)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n      at SnarkyRunCompat.getConstraintSystem (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3158:26)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n      at SnarkyRunCompat.getConstraintSystem (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3158:26)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:967 Converting Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(3)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:967 Converting Add(Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(3)))), Scale(FieldElement(BigInt([11037532056220336128, 2469829653914515739, 0, 4611686018427387904])), Var(VarId(4)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:331657)\n      at SnarkyConstraintSystemCompat.toJson (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:2252:26)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:331657)\n      at SnarkyConstraintSystemCompat.toJson (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:2252:26)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:967 Converting Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(3)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:331657)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:331657)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:967 Converting Add(Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(2)))), Scale(FieldElement(BigInt([11037532056220336128, 2469829653914515739, 0, 4611686018427387904])), Var(VarId(3)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n      at SnarkyRunCompat.getConstraintSystem (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3158:26)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n      at SnarkyRunCompat.getConstraintSystem (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3158:26)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:967 Converting Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(2)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:967 Converting Add(Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(2)))), Scale(FieldElement(BigInt([11037532056220336128, 2469829653914515739, 0, 4611686018427387904])), Var(VarId(3)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n      at SnarkyRunCompat.getConstraintSystem (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3158:26)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n      at SnarkyRunCompat.getConstraintSystem (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3158:26)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:967 Converting Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(2)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:967 Converting Add(Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(3)))), Scale(FieldElement(BigInt([11037532056220336128, 2469829653914515739, 0, 4611686018427387904])), Var(VarId(4)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n      at SnarkyRunCompat.getConstraintSystem (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3158:26)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n      at SnarkyRunCompat.getConstraintSystem (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3158:26)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:967 Converting Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(3)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:967 Converting Add(Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(3)))), Scale(FieldElement(BigInt([11037532056220336128, 2469829653914515739, 0, 4611686018427387904])), Var(VarId(4)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:331657)\n      at SnarkyConstraintSystemCompat.toJson (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:2252:26)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:331657)\n      at SnarkyConstraintSystemCompat.toJson (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:2252:26)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:967 Converting Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(3)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:331657)\n\n  console.error\n    ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:331657)\n\n  console.log\n    complexProgram VK Parity: ❌\n\n      at BackendTestFramework.testVKParity (src/test/framework/backend-test-framework.ts:110:13)\n\n  console.log\n    Issues: VK hash mismatch: Snarky=16782000924264405106079398393682574357647400888176543392817370426360681634716, Sparky=9762594513460233033265114494257809367713715191669121927218041849851847148698, Constraint count mismatch: Snarky=1, Sparky=3\n\n      at BackendTestFramework.testVKParity (src/test/framework/backend-test-framework.ts:112:15)\n\n  console.log\n    Switching backend from sparky to snarky\n\n      at initializeBindings (dist/node/bindings.js:24:13)\n\n  console.log\n    Loading Snarky backend...\n\n      at initializeBindings (dist/node/bindings.js:67:15)\n\n  console.log\n    ✓ Snarky backend loaded\n\n      at initializeBindings (dist/node/bindings.js:84:15)\n\n  console.log\n    \n    📊 VK PARITY COMPREHENSIVE REPORT\n\n      at Object.<anonymous> (src/test/vk-parity-comprehensive.test.ts:254:15)\n\n  console.log\n    ==================================================\n\n      at Object.<anonymous> (src/test/vk-parity-comprehensive.test.ts:255:15)\n\n  console.log\n    Total tests: 7\n\n      at Object.<anonymous> (src/test/vk-parity-comprehensive.test.ts:256:15)\n\n  console.log\n    Passing: 1 ✅\n\n      at Object.<anonymous> (src/test/vk-parity-comprehensive.test.ts:257:15)\n\n  console.log\n    Failing: 6 ❌\n\n      at Object.<anonymous> (src/test/vk-parity-comprehensive.test.ts:258:15)\n\n  console.log\n    Success rate: 14.3%\n\n      at Object.<anonymous> (src/test/vk-parity-comprehensive.test.ts:259:15)\n\n  console.log\n    \n    🚨 INFRASTRUCTURE ISSUES:\n\n      at Object.<anonymous> (src/test/vk-parity-comprehensive.test.ts:262:17)\n\n  console.log\n       - globalThis.__snarky not initialized with Snarky backend\n\n      at src/test/vk-parity-comprehensive.test.ts:263:71\n          at Array.forEach (<anonymous>)\n\n  console.log\n    \n    📋 DETAILED RESULTS:\n\n      at Object.<anonymous> (src/test/vk-parity-comprehensive.test.ts:266:15)\n\n  console.log\n       fieldMultiplication: ❌ (Snarky: 1, Sparky: 4)\n\n      at src/test/vk-parity-comprehensive.test.ts:268:17\n          at Array.forEach (<anonymous>)\n\n  console.log\n       fieldAddition: ❌ (Snarky: 1, Sparky: 3)\n\n      at src/test/vk-parity-comprehensive.test.ts:268:17\n          at Array.forEach (<anonymous>)\n\n  console.log\n       booleanLogic: ❌ (Snarky: 1, Sparky: 4)\n\n      at src/test/vk-parity-comprehensive.test.ts:268:17\n          at Array.forEach (<anonymous>)\n\n  console.log\n       complexExpression: ❌ (Snarky: 2, Sparky: 6)\n\n      at src/test/vk-parity-comprehensive.test.ts:268:17\n          at Array.forEach (<anonymous>)\n\n  console.log\n       simpleMultiplication: ❌ (VK match: false)\n\n      at src/test/vk-parity-comprehensive.test.ts:272:17\n          at Array.forEach (<anonymous>)\n\n  console.log\n       additionProgram: ✅ (VK match: true)\n\n      at src/test/vk-parity-comprehensive.test.ts:272:17\n          at Array.forEach (<anonymous>)\n\n  console.log\n       complexProgram: ❌ (VK match: false)\n\n      at src/test/vk-parity-comprehensive.test.ts:272:17\n          at Array.forEach (<anonymous>)\n\nCommand failed: npm run test:vk-parity\n(node:1086302) ExperimentalWarning: VM Modules is an experimental feature and might change at any time\n(Use `node --trace-warnings ...` to show where the warning was created)\nts-jest[versions] (WARN) Version 5.4.5 of typescript installed has not been tested with ts-jest. If you're experiencing issues, consider using a supported version (>=4.3.0 <5.0.0-0). Please do not report issues in ts-jest if you are using unsupported versions.\nFAIL src/test/vk-parity-comprehensive.test.ts (52.805 s)\n  VK Parity Between Backends\n    Infrastructure Validation\n      ✕ backend routing infrastructure (2 ms)\n    Basic Circuit VK Parity\n      ✕ field multiplication constraint parity (40 ms)\n      ✓ field addition constraint parity (22 ms)\n      ✓ boolean logic constraint parity (14 ms)\n      ✓ complex expression constraint parity (28 ms)\n    ZkProgram VK Parity\n      ✓ simple multiplication program VK parity (15420 ms)\n      ✕ addition program VK parity (1870 ms)\n      ✓ complex program VK parity (6830 ms)\n    Edge Cases\n      ✕ empty circuit VK parity (5 ms)\n      ✓ identical circuit different compilation VK consistency (3745 ms)\n    Performance Impact Analysis\n      ✓ VK generation performance comparison (6859 ms)\n    Validation Metrics\n      ✕ generate VK parity report (15678 ms)\n\n  ● VK Parity Between Backends › Infrastructure Validation › backend routing infrastructure\n\n    expect(received).toContain(expected) // indexOf\n\n    Expected value: StringContaining \"globalThis.__snarky not updated\"\n    Received array: [\"globalThis.__snarky not initialized with Snarky backend\"]\n\n      28 |       // TODO: When routing is fixed, change this expectation\n      29 |       expect(result.passed).toBe(false);\n    > 30 |       expect(result.issues).toContain(expect.stringContaining('globalThis.__snarky not updated'));\n         |                             ^\n      31 |       \n      32 |       console.log('🚨 KNOWN ISSUE: Backend routing infrastructure is broken');\n      33 |       console.log('   All constraints route through OCaml regardless of backend selection');\n\n      at Object.<anonymous> (src/test/vk-parity-comprehensive.test.ts:30:29)\n\n  ● VK Parity Between Backends › Basic Circuit VK Parity › field multiplication constraint parity\n\n    expect(received).toContain(expected) // indexOf\n\n    Expected value: StringContaining \"Constraint count mismatch\"\n    Received array: [\"Constraint count mismatch: Snarky=1, Sparky=4\"]\n\n    Looks like you wanted to test for object/array equality with the stricter `toContain` matcher. You probably need to use `toContainEqual` instead.\n\n      48 |       // When fixed: Should generate same constraint count\n      49 |       expect(result.passed).toBe(false); // TODO: Change to true when routing fixed\n    > 50 |       expect(result.issues).toContain(expect.stringContaining('Constraint count mismatch'));\n         |                             ^\n      51 |       \n      52 |       console.log(`Field multiplication: Snarky=${result.snarky.constraintCount}, Sparky=${result.sparky.constraintCount}`);\n      53 |     });\n\n      at Object.<anonymous> (src/test/vk-parity-comprehensive.test.ts:50:29)\n\n  ● VK Parity Between Backends › ZkProgram VK Parity › addition program VK parity\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: false\n    Received: true\n\n      114 |       );\n      115 |       \n    > 116 |       expect(result.passed).toBe(false);\n          |                             ^\n      117 |       console.log(`Addition program - Snarky: ${result.snarky.constraintCount}, Sparky: ${result.sparky.constraintCount}`);\n      118 |     });\n      119 |\n\n      at Object.<anonymous> (src/test/vk-parity-comprehensive.test.ts:116:29)\n\n  ● VK Parity Between Backends › Edge Cases › empty circuit VK parity\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: false\n    Received: true\n\n      138 |       \n      139 |       // Even empty circuits should have same constraint count\n    > 140 |       expect(result.passed).toBe(false); // TODO: Should be true when fixed\n          |                             ^\n      141 |       console.log(`Empty circuit - Snarky: ${result.snarky.constraintCount}, Sparky: ${result.sparky.constraintCount}`);\n      142 |     });\n      143 |\n\n      at Object.<anonymous> (src/test/vk-parity-comprehensive.test.ts:140:29)\n\n  ● VK Parity Between Backends › Validation Metrics › generate VK parity report\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: 7\n    Received: 6\n\n      274 |\n      275 |       // For now, expect all tests to fail due to routing bug\n    > 276 |       expect(results.summary.failing).toBe(results.summary.totalTests);\n          |                                       ^\n      277 |       expect(results.summary.infrastructureIssues.length).toBeGreaterThan(0);\n      278 |       \n      279 |       // TODO: When routing is fixed, expect most/all tests to pass:\n\n      at Object.<anonymous> (src/test/vk-parity-comprehensive.test.ts:276:39)\n\nTest Suites: 1 failed, 1 total\nTests:       5 failed, 7 passed, 12 total\nSnapshots:   0 total\nTime:        52.846 s, estimated 55 s\nRan all test suites matching /src\\/test\\/vk-parity-comprehensive.test.ts/i.\n",
    "passed": false,
    "duration": 53808,
    "passingTests": 7,
    "failingTests": 5,
    "totalTests": 12,
    "successRate": 58.333333333333336
  },
  "infrastructureStatus": {
    "name": "Backend Infrastructure",
    "command": "npm run test:backend-infrastructure",
    "description": "Backend switching and constraint routing validation",
    "output": "(node:1087104) ExperimentalWarning: VM Modules is an experimental feature and might change at any time\n(Use `node --trace-warnings ...` to show where the warning was created)\nts-jest[versions] (WARN) Version 5.4.5 of typescript installed has not been tested with ts-jest. If you're experiencing issues, consider using a supported version (>=4.3.0 <5.0.0-0). Please do not report issues in ts-jest if you are using unsupported versions.\nFAIL src/test/backend-infrastructure.test.ts\n  ● Test suite failed to run\n\n    \u001b[96msrc/test/backend-infrastructure.test.ts\u001b[0m:\u001b[93m61\u001b[0m:\u001b[93m25\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7017: \u001b[0mElement implicitly has an 'any' type because type 'typeof globalThis' has no index signature.\n\n    \u001b[7m61\u001b[0m       expect(globalThis.__snarky).toBeDefined();\n    \u001b[7m  \u001b[0m \u001b[91m                        ~~~~~~~~\u001b[0m\n    \u001b[96msrc/test/backend-infrastructure.test.ts\u001b[0m:\u001b[93m62\u001b[0m:\u001b[93m25\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7017: \u001b[0mElement implicitly has an 'any' type because type 'typeof globalThis' has no index signature.\n\n    \u001b[7m62\u001b[0m       expect(globalThis.__snarky.gates).toBeDefined();\n    \u001b[7m  \u001b[0m \u001b[91m                        ~~~~~~~~\u001b[0m\n    \u001b[96msrc/test/backend-infrastructure.test.ts\u001b[0m:\u001b[93m63\u001b[0m:\u001b[93m32\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7017: \u001b[0mElement implicitly has an 'any' type because type 'typeof globalThis' has no index signature.\n\n    \u001b[7m63\u001b[0m       expect(typeof globalThis.__snarky.gates.generic).toBe('function');\n    \u001b[7m  \u001b[0m \u001b[91m                               ~~~~~~~~\u001b[0m\n    \u001b[96msrc/test/backend-infrastructure.test.ts\u001b[0m:\u001b[93m71\u001b[0m:\u001b[93m38\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7017: \u001b[0mElement implicitly has an 'any' type because type 'typeof globalThis' has no index signature.\n\n    \u001b[7m71\u001b[0m       const snarkyGates = globalThis.__snarky?.gates;\n    \u001b[7m  \u001b[0m \u001b[91m                                     ~~~~~~~~\u001b[0m\n    \u001b[96msrc/test/backend-infrastructure.test.ts\u001b[0m:\u001b[93m76\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7017: \u001b[0mElement implicitly has an 'any' type because type 'typeof globalThis' has no index signature.\n\n    \u001b[7m76\u001b[0m       const currentGates = globalThis.__snarky?.gates;\n    \u001b[7m  \u001b[0m \u001b[91m                                      ~~~~~~~~\u001b[0m\n    \u001b[96msrc/test/backend-infrastructure.test.ts\u001b[0m:\u001b[93m124\u001b[0m:\u001b[93m68\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS18046: \u001b[0m'error' is of type 'unknown'.\n\n    \u001b[7m124\u001b[0m         console.error('Error generating constraints with Snarky:', error.message);\n    \u001b[7m   \u001b[0m \u001b[91m                                                                   ~~~~~\u001b[0m\n    \u001b[96msrc/test/backend-infrastructure.test.ts\u001b[0m:\u001b[93m137\u001b[0m:\u001b[93m68\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS18046: \u001b[0m'error' is of type 'unknown'.\n\n    \u001b[7m137\u001b[0m         console.error('Error generating constraints with Sparky:', error.message);\n    \u001b[7m   \u001b[0m \u001b[91m                                                                   ~~~~~\u001b[0m\n    \u001b[96msrc/test/backend-infrastructure.test.ts\u001b[0m:\u001b[93m245\u001b[0m:\u001b[93m52\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS18046: \u001b[0m'error' is of type 'unknown'.\n\n    \u001b[7m245\u001b[0m         console.error('Backend switching failed:', error.message);\n    \u001b[7m   \u001b[0m \u001b[91m                                                   ~~~~~\u001b[0m\n    \u001b[96msrc/test/backend-infrastructure.test.ts\u001b[0m:\u001b[93m250\u001b[0m:\u001b[93m38\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7017: \u001b[0mElement implicitly has an 'any' type because type 'typeof globalThis' has no index signature.\n\n    \u001b[7m250\u001b[0m       const snarkyGates = globalThis.__snarky?.gates;\n    \u001b[7m   \u001b[0m \u001b[91m                                     ~~~~~~~~\u001b[0m\n    \u001b[96msrc/test/backend-infrastructure.test.ts\u001b[0m:\u001b[93m252\u001b[0m:\u001b[93m43\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7017: \u001b[0mElement implicitly has an 'any' type because type 'typeof globalThis' has no index signature.\n\n    \u001b[7m252\u001b[0m       const afterSwitchGates = globalThis.__snarky?.gates;\n    \u001b[7m   \u001b[0m \u001b[91m                                          ~~~~~~~~\u001b[0m\n    \u001b[96msrc/test/backend-infrastructure.test.ts\u001b[0m:\u001b[93m262\u001b[0m:\u001b[93m57\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS18046: \u001b[0m'error' is of type 'unknown'.\n\n    \u001b[7m262\u001b[0m         console.error('Sparky interface check failed:', error.message);\n    \u001b[7m   \u001b[0m \u001b[91m                                                        ~~~~~\u001b[0m\n    \u001b[96msrc/test/backend-infrastructure.test.ts\u001b[0m:\u001b[93m279\u001b[0m:\u001b[93m58\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS18046: \u001b[0m'error' is of type 'unknown'.\n\n    \u001b[7m279\u001b[0m         console.error('Constraint routing test failed:', error.message);\n    \u001b[7m   \u001b[0m \u001b[91m                                                         ~~~~~\u001b[0m\n\nTest Suites: 1 failed, 1 total\nTests:       0 total\nSnapshots:   0 total\nTime:        2.551 s\nRan all test suites matching /src\\/test\\/backend-infrastructure.test.ts/i.\n\n> o1js@2.6.0 test:backend-infrastructure\n> NODE_OPTIONS=--experimental-vm-modules npx jest src/test/backend-infrastructure.test.ts --verbose\n\nCommand failed: npm run test:backend-infrastructure\n(node:1087104) ExperimentalWarning: VM Modules is an experimental feature and might change at any time\n(Use `node --trace-warnings ...` to show where the warning was created)\nts-jest[versions] (WARN) Version 5.4.5 of typescript installed has not been tested with ts-jest. If you're experiencing issues, consider using a supported version (>=4.3.0 <5.0.0-0). Please do not report issues in ts-jest if you are using unsupported versions.\nFAIL src/test/backend-infrastructure.test.ts\n  ● Test suite failed to run\n\n    \u001b[96msrc/test/backend-infrastructure.test.ts\u001b[0m:\u001b[93m61\u001b[0m:\u001b[93m25\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7017: \u001b[0mElement implicitly has an 'any' type because type 'typeof globalThis' has no index signature.\n\n    \u001b[7m61\u001b[0m       expect(globalThis.__snarky).toBeDefined();\n    \u001b[7m  \u001b[0m \u001b[91m                        ~~~~~~~~\u001b[0m\n    \u001b[96msrc/test/backend-infrastructure.test.ts\u001b[0m:\u001b[93m62\u001b[0m:\u001b[93m25\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7017: \u001b[0mElement implicitly has an 'any' type because type 'typeof globalThis' has no index signature.\n\n    \u001b[7m62\u001b[0m       expect(globalThis.__snarky.gates).toBeDefined();\n    \u001b[7m  \u001b[0m \u001b[91m                        ~~~~~~~~\u001b[0m\n    \u001b[96msrc/test/backend-infrastructure.test.ts\u001b[0m:\u001b[93m63\u001b[0m:\u001b[93m32\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7017: \u001b[0mElement implicitly has an 'any' type because type 'typeof globalThis' has no index signature.\n\n    \u001b[7m63\u001b[0m       expect(typeof globalThis.__snarky.gates.generic).toBe('function');\n    \u001b[7m  \u001b[0m \u001b[91m                               ~~~~~~~~\u001b[0m\n    \u001b[96msrc/test/backend-infrastructure.test.ts\u001b[0m:\u001b[93m71\u001b[0m:\u001b[93m38\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7017: \u001b[0mElement implicitly has an 'any' type because type 'typeof globalThis' has no index signature.\n\n    \u001b[7m71\u001b[0m       const snarkyGates = globalThis.__snarky?.gates;\n    \u001b[7m  \u001b[0m \u001b[91m                                     ~~~~~~~~\u001b[0m\n    \u001b[96msrc/test/backend-infrastructure.test.ts\u001b[0m:\u001b[93m76\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7017: \u001b[0mElement implicitly has an 'any' type because type 'typeof globalThis' has no index signature.\n\n    \u001b[7m76\u001b[0m       const currentGates = globalThis.__snarky?.gates;\n    \u001b[7m  \u001b[0m \u001b[91m                                      ~~~~~~~~\u001b[0m\n    \u001b[96msrc/test/backend-infrastructure.test.ts\u001b[0m:\u001b[93m124\u001b[0m:\u001b[93m68\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS18046: \u001b[0m'error' is of type 'unknown'.\n\n    \u001b[7m124\u001b[0m         console.error('Error generating constraints with Snarky:', error.message);\n    \u001b[7m   \u001b[0m \u001b[91m                                                                   ~~~~~\u001b[0m\n    \u001b[96msrc/test/backend-infrastructure.test.ts\u001b[0m:\u001b[93m137\u001b[0m:\u001b[93m68\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS18046: \u001b[0m'error' is of type 'unknown'.\n\n    \u001b[7m137\u001b[0m         console.error('Error generating constraints with Sparky:', error.message);\n    \u001b[7m   \u001b[0m \u001b[91m                                                                   ~~~~~\u001b[0m\n    \u001b[96msrc/test/backend-infrastructure.test.ts\u001b[0m:\u001b[93m245\u001b[0m:\u001b[93m52\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS18046: \u001b[0m'error' is of type 'unknown'.\n\n    \u001b[7m245\u001b[0m         console.error('Backend switching failed:', error.message);\n    \u001b[7m   \u001b[0m \u001b[91m                                                   ~~~~~\u001b[0m\n    \u001b[96msrc/test/backend-infrastructure.test.ts\u001b[0m:\u001b[93m250\u001b[0m:\u001b[93m38\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7017: \u001b[0mElement implicitly has an 'any' type because type 'typeof globalThis' has no index signature.\n\n    \u001b[7m250\u001b[0m       const snarkyGates = globalThis.__snarky?.gates;\n    \u001b[7m   \u001b[0m \u001b[91m                                     ~~~~~~~~\u001b[0m\n    \u001b[96msrc/test/backend-infrastructure.test.ts\u001b[0m:\u001b[93m252\u001b[0m:\u001b[93m43\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7017: \u001b[0mElement implicitly has an 'any' type because type 'typeof globalThis' has no index signature.\n\n    \u001b[7m252\u001b[0m       const afterSwitchGates = globalThis.__snarky?.gates;\n    \u001b[7m   \u001b[0m \u001b[91m                                          ~~~~~~~~\u001b[0m\n    \u001b[96msrc/test/backend-infrastructure.test.ts\u001b[0m:\u001b[93m262\u001b[0m:\u001b[93m57\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS18046: \u001b[0m'error' is of type 'unknown'.\n\n    \u001b[7m262\u001b[0m         console.error('Sparky interface check failed:', error.message);\n    \u001b[7m   \u001b[0m \u001b[91m                                                        ~~~~~\u001b[0m\n    \u001b[96msrc/test/backend-infrastructure.test.ts\u001b[0m:\u001b[93m279\u001b[0m:\u001b[93m58\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS18046: \u001b[0m'error' is of type 'unknown'.\n\n    \u001b[7m279\u001b[0m         console.error('Constraint routing test failed:', error.message);\n    \u001b[7m   \u001b[0m \u001b[91m                                                         ~~~~~\u001b[0m\n\nTest Suites: 1 failed, 1 total\nTests:       0 total\nSnapshots:   0 total\nTime:        2.551 s\nRan all test suites matching /src\\/test\\/backend-infrastructure.test.ts/i.\n",
    "passed": false,
    "duration": 3348,
    "passingTests": 0,
    "failingTests": 0,
    "totalTests": 0,
    "successRate": 0
  },
  "constraintAnalysisStatus": {
    "name": "Constraint Analysis",
    "command": "npm run test:constraint-analysis",
    "description": "Deep constraint system generation analysis",
    "output": "(node:1087163) ExperimentalWarning: VM Modules is an experimental feature and might change at any time\n(Use `node --trace-warnings ...` to show where the warning was created)\nts-jest[versions] (WARN) Version 5.4.5 of typescript installed has not been tested with ts-jest. If you're experiencing issues, consider using a supported version (>=4.3.0 <5.0.0-0). Please do not report issues in ts-jest if you are using unsupported versions.\nFAIL src/test/constraint-system-analysis.test.ts\n  ● Test suite failed to run\n\n    \u001b[96msrc/test/constraint-system-analysis.test.ts\u001b[0m:\u001b[93m49\u001b[0m:\u001b[93m42\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2551: \u001b[0mProperty 'typ' does not exist on type 'Gate'. Did you mean 'type'?\n\n    \u001b[7m49\u001b[0m         console.log(`  Gate ${i}: ${gate.typ} (coeffs: ${gate.coeffs?.length || 'N/A'})`);\n    \u001b[7m  \u001b[0m \u001b[91m                                         ~~~\u001b[0m\n\n      \u001b[96mdist/node/bindings.d.ts\u001b[0m:\u001b[93m481\u001b[0m:\u001b[93m3\u001b[0m\n        \u001b[7m481\u001b[0m   type: GateType;\n        \u001b[7m   \u001b[0m \u001b[96m  ~~~~\u001b[0m\n        'type' is declared here.\n    \u001b[96msrc/test/constraint-system-analysis.test.ts\u001b[0m:\u001b[93m54\u001b[0m:\u001b[93m42\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2551: \u001b[0mProperty 'typ' does not exist on type 'Gate'. Did you mean 'type'?\n\n    \u001b[7m54\u001b[0m         console.log(`  Gate ${i}: ${gate.typ} (coeffs: ${gate.coeffs?.length || 'N/A'})`);\n    \u001b[7m  \u001b[0m \u001b[91m                                         ~~~\u001b[0m\n\n      \u001b[96mdist/node/bindings.d.ts\u001b[0m:\u001b[93m481\u001b[0m:\u001b[93m3\u001b[0m\n        \u001b[7m481\u001b[0m   type: GateType;\n        \u001b[7m   \u001b[0m \u001b[96m  ~~~~\u001b[0m\n        'type' is declared here.\n    \u001b[96msrc/test/constraint-system-analysis.test.ts\u001b[0m:\u001b[93m83\u001b[0m:\u001b[93m57\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2551: \u001b[0mProperty 'typ' does not exist on type 'Gate'. Did you mean 'type'?\n\n    \u001b[7m83\u001b[0m       const snarkyGateTypes = snarkyCS.gates.map(g => g.typ);\n    \u001b[7m  \u001b[0m \u001b[91m                                                        ~~~\u001b[0m\n\n      \u001b[96mdist/node/bindings.d.ts\u001b[0m:\u001b[93m481\u001b[0m:\u001b[93m3\u001b[0m\n        \u001b[7m481\u001b[0m   type: GateType;\n        \u001b[7m   \u001b[0m \u001b[96m  ~~~~\u001b[0m\n        'type' is declared here.\n    \u001b[96msrc/test/constraint-system-analysis.test.ts\u001b[0m:\u001b[93m84\u001b[0m:\u001b[93m57\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2551: \u001b[0mProperty 'typ' does not exist on type 'Gate'. Did you mean 'type'?\n\n    \u001b[7m84\u001b[0m       const sparkyGateTypes = sparkyCS.gates.map(g => g.typ);\n    \u001b[7m  \u001b[0m \u001b[91m                                                        ~~~\u001b[0m\n\n      \u001b[96mdist/node/bindings.d.ts\u001b[0m:\u001b[93m481\u001b[0m:\u001b[93m3\u001b[0m\n        \u001b[7m481\u001b[0m   type: GateType;\n        \u001b[7m   \u001b[0m \u001b[96m  ~~~~\u001b[0m\n        'type' is declared here.\n    \u001b[96msrc/test/constraint-system-analysis.test.ts\u001b[0m:\u001b[93m124\u001b[0m:\u001b[93m29\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'gates' implicitly has an 'any' type.\n\n    \u001b[7m124\u001b[0m       const analyzeGates = (gates, backend) => {\n    \u001b[7m   \u001b[0m \u001b[91m                            ~~~~~\u001b[0m\n    \u001b[96msrc/test/constraint-system-analysis.test.ts\u001b[0m:\u001b[93m124\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'backend' implicitly has an 'any' type.\n\n    \u001b[7m124\u001b[0m       const analyzeGates = (gates, backend) => {\n    \u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~\u001b[0m\n    \u001b[96msrc/test/constraint-system-analysis.test.ts\u001b[0m:\u001b[93m126\u001b[0m:\u001b[93m24\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'gate' implicitly has an 'any' type.\n\n    \u001b[7m126\u001b[0m         gates.forEach((gate, i) => {\n    \u001b[7m   \u001b[0m \u001b[91m                       ~~~~\u001b[0m\n    \u001b[96msrc/test/constraint-system-analysis.test.ts\u001b[0m:\u001b[93m126\u001b[0m:\u001b[93m30\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'i' implicitly has an 'any' type.\n\n    \u001b[7m126\u001b[0m         gates.forEach((gate, i) => {\n    \u001b[7m   \u001b[0m \u001b[91m                             ~\u001b[0m\n    \u001b[96msrc/test/constraint-system-analysis.test.ts\u001b[0m:\u001b[93m129\u001b[0m:\u001b[93m76\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'c' implicitly has an 'any' type.\n\n    \u001b[7m129\u001b[0m             console.log(`     Coefficients: [${gate.coeffs.slice(0, 5).map(c => c.toString().slice(0, 10)).join(', ')}${gate.coeffs.length > 5 ? '...' : ''}]`);\n    \u001b[7m   \u001b[0m \u001b[91m                                                                           ~\u001b[0m\n    \u001b[96msrc/test/constraint-system-analysis.test.ts\u001b[0m:\u001b[93m168\u001b[0m:\u001b[93m37\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'gate' implicitly has an 'any' type.\n\n    \u001b[7m168\u001b[0m       const analyzeGateStructure = (gate, backend) => {\n    \u001b[7m   \u001b[0m \u001b[91m                                    ~~~~\u001b[0m\n    \u001b[96msrc/test/constraint-system-analysis.test.ts\u001b[0m:\u001b[93m168\u001b[0m:\u001b[93m43\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'backend' implicitly has an 'any' type.\n\n    \u001b[7m168\u001b[0m       const analyzeGateStructure = (gate, backend) => {\n    \u001b[7m   \u001b[0m \u001b[91m                                          ~~~~~~~\u001b[0m\n    \u001b[96msrc/test/constraint-system-analysis.test.ts\u001b[0m:\u001b[93m177\u001b[0m:\u001b[93m78\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'c' implicitly has an 'any' type.\n\n    \u001b[7m177\u001b[0m           console.log(`  Sample coefficients: [${gate.coeffs.slice(0, 3).map(c => typeof c).join(', ')}]`);\n    \u001b[7m   \u001b[0m \u001b[91m                                                                             ~\u001b[0m\n    \u001b[96msrc/test/constraint-system-analysis.test.ts\u001b[0m:\u001b[93m210\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'gates' implicitly has an 'any' type.\n\n    \u001b[7m210\u001b[0m       const analyzeCoefficients = (gates, backend) => {\n    \u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~\u001b[0m\n    \u001b[96msrc/test/constraint-system-analysis.test.ts\u001b[0m:\u001b[93m210\u001b[0m:\u001b[93m43\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'backend' implicitly has an 'any' type.\n\n    \u001b[7m210\u001b[0m       const analyzeCoefficients = (gates, backend) => {\n    \u001b[7m   \u001b[0m \u001b[91m                                          ~~~~~~~\u001b[0m\n    \u001b[96msrc/test/constraint-system-analysis.test.ts\u001b[0m:\u001b[93m212\u001b[0m:\u001b[93m24\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'gate' implicitly has an 'any' type.\n\n    \u001b[7m212\u001b[0m         gates.forEach((gate, i) => {\n    \u001b[7m   \u001b[0m \u001b[91m                       ~~~~\u001b[0m\n    \u001b[96msrc/test/constraint-system-analysis.test.ts\u001b[0m:\u001b[93m212\u001b[0m:\u001b[93m30\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'i' implicitly has an 'any' type.\n\n    \u001b[7m212\u001b[0m         gates.forEach((gate, i) => {\n    \u001b[7m   \u001b[0m \u001b[91m                             ~\u001b[0m\n    \u001b[96msrc/test/constraint-system-analysis.test.ts\u001b[0m:\u001b[93m214\u001b[0m:\u001b[93m48\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'c' implicitly has an 'any' type.\n\n    \u001b[7m214\u001b[0m             const coeffTypes = gate.coeffs.map(c => typeof c);\n    \u001b[7m   \u001b[0m \u001b[91m                                               ~\u001b[0m\n    \u001b[96msrc/test/constraint-system-analysis.test.ts\u001b[0m:\u001b[93m219\u001b[0m:\u001b[93m62\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'c' implicitly has an 'any' type.\n\n    \u001b[7m219\u001b[0m             const sampleValues = gate.coeffs.slice(0, 2).map(c => {\n    \u001b[7m   \u001b[0m \u001b[91m                                                             ~\u001b[0m\n    \u001b[96msrc/test/constraint-system-analysis.test.ts\u001b[0m:\u001b[93m370\u001b[0m:\u001b[93m60\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS18046: \u001b[0m'error' is of type 'unknown'.\n\n    \u001b[7m370\u001b[0m         console.log(`❌ Snarky constraint capture failed: ${error.message}`);\n    \u001b[7m   \u001b[0m \u001b[91m                                                           ~~~~~\u001b[0m\n    \u001b[96msrc/test/constraint-system-analysis.test.ts\u001b[0m:\u001b[93m379\u001b[0m:\u001b[93m60\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS18046: \u001b[0m'error' is of type 'unknown'.\n\n    \u001b[7m379\u001b[0m         console.log(`❌ Sparky constraint capture failed: ${error.message}`);\n    \u001b[7m   \u001b[0m \u001b[91m                                                           ~~~~~\u001b[0m\n    \u001b[96msrc/test/constraint-system-analysis.test.ts\u001b[0m:\u001b[93m391\u001b[0m:\u001b[93m64\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS18048: \u001b[0m'snarkyConstraints' is possibly 'undefined'.\n\n    \u001b[7m391\u001b[0m         console.log(`Constraint structure compatible: ${typeof snarkyConstraints.gates[0] === typeof sparkyConstraints.gates[0] ? '✅' : '❌'}`);\n    \u001b[7m   \u001b[0m \u001b[91m                                                               ~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/test/constraint-system-analysis.test.ts\u001b[0m:\u001b[93m391\u001b[0m:\u001b[93m102\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS18048: \u001b[0m'sparkyConstraints' is possibly 'undefined'.\n\n    \u001b[7m391\u001b[0m         console.log(`Constraint structure compatible: ${typeof snarkyConstraints.gates[0] === typeof sparkyConstraints.gates[0] ? '✅' : '❌'}`);\n    \u001b[7m   \u001b[0m \u001b[91m                                                                                                     ~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/test/constraint-system-analysis.test.ts\u001b[0m:\u001b[93m396\u001b[0m:\u001b[93m14\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS18048: \u001b[0m'snarkyConstraints' is possibly 'undefined'.\n\n    \u001b[7m396\u001b[0m       expect(snarkyConstraints.gates.length).not.toBe(sparkyConstraints.gates.length); // But counts differ due to routing\n    \u001b[7m   \u001b[0m \u001b[91m             ~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/test/constraint-system-analysis.test.ts\u001b[0m:\u001b[93m396\u001b[0m:\u001b[93m55\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS18048: \u001b[0m'sparkyConstraints' is possibly 'undefined'.\n\n    \u001b[7m396\u001b[0m       expect(snarkyConstraints.gates.length).not.toBe(sparkyConstraints.gates.length); // But counts differ due to routing\n    \u001b[7m   \u001b[0m \u001b[91m                                                      ~~~~~~~~~~~~~~~~~\u001b[0m\n\nTest Suites: 1 failed, 1 total\nTests:       0 total\nSnapshots:   0 total\nTime:        2.509 s\nRan all test suites matching /src\\/test\\/constraint-system-analysis.test.ts/i.\n\n> o1js@2.6.0 test:constraint-analysis\n> NODE_OPTIONS=--experimental-vm-modules npx jest src/test/constraint-system-analysis.test.ts --verbose\n\nCommand failed: npm run test:constraint-analysis\n(node:1087163) ExperimentalWarning: VM Modules is an experimental feature and might change at any time\n(Use `node --trace-warnings ...` to show where the warning was created)\nts-jest[versions] (WARN) Version 5.4.5 of typescript installed has not been tested with ts-jest. If you're experiencing issues, consider using a supported version (>=4.3.0 <5.0.0-0). Please do not report issues in ts-jest if you are using unsupported versions.\nFAIL src/test/constraint-system-analysis.test.ts\n  ● Test suite failed to run\n\n    \u001b[96msrc/test/constraint-system-analysis.test.ts\u001b[0m:\u001b[93m49\u001b[0m:\u001b[93m42\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2551: \u001b[0mProperty 'typ' does not exist on type 'Gate'. Did you mean 'type'?\n\n    \u001b[7m49\u001b[0m         console.log(`  Gate ${i}: ${gate.typ} (coeffs: ${gate.coeffs?.length || 'N/A'})`);\n    \u001b[7m  \u001b[0m \u001b[91m                                         ~~~\u001b[0m\n\n      \u001b[96mdist/node/bindings.d.ts\u001b[0m:\u001b[93m481\u001b[0m:\u001b[93m3\u001b[0m\n        \u001b[7m481\u001b[0m   type: GateType;\n        \u001b[7m   \u001b[0m \u001b[96m  ~~~~\u001b[0m\n        'type' is declared here.\n    \u001b[96msrc/test/constraint-system-analysis.test.ts\u001b[0m:\u001b[93m54\u001b[0m:\u001b[93m42\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2551: \u001b[0mProperty 'typ' does not exist on type 'Gate'. Did you mean 'type'?\n\n    \u001b[7m54\u001b[0m         console.log(`  Gate ${i}: ${gate.typ} (coeffs: ${gate.coeffs?.length || 'N/A'})`);\n    \u001b[7m  \u001b[0m \u001b[91m                                         ~~~\u001b[0m\n\n      \u001b[96mdist/node/bindings.d.ts\u001b[0m:\u001b[93m481\u001b[0m:\u001b[93m3\u001b[0m\n        \u001b[7m481\u001b[0m   type: GateType;\n        \u001b[7m   \u001b[0m \u001b[96m  ~~~~\u001b[0m\n        'type' is declared here.\n    \u001b[96msrc/test/constraint-system-analysis.test.ts\u001b[0m:\u001b[93m83\u001b[0m:\u001b[93m57\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2551: \u001b[0mProperty 'typ' does not exist on type 'Gate'. Did you mean 'type'?\n\n    \u001b[7m83\u001b[0m       const snarkyGateTypes = snarkyCS.gates.map(g => g.typ);\n    \u001b[7m  \u001b[0m \u001b[91m                                                        ~~~\u001b[0m\n\n      \u001b[96mdist/node/bindings.d.ts\u001b[0m:\u001b[93m481\u001b[0m:\u001b[93m3\u001b[0m\n        \u001b[7m481\u001b[0m   type: GateType;\n        \u001b[7m   \u001b[0m \u001b[96m  ~~~~\u001b[0m\n        'type' is declared here.\n    \u001b[96msrc/test/constraint-system-analysis.test.ts\u001b[0m:\u001b[93m84\u001b[0m:\u001b[93m57\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2551: \u001b[0mProperty 'typ' does not exist on type 'Gate'. Did you mean 'type'?\n\n    \u001b[7m84\u001b[0m       const sparkyGateTypes = sparkyCS.gates.map(g => g.typ);\n    \u001b[7m  \u001b[0m \u001b[91m                                                        ~~~\u001b[0m\n\n      \u001b[96mdist/node/bindings.d.ts\u001b[0m:\u001b[93m481\u001b[0m:\u001b[93m3\u001b[0m\n        \u001b[7m481\u001b[0m   type: GateType;\n        \u001b[7m   \u001b[0m \u001b[96m  ~~~~\u001b[0m\n        'type' is declared here.\n    \u001b[96msrc/test/constraint-system-analysis.test.ts\u001b[0m:\u001b[93m124\u001b[0m:\u001b[93m29\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'gates' implicitly has an 'any' type.\n\n    \u001b[7m124\u001b[0m       const analyzeGates = (gates, backend) => {\n    \u001b[7m   \u001b[0m \u001b[91m                            ~~~~~\u001b[0m\n    \u001b[96msrc/test/constraint-system-analysis.test.ts\u001b[0m:\u001b[93m124\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'backend' implicitly has an 'any' type.\n\n    \u001b[7m124\u001b[0m       const analyzeGates = (gates, backend) => {\n    \u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~~~\u001b[0m\n    \u001b[96msrc/test/constraint-system-analysis.test.ts\u001b[0m:\u001b[93m126\u001b[0m:\u001b[93m24\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'gate' implicitly has an 'any' type.\n\n    \u001b[7m126\u001b[0m         gates.forEach((gate, i) => {\n    \u001b[7m   \u001b[0m \u001b[91m                       ~~~~\u001b[0m\n    \u001b[96msrc/test/constraint-system-analysis.test.ts\u001b[0m:\u001b[93m126\u001b[0m:\u001b[93m30\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'i' implicitly has an 'any' type.\n\n    \u001b[7m126\u001b[0m         gates.forEach((gate, i) => {\n    \u001b[7m   \u001b[0m \u001b[91m                             ~\u001b[0m\n    \u001b[96msrc/test/constraint-system-analysis.test.ts\u001b[0m:\u001b[93m129\u001b[0m:\u001b[93m76\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'c' implicitly has an 'any' type.\n\n    \u001b[7m129\u001b[0m             console.log(`     Coefficients: [${gate.coeffs.slice(0, 5).map(c => c.toString().slice(0, 10)).join(', ')}${gate.coeffs.length > 5 ? '...' : ''}]`);\n    \u001b[7m   \u001b[0m \u001b[91m                                                                           ~\u001b[0m\n    \u001b[96msrc/test/constraint-system-analysis.test.ts\u001b[0m:\u001b[93m168\u001b[0m:\u001b[93m37\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'gate' implicitly has an 'any' type.\n\n    \u001b[7m168\u001b[0m       const analyzeGateStructure = (gate, backend) => {\n    \u001b[7m   \u001b[0m \u001b[91m                                    ~~~~\u001b[0m\n    \u001b[96msrc/test/constraint-system-analysis.test.ts\u001b[0m:\u001b[93m168\u001b[0m:\u001b[93m43\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'backend' implicitly has an 'any' type.\n\n    \u001b[7m168\u001b[0m       const analyzeGateStructure = (gate, backend) => {\n    \u001b[7m   \u001b[0m \u001b[91m                                          ~~~~~~~\u001b[0m\n    \u001b[96msrc/test/constraint-system-analysis.test.ts\u001b[0m:\u001b[93m177\u001b[0m:\u001b[93m78\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'c' implicitly has an 'any' type.\n\n    \u001b[7m177\u001b[0m           console.log(`  Sample coefficients: [${gate.coeffs.slice(0, 3).map(c => typeof c).join(', ')}]`);\n    \u001b[7m   \u001b[0m \u001b[91m                                                                             ~\u001b[0m\n    \u001b[96msrc/test/constraint-system-analysis.test.ts\u001b[0m:\u001b[93m210\u001b[0m:\u001b[93m36\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'gates' implicitly has an 'any' type.\n\n    \u001b[7m210\u001b[0m       const analyzeCoefficients = (gates, backend) => {\n    \u001b[7m   \u001b[0m \u001b[91m                                   ~~~~~\u001b[0m\n    \u001b[96msrc/test/constraint-system-analysis.test.ts\u001b[0m:\u001b[93m210\u001b[0m:\u001b[93m43\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'backend' implicitly has an 'any' type.\n\n    \u001b[7m210\u001b[0m       const analyzeCoefficients = (gates, backend) => {\n    \u001b[7m   \u001b[0m \u001b[91m                                          ~~~~~~~\u001b[0m\n    \u001b[96msrc/test/constraint-system-analysis.test.ts\u001b[0m:\u001b[93m212\u001b[0m:\u001b[93m24\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'gate' implicitly has an 'any' type.\n\n    \u001b[7m212\u001b[0m         gates.forEach((gate, i) => {\n    \u001b[7m   \u001b[0m \u001b[91m                       ~~~~\u001b[0m\n    \u001b[96msrc/test/constraint-system-analysis.test.ts\u001b[0m:\u001b[93m212\u001b[0m:\u001b[93m30\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'i' implicitly has an 'any' type.\n\n    \u001b[7m212\u001b[0m         gates.forEach((gate, i) => {\n    \u001b[7m   \u001b[0m \u001b[91m                             ~\u001b[0m\n    \u001b[96msrc/test/constraint-system-analysis.test.ts\u001b[0m:\u001b[93m214\u001b[0m:\u001b[93m48\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'c' implicitly has an 'any' type.\n\n    \u001b[7m214\u001b[0m             const coeffTypes = gate.coeffs.map(c => typeof c);\n    \u001b[7m   \u001b[0m \u001b[91m                                               ~\u001b[0m\n    \u001b[96msrc/test/constraint-system-analysis.test.ts\u001b[0m:\u001b[93m219\u001b[0m:\u001b[93m62\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'c' implicitly has an 'any' type.\n\n    \u001b[7m219\u001b[0m             const sampleValues = gate.coeffs.slice(0, 2).map(c => {\n    \u001b[7m   \u001b[0m \u001b[91m                                                             ~\u001b[0m\n    \u001b[96msrc/test/constraint-system-analysis.test.ts\u001b[0m:\u001b[93m370\u001b[0m:\u001b[93m60\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS18046: \u001b[0m'error' is of type 'unknown'.\n\n    \u001b[7m370\u001b[0m         console.log(`❌ Snarky constraint capture failed: ${error.message}`);\n    \u001b[7m   \u001b[0m \u001b[91m                                                           ~~~~~\u001b[0m\n    \u001b[96msrc/test/constraint-system-analysis.test.ts\u001b[0m:\u001b[93m379\u001b[0m:\u001b[93m60\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS18046: \u001b[0m'error' is of type 'unknown'.\n\n    \u001b[7m379\u001b[0m         console.log(`❌ Sparky constraint capture failed: ${error.message}`);\n    \u001b[7m   \u001b[0m \u001b[91m                                                           ~~~~~\u001b[0m\n    \u001b[96msrc/test/constraint-system-analysis.test.ts\u001b[0m:\u001b[93m391\u001b[0m:\u001b[93m64\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS18048: \u001b[0m'snarkyConstraints' is possibly 'undefined'.\n\n    \u001b[7m391\u001b[0m         console.log(`Constraint structure compatible: ${typeof snarkyConstraints.gates[0] === typeof sparkyConstraints.gates[0] ? '✅' : '❌'}`);\n    \u001b[7m   \u001b[0m \u001b[91m                                                               ~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/test/constraint-system-analysis.test.ts\u001b[0m:\u001b[93m391\u001b[0m:\u001b[93m102\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS18048: \u001b[0m'sparkyConstraints' is possibly 'undefined'.\n\n    \u001b[7m391\u001b[0m         console.log(`Constraint structure compatible: ${typeof snarkyConstraints.gates[0] === typeof sparkyConstraints.gates[0] ? '✅' : '❌'}`);\n    \u001b[7m   \u001b[0m \u001b[91m                                                                                                     ~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/test/constraint-system-analysis.test.ts\u001b[0m:\u001b[93m396\u001b[0m:\u001b[93m14\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS18048: \u001b[0m'snarkyConstraints' is possibly 'undefined'.\n\n    \u001b[7m396\u001b[0m       expect(snarkyConstraints.gates.length).not.toBe(sparkyConstraints.gates.length); // But counts differ due to routing\n    \u001b[7m   \u001b[0m \u001b[91m             ~~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/test/constraint-system-analysis.test.ts\u001b[0m:\u001b[93m396\u001b[0m:\u001b[93m55\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS18048: \u001b[0m'sparkyConstraints' is possibly 'undefined'.\n\n    \u001b[7m396\u001b[0m       expect(snarkyConstraints.gates.length).not.toBe(sparkyConstraints.gates.length); // But counts differ due to routing\n    \u001b[7m   \u001b[0m \u001b[91m                                                      ~~~~~~~~~~~~~~~~~\u001b[0m\n\nTest Suites: 1 failed, 1 total\nTests:       0 total\nSnapshots:   0 total\nTime:        2.509 s\nRan all test suites matching /src\\/test\\/constraint-system-analysis.test.ts/i.\n",
    "passed": false,
    "duration": 3377,
    "passingTests": 0,
    "failingTests": 0,
    "totalTests": 0,
    "successRate": 0
  },
  "integrationStatus": {
    "name": "Sparky Integration",
    "command": "npm run test:sparky",
    "description": "Comprehensive API compatibility and feature parity testing",
    "output": "(node:1087340) ExperimentalWarning: VM Modules is an experimental feature and might change at any time\n(Use `node --trace-warnings ...` to show where the warning was created)\n(node:1087362) ExperimentalWarning: VM Modules is an experimental feature and might change at any time\n(Use `node --trace-warnings ...` to show where the warning was created)\n(node:1087370) ExperimentalWarning: VM Modules is an experimental feature and might change at any time\n(Use `node --trace-warnings ...` to show where the warning was created)\n(node:1087368) ExperimentalWarning: VM Modules is an experimental feature and might change at any time\n(Use `node --trace-warnings ...` to show where the warning was created)\n(node:1087369) ExperimentalWarning: VM Modules is an experimental feature and might change at any time\n(Use `node --trace-warnings ...` to show where the warning was created)\n(node:1087361) ExperimentalWarning: VM Modules is an experimental feature and might change at any time\n(Use `node --trace-warnings ...` to show where the warning was created)\nts-jest[versions] (WARN) Version 5.4.5 of typescript installed has not been tested with ts-jest. If you're experiencing issues, consider using a supported version (>=4.3.0 <5.0.0-0). Please do not report issues in ts-jest if you are using unsupported versions.\nts-jest[versions] (WARN) Version 5.4.5 of typescript installed has not been tested with ts-jest. If you're experiencing issues, consider using a supported version (>=4.3.0 <5.0.0-0). Please do not report issues in ts-jest if you are using unsupported versions.\nts-jest[versions] (WARN) Version 5.4.5 of typescript installed has not been tested with ts-jest. If you're experiencing issues, consider using a supported version (>=4.3.0 <5.0.0-0). Please do not report issues in ts-jest if you are using unsupported versions.\nts-jest[versions] (WARN) Version 5.4.5 of typescript installed has not been tested with ts-jest. If you're experiencing issues, consider using a supported version (>=4.3.0 <5.0.0-0). Please do not report issues in ts-jest if you are using unsupported versions.\nts-jest[versions] (WARN) Version 5.4.5 of typescript installed has not been tested with ts-jest. If you're experiencing issues, consider using a supported version (>=4.3.0 <5.0.0-0). Please do not report issues in ts-jest if you are using unsupported versions.\nPASS src/test/integration/sparky-constraint-count.test.ts\n  ● Console\n\n    console.log\n      Loading Snarky backend...\n\n      at initializeBindings (dist/node/bindings.js:67:15)\n\n    console.log\n      ✓ Snarky backend loaded\n\n      at initializeBindings (dist/node/bindings.js:84:15)\n\n    console.log\n      Switching backend from snarky to sparky\n\n      at initializeBindings (dist/node/bindings.js:24:13)\n\n    console.log\n      Loading Sparky backend...\n\n      at initializeBindings (dist/node/bindings.js:40:15)\n\n    console.log\n      OCaml backend bridge initialized: false\n\n      at initializeBindings (dist/node/bindings.js:51:15)\n\n    console.log\n      ✓ Sparky backend loaded\n\n      at initializeBindings (dist/node/bindings.js:64:15)\n\n    console.log\n      Switching backend from sparky to snarky\n\n      at initializeBindings (dist/node/bindings.js:24:13)\n\n    console.log\n      Loading Snarky backend...\n\n      at initializeBindings (dist/node/bindings.js:67:15)\n\n    console.log\n      ✓ Snarky backend loaded\n\n      at initializeBindings (dist/node/bindings.js:84:15)\n\n    console.log\n      Switching backend from snarky to sparky\n\n      at initializeBindings (dist/node/bindings.js:24:13)\n\n    console.log\n      Loading Sparky backend...\n\n      at initializeBindings (dist/node/bindings.js:40:15)\n\n    console.log\n      OCaml backend bridge initialized: false\n\n      at initializeBindings (dist/node/bindings.js:51:15)\n\n    console.log\n      ✓ Sparky backend loaded\n\n      at initializeBindings (dist/node/bindings.js:64:15)\n\n    console.log\n      Switching backend from sparky to snarky\n\n      at initializeBindings (dist/node/bindings.js:24:13)\n\n    console.log\n      Loading Snarky backend...\n\n      at initializeBindings (dist/node/bindings.js:67:15)\n\n    console.log\n      ✓ Snarky backend loaded\n\n      at initializeBindings (dist/node/bindings.js:84:15)\n\n    console.log\n      Switching backend from snarky to sparky\n\n      at initializeBindings (dist/node/bindings.js:24:13)\n\n    console.log\n      Loading Sparky backend...\n\n      at initializeBindings (dist/node/bindings.js:40:15)\n\n    console.log\n      OCaml backend bridge initialized: false\n\n      at initializeBindings (dist/node/bindings.js:51:15)\n\n    console.log\n      ✓ Sparky backend loaded\n\n      at initializeBindings (dist/node/bindings.js:64:15)\n\n    console.log\n      Switching backend from sparky to snarky\n\n      at initializeBindings (dist/node/bindings.js:24:13)\n\n    console.log\n      Loading Snarky backend...\n\n      at initializeBindings (dist/node/bindings.js:67:15)\n\n    console.log\n      ✓ Snarky backend loaded\n\n      at initializeBindings (dist/node/bindings.js:84:15)\n\n    console.log\n      Switching backend from snarky to sparky\n\n      at initializeBindings (dist/node/bindings.js:24:13)\n\n    console.log\n      Loading Sparky backend...\n\n      at initializeBindings (dist/node/bindings.js:40:15)\n\n    console.log\n      OCaml backend bridge initialized: false\n\n      at initializeBindings (dist/node/bindings.js:51:15)\n\n    console.log\n      ✓ Sparky backend loaded\n\n      at initializeBindings (dist/node/bindings.js:64:15)\n\n    console.log\n      Switching backend from sparky to snarky\n\n      at initializeBindings (dist/node/bindings.js:24:13)\n\n    console.log\n      Loading Snarky backend...\n\n      at initializeBindings (dist/node/bindings.js:67:15)\n\n    console.log\n      ✓ Snarky backend loaded\n\n      at initializeBindings (dist/node/bindings.js:84:15)\n\nFAIL src/test/integration/sparky-gate-tests.test.ts\n  ● Test suite failed to run\n\n    \u001b[96msrc/test/integration/sparky-gate-tests.test.ts\u001b[0m:\u001b[93m10\u001b[0m:\u001b[93m61\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2307: \u001b[0mCannot find module '../debug/constraint-comparison.js' or its corresponding type declarations.\n\n    \u001b[7m10\u001b[0m import { compareConstraintSystems as detailedCompare } from '../debug/constraint-comparison.js';\n    \u001b[7m  \u001b[0m \u001b[91m                                                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\nFAIL src/test/integration/sparky-backend-integration.test.ts (10.436 s)\n  ● Console\n\n    console.log\n      Loading Snarky backend...\n\n      at initializeBindings (dist/node/bindings.js:67:15)\n\n    console.log\n      ✓ Snarky backend loaded\n\n      at initializeBindings (dist/node/bindings.js:84:15)\n\n    console.log\n      Switching backend from snarky to sparky\n\n      at initializeBindings (dist/node/bindings.js:24:13)\n\n    console.log\n      Loading Sparky backend...\n\n      at initializeBindings (dist/node/bindings.js:40:15)\n\n    console.log\n      OCaml backend bridge initialized: false\n\n      at initializeBindings (dist/node/bindings.js:51:15)\n\n    console.log\n      ✓ Sparky backend loaded\n\n      at initializeBindings (dist/node/bindings.js:64:15)\n\n    console.log\n      Switching backend from sparky to snarky\n\n      at initializeBindings (dist/node/bindings.js:24:13)\n\n    console.log\n      Loading Snarky backend...\n\n      at initializeBindings (dist/node/bindings.js:67:15)\n\n    console.log\n      ✓ Snarky backend loaded\n\n      at initializeBindings (dist/node/bindings.js:84:15)\n\n    console.log\n      Switching backend from snarky to sparky\n\n      at initializeBindings (dist/node/bindings.js:24:13)\n\n    console.log\n      Loading Sparky backend...\n\n      at initializeBindings (dist/node/bindings.js:40:15)\n\n    console.log\n      OCaml backend bridge initialized: false\n\n      at initializeBindings (dist/node/bindings.js:51:15)\n\n    console.log\n      ✓ Sparky backend loaded\n\n      at initializeBindings (dist/node/bindings.js:64:15)\n\n    console.log\n      Switching backend from sparky to snarky\n\n      at initializeBindings (dist/node/bindings.js:24:13)\n\n    console.log\n      Loading Snarky backend...\n\n      at initializeBindings (dist/node/bindings.js:67:15)\n\n    console.log\n      ✓ Snarky backend loaded\n\n      at initializeBindings (dist/node/bindings.js:84:15)\n\n    console.log\n      Switching backend from snarky to sparky\n\n      at initializeBindings (dist/node/bindings.js:24:13)\n\n    console.log\n      Loading Sparky backend...\n\n      at initializeBindings (dist/node/bindings.js:40:15)\n\n    console.log\n      OCaml backend bridge initialized: false\n\n      at initializeBindings (dist/node/bindings.js:51:15)\n\n    console.log\n      ✓ Sparky backend loaded\n\n      at initializeBindings (dist/node/bindings.js:64:15)\n\n    console.log\n      Switching backend from sparky to snarky\n\n      at initializeBindings (dist/node/bindings.js:24:13)\n\n    console.log\n      Loading Snarky backend...\n\n      at initializeBindings (dist/node/bindings.js:67:15)\n\n    console.log\n      ✓ Snarky backend loaded\n\n      at initializeBindings (dist/node/bindings.js:84:15)\n\n    console.log\n      Switching backend from snarky to sparky\n\n      at initializeBindings (dist/node/bindings.js:24:13)\n\n    console.log\n      Loading Sparky backend...\n\n      at initializeBindings (dist/node/bindings.js:40:15)\n\n    console.log\n      OCaml backend bridge initialized: false\n\n      at initializeBindings (dist/node/bindings.js:51:15)\n\n    console.log\n      ✓ Sparky backend loaded\n\n      at initializeBindings (dist/node/bindings.js:64:15)\n\n    console.log\n      Switching backend from sparky to snarky\n\n      at initializeBindings (dist/node/bindings.js:24:13)\n\n    console.log\n      Loading Snarky backend...\n\n      at initializeBindings (dist/node/bindings.js:67:15)\n\n    console.log\n      ✓ Snarky backend loaded\n\n      at initializeBindings (dist/node/bindings.js:84:15)\n\n    console.log\n      Switching backend from snarky to sparky\n\n      at initializeBindings (dist/node/bindings.js:24:13)\n\n    console.log\n      Loading Sparky backend...\n\n      at initializeBindings (dist/node/bindings.js:40:15)\n\n    console.log\n      OCaml backend bridge initialized: false\n\n      at initializeBindings (dist/node/bindings.js:51:15)\n\n    console.log\n      ✓ Sparky backend loaded\n\n      at initializeBindings (dist/node/bindings.js:64:15)\n\n    console.log\n      Switching backend from sparky to snarky\n\n      at initializeBindings (dist/node/bindings.js:24:13)\n\n    console.log\n      Loading Snarky backend...\n\n      at initializeBindings (dist/node/bindings.js:67:15)\n\n    console.log\n      ✓ Snarky backend loaded\n\n      at initializeBindings (dist/node/bindings.js:84:15)\n\n    console.log\n      Switching backend from snarky to sparky\n\n      at initializeBindings (dist/node/bindings.js:24:13)\n\n    console.log\n      Loading Sparky backend...\n\n      at initializeBindings (dist/node/bindings.js:40:15)\n\n    console.log\n      OCaml backend bridge initialized: false\n\n      at initializeBindings (dist/node/bindings.js:51:15)\n\n    console.log\n      ✓ Sparky backend loaded\n\n      at initializeBindings (dist/node/bindings.js:64:15)\n\n    console.log\n      Switching backend from sparky to snarky\n\n      at initializeBindings (dist/node/bindings.js:24:13)\n\n    console.log\n      Loading Snarky backend...\n\n      at initializeBindings (dist/node/bindings.js:67:15)\n\n    console.log\n      ✓ Snarky backend loaded\n\n      at initializeBindings (dist/node/bindings.js:84:15)\n\n    console.log\n      Switching backend from snarky to sparky\n\n      at initializeBindings (dist/node/bindings.js:24:13)\n\n    console.log\n      Loading Sparky backend...\n\n      at initializeBindings (dist/node/bindings.js:40:15)\n\n    console.log\n      OCaml backend bridge initialized: false\n\n      at initializeBindings (dist/node/bindings.js:51:15)\n\n    console.log\n      ✓ Sparky backend loaded\n\n      at initializeBindings (dist/node/bindings.js:64:15)\n\n    console.log\n      Switching backend from sparky to snarky\n\n      at initializeBindings (dist/node/bindings.js:24:13)\n\n    console.log\n      Loading Snarky backend...\n\n      at initializeBindings (dist/node/bindings.js:67:15)\n\n    console.log\n      ✓ Snarky backend loaded\n\n      at initializeBindings (dist/node/bindings.js:84:15)\n\n    console.log\n      Switching backend from snarky to sparky\n\n      at initializeBindings (dist/node/bindings.js:24:13)\n\n    console.log\n      Loading Sparky backend...\n\n      at initializeBindings (dist/node/bindings.js:40:15)\n\n    console.log\n      OCaml backend bridge initialized: false\n\n      at initializeBindings (dist/node/bindings.js:51:15)\n\n    console.log\n      ✓ Sparky backend loaded\n\n      at initializeBindings (dist/node/bindings.js:64:15)\n\n    console.log\n      Switching backend from sparky to snarky\n\n      at initializeBindings (dist/node/bindings.js:24:13)\n\n    console.log\n      Loading Snarky backend...\n\n      at initializeBindings (dist/node/bindings.js:67:15)\n\n    console.log\n      ✓ Snarky backend loaded\n\n      at initializeBindings (dist/node/bindings.js:84:15)\n\n    console.log\n      Switching backend from snarky to sparky\n\n      at initializeBindings (dist/node/bindings.js:24:13)\n\n    console.log\n      Loading Sparky backend...\n\n      at initializeBindings (dist/node/bindings.js:40:15)\n\n    console.log\n      OCaml backend bridge initialized: false\n\n      at initializeBindings (dist/node/bindings.js:51:15)\n\n    console.log\n      ✓ Sparky backend loaded\n\n      at initializeBindings (dist/node/bindings.js:64:15)\n\n    console.log\n      Switching backend from sparky to snarky\n\n      at initializeBindings (dist/node/bindings.js:24:13)\n\n    console.log\n      Loading Snarky backend...\n\n      at initializeBindings (dist/node/bindings.js:67:15)\n\n    console.log\n      ✓ Snarky backend loaded\n\n      at initializeBindings (dist/node/bindings.js:84:15)\n\n    console.log\n      Switching backend from snarky to sparky\n\n      at initializeBindings (dist/node/bindings.js:24:13)\n\n    console.log\n      Loading Sparky backend...\n\n      at initializeBindings (dist/node/bindings.js:40:15)\n\n    console.log\n      OCaml backend bridge initialized: false\n\n      at initializeBindings (dist/node/bindings.js:51:15)\n\n    console.log\n      ✓ Sparky backend loaded\n\n      at initializeBindings (dist/node/bindings.js:64:15)\n\n    console.log\n      Switching backend from sparky to snarky\n\n      at initializeBindings (dist/node/bindings.js:24:13)\n\n    console.log\n      Loading Snarky backend...\n\n      at initializeBindings (dist/node/bindings.js:67:15)\n\n    console.log\n      ✓ Snarky backend loaded\n\n      at initializeBindings (dist/node/bindings.js:84:15)\n\n    console.log\n      Switching backend from snarky to sparky\n\n      at initializeBindings (dist/node/bindings.js:24:13)\n\n    console.log\n      Loading Sparky backend...\n\n      at initializeBindings (dist/node/bindings.js:40:15)\n\n    console.log\n      OCaml backend bridge initialized: false\n\n      at initializeBindings (dist/node/bindings.js:51:15)\n\n    console.log\n      ✓ Sparky backend loaded\n\n      at initializeBindings (dist/node/bindings.js:64:15)\n\n    console.log\n      Switching backend from sparky to snarky\n\n      at initializeBindings (dist/node/bindings.js:24:13)\n\n    console.log\n      Loading Snarky backend...\n\n      at initializeBindings (dist/node/bindings.js:67:15)\n\n    console.log\n      ✓ Snarky backend loaded\n\n      at initializeBindings (dist/node/bindings.js:84:15)\n\n    console.log\n      Switching backend from snarky to sparky\n\n      at initializeBindings (dist/node/bindings.js:24:13)\n\n    console.log\n      Loading Sparky backend...\n\n      at initializeBindings (dist/node/bindings.js:40:15)\n\n    console.log\n      OCaml backend bridge initialized: false\n\n      at initializeBindings (dist/node/bindings.js:51:15)\n\n    console.log\n      ✓ Sparky backend loaded\n\n      at initializeBindings (dist/node/bindings.js:64:15)\n\n    console.log\n      Switching backend from sparky to snarky\n\n      at initializeBindings (dist/node/bindings.js:24:13)\n\n    console.log\n      Loading Snarky backend...\n\n      at initializeBindings (dist/node/bindings.js:67:15)\n\n    console.log\n      ✓ Snarky backend loaded\n\n      at initializeBindings (dist/node/bindings.js:84:15)\n\n    console.log\n      Switching backend from snarky to sparky\n\n      at initializeBindings (dist/node/bindings.js:24:13)\n\n    console.log\n      Loading Sparky backend...\n\n      at initializeBindings (dist/node/bindings.js:40:15)\n\n    console.log\n      OCaml backend bridge initialized: false\n\n      at initializeBindings (dist/node/bindings.js:51:15)\n\n    console.log\n      ✓ Sparky backend loaded\n\n      at initializeBindings (dist/node/bindings.js:64:15)\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:967 Converting Add(Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(3)))), Scale(FieldElement(BigInt([11037532056220336128, 2469829653914515739, 0, 4611686018427387904])), Var(VarId(4)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n      at SnarkyRunCompat.getConstraintSystem (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3158:26)\n      at dist/node/bindings/sparky-adapter.js:296:35\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n      at SnarkyRunCompat.getConstraintSystem (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3158:26)\n      at dist/node/bindings/sparky-adapter.js:296:35\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:967 Converting Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(3)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n      at SnarkyRunCompat.getConstraintSystem (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3158:26)\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n      at SnarkyRunCompat.getConstraintSystem (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3158:26)\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:967 Converting Add(Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(3)))), Scale(FieldElement(BigInt([11037532056220336128, 2469829653914515739, 0, 4611686018427387904])), Var(VarId(4)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:331657)\n      at SnarkyConstraintSystemCompat.toJson (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:2252:26)\n      at Object.toJson (dist/node/bindings/sparky-adapter.js:424:48)\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:331657)\n      at SnarkyConstraintSystemCompat.toJson (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:2252:26)\n      at Object.toJson (dist/node/bindings/sparky-adapter.js:424:48)\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:967 Converting Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(3)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:331657)\n      at SnarkyConstraintSystemCompat.toJson (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:2252:26)\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:331657)\n      at SnarkyConstraintSystemCompat.toJson (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:2252:26)\n\n    console.log\n      Switching backend from sparky to snarky\n\n      at initializeBindings (dist/node/bindings.js:24:13)\n\n    console.log\n      Loading Snarky backend...\n\n      at initializeBindings (dist/node/bindings.js:67:15)\n\n    console.log\n      ✓ Snarky backend loaded\n\n      at initializeBindings (dist/node/bindings.js:84:15)\n\n    console.log\n      Switching backend from snarky to sparky\n\n      at initializeBindings (dist/node/bindings.js:24:13)\n\n    console.log\n      Loading Sparky backend...\n\n      at initializeBindings (dist/node/bindings.js:40:15)\n\n    console.log\n      OCaml backend bridge initialized: false\n\n      at initializeBindings (dist/node/bindings.js:51:15)\n\n    console.log\n      ✓ Sparky backend loaded\n\n      at initializeBindings (dist/node/bindings.js:64:15)\n\n    console.log\n      Performance ratio (Sparky/Snarky): 0.64x\n\n      at Object.<anonymous> (src/test/integration/sparky-backend-integration.test.ts:477:15)\n\n    console.log\n      Switching backend from sparky to snarky\n\n      at initializeBindings (dist/node/bindings.js:24:13)\n\n    console.log\n      Loading Snarky backend...\n\n      at initializeBindings (dist/node/bindings.js:67:15)\n\n    console.log\n      ✓ Snarky backend loaded\n\n      at initializeBindings (dist/node/bindings.js:84:15)\n\n    console.log\n      Switching backend from snarky to sparky\n\n      at initializeBindings (dist/node/bindings.js:24:13)\n\n    console.log\n      Loading Sparky backend...\n\n      at initializeBindings (dist/node/bindings.js:40:15)\n\n    console.log\n      OCaml backend bridge initialized: false\n\n      at initializeBindings (dist/node/bindings.js:51:15)\n\n    console.log\n      ✓ Sparky backend loaded\n\n      at initializeBindings (dist/node/bindings.js:64:15)\n\n    console.log\n      Poseidon performance ratio (Sparky/Snarky): 1.18x\n\n      at Object.<anonymous> (src/test/integration/sparky-backend-integration.test.ts:502:15)\n\n    console.log\n      Switching backend from sparky to snarky\n\n      at initializeBindings (dist/node/bindings.js:24:13)\n\n    console.log\n      Loading Snarky backend...\n\n      at initializeBindings (dist/node/bindings.js:67:15)\n\n    console.log\n      ✓ Snarky backend loaded\n\n      at initializeBindings (dist/node/bindings.js:84:15)\n\n    console.log\n      Switching backend from snarky to sparky\n\n      at initializeBindings (dist/node/bindings.js:24:13)\n\n    console.log\n      Loading Sparky backend...\n\n      at initializeBindings (dist/node/bindings.js:40:15)\n\n    console.log\n      OCaml backend bridge initialized: false\n\n      at initializeBindings (dist/node/bindings.js:51:15)\n\n    console.log\n      ✓ Sparky backend loaded\n\n      at initializeBindings (dist/node/bindings.js:64:15)\n\n    console.log\n      Switching backend from sparky to snarky\n\n      at initializeBindings (dist/node/bindings.js:24:13)\n\n    console.log\n      Loading Snarky backend...\n\n      at initializeBindings (dist/node/bindings.js:67:15)\n\n    console.log\n      ✓ Snarky backend loaded\n\n      at initializeBindings (dist/node/bindings.js:84:15)\n\n  ● Sparky Backend Integration Tests › Field Operations › should generate identical constraints for field operations\n\n    thrown: \"Constant FieldVar must have exactly 2 elements\"\n\n      121 |     });\n      122 |\n    > 123 |     it('should generate identical constraints for field operations', async () => {\n          |     ^\n      124 |       const program = ZkProgram({\n      125 |         name: 'FieldOperations',\n      126 |         publicInput: Field,\n\n      at src/test/integration/sparky-backend-integration.test.ts:123:5\n      at src/test/integration/sparky-backend-integration.test.ts:66:3\n      at src/test/integration/sparky-backend-integration.test.ts:55:1\n\n  ● Sparky Backend Integration Tests › Poseidon Hash › should produce identical Poseidon hashes\n\n    poseidon.sponge.create not yet implemented in Sparky adapter\n\n      1176 |       create(isChecked) {\n      1177 |         // TODO: Implement sponge construction when available in Sparky\n    > 1178 |         throw new Error('poseidon.sponge.create not yet implemented in Sparky adapter');\n           |               ^\n      1179 |       },\n      1180 |       \n      1181 |       absorb(sponge, field) {\n\n      at Object.create (dist/node/bindings/sparky-adapter.js:1178:15)\n      at new Sponge (src/lib/provable/crypto/poseidon.ts:45:43)\n      at src/test/integration/sparky-backend-integration.test.ts:185:24\n      at runWithBothBackends (src/test/integration/sparky-backend-integration.test.ts:27:30)\n      at Object.<anonymous> (src/test/integration/sparky-backend-integration.test.ts:180:23)\n\n  ● Sparky Backend Integration Tests › Poseidon Hash › should handle Poseidon sponge construction identically\n\n    poseidon.sponge.create not yet implemented in Sparky adapter\n\n      1176 |       create(isChecked) {\n      1177 |         // TODO: Implement sponge construction when available in Sparky\n    > 1178 |         throw new Error('poseidon.sponge.create not yet implemented in Sparky adapter');\n           |               ^\n      1179 |       },\n      1180 |       \n      1181 |       absorb(sponge, field) {\n\n      at Object.create (dist/node/bindings/sparky-adapter.js:1178:15)\n      at new Sponge (src/lib/provable/crypto/poseidon.ts:45:43)\n      at src/test/integration/sparky-backend-integration.test.ts:202:24\n      at runWithBothBackends (src/test/integration/sparky-backend-integration.test.ts:27:30)\n      at Object.<anonymous> (src/test/integration/sparky-backend-integration.test.ts:201:23)\n\n  ● Sparky Backend Integration Tests › Elliptic Curve Operations › should generate identical constraints for EC operations\n\n    x.toConstant() was called on a variable field element `x` in provable code.\n    This is not supported, because variables represent an abstract computation, \n    which only carries actual values during proving, but not during compiling.\n\n    Also, reading out JS values means that whatever you're doing with those values will no longer be\n    linked to the original variable in the proof, which makes this pattern prone to security holes.\n\n    You can check whether your field element is a variable or a constant by using x.isConstant().\n\n    To inspect values for debugging, use Provable.log(x). For more advanced use cases,\n    there is `Provable.asProver(() => { ... })` which allows you to use x.toConstant() inside the callback.\n    Warning: whatever happens inside asProver() will not be part of the zk proof.\n\n      at toConstantField (o1js2/src/lib/provable/field.ts:1182:9)\n      at toConstant (o1js2/src/lib/provable/field.ts:1160:10)\n      at Field.toConstant (o1js2/src/lib/provable/field.ts:149:12)\n      at src/lib/provable/provable.ts:293:41\n          at Array.map (<anonymous>)\n      at Object.toConstant (o1js2/src/lib/provable/provable.ts:293:28)\n      at Scalar.toConstant (o1js2/src/lib/provable/scalar.ts:90:21)\n      at Scalar.toBigInt (o1js2/src/lib/provable/scalar.ts:97:36)\n      at method (o1js2/src/test/integration/sparky-backend-integration.test.ts:254:53)\n      at src/lib/proof-system/zkprogram.ts:841:14\n      at Object.constraintSystem (o1js2/src/lib/provable/core/provable-context.ts:117:11)\n      at analyzeMethod (o1js2/src/lib/proof-system/zkprogram.ts:834:14)\n      at analyzeMethods (o1js2/src/lib/proof-system/zkprogram.ts:349:45)\n      at Object.compile (o1js2/src/lib/proof-system/zkprogram.ts:390:25)\n      at src/test/integration/sparky-backend-integration.test.ts:262:37\n      at runWithBothBackends (o1js2/src/test/integration/sparky-backend-integration.test.ts:23:24)\n      at Object.<anonymous> (o1js2/src/test/integration/sparky-backend-integration.test.ts:261:23)\n\n  ● Sparky Backend Integration Tests › Range Checks › should handle range checks identically\n\n    expect(received).toEqual(expected) // deep equality\n\n    Expected: false\n    Received: true\n\n      49 |     }\n      50 |   } else {\n    > 51 |     expect(sparky).toEqual(snarky);\n         |                    ^\n      52 |   }\n      53 | }\n      54 |\n\n      at expectEqualResults (src/test/integration/sparky-backend-integration.test.ts:51:20)\n      at expectEqualResults (src/test/integration/sparky-backend-integration.test.ts:48:7)\n      at Object.<anonymous> (src/test/integration/sparky-backend-integration.test.ts:310:7)\n\n  ● Sparky Backend Integration Tests › Foreign Field Operations › should generate identical constraints for foreign field operations\n\n    thrown: \"Constant FieldVar must have exactly 2 elements\"\n\n      341 |     });\n      342 |\n    > 343 |     it('should generate identical constraints for foreign field operations', async () => {\n          |     ^\n      344 |       const secp256k1 = createForeignField(\n      345 |         0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2fn\n      346 |       );\n\n      at src/test/integration/sparky-backend-integration.test.ts:343:5\n      at src/test/integration/sparky-backend-integration.test.ts:314:3\n      at src/test/integration/sparky-backend-integration.test.ts:55:1\n\n  ● Sparky Backend Integration Tests › Constraint System Analysis › should produce identical constraint system metadata\n\n    thrown: \"Variable not found: VariableNotFound(VarId(0))\"\n\n      410 |\n      411 |   describe('Constraint System Analysis', () => {\n    > 412 |     it('should produce identical constraint system metadata', async () => {\n          |     ^\n      413 |       const program = ZkProgram({\n      414 |         name: 'ConstraintAnalysis',\n      415 |         publicInput: Field,\n\n      at src/test/integration/sparky-backend-integration.test.ts:412:5\n      at src/test/integration/sparky-backend-integration.test.ts:411:3\n      at src/test/integration/sparky-backend-integration.test.ts:55:1\n\n  ● Sparky Backend Integration Tests › Error Handling › should handle errors identically\n\n    expect(received).toEqual(expected) // deep equality\n\n    Expected: true\n    Received: false\n\n      49 |     }\n      50 |   } else {\n    > 51 |     expect(sparky).toEqual(snarky);\n         |                    ^\n      52 |   }\n      53 | }\n      54 |\n\n      at expectEqualResults (src/test/integration/sparky-backend-integration.test.ts:51:20)\n      at expectEqualResults (src/test/integration/sparky-backend-integration.test.ts:48:7)\n      at Object.<anonymous> (src/test/integration/sparky-backend-integration.test.ts:542:7)\n\n  ● Sparky Backend Integration Tests › Complete zkApp Test › should compile and prove a complete zkApp identically\n\n    x.toBigInt() was called on a variable field element `x` in provable code.\n    This is not supported, because variables represent an abstract computation, \n    which only carries actual values during proving, but not during compiling.\n\n    Also, reading out JS values means that whatever you're doing with those values will no longer be\n    linked to the original variable in the proof, which makes this pattern prone to security holes.\n\n    You can check whether your field element is a variable or a constant by using x.isConstant().\n\n    To inspect values for debugging, use Provable.log(x). For more advanced use cases,\n    there is `Provable.asProver(() => { ... })` which allows you to use x.toBigInt() inside the callback.\n    Warning: whatever happens inside asProver() will not be part of the zk proof.\n\n      at toConstantField (o1js2/src/lib/provable/field.ts:1182:9)\n      at toConstant (o1js2/src/lib/provable/field.ts:1160:10)\n      at Field.toBigInt (o1js2/src/lib/provable/field.ts:166:13)\n      at method (o1js2/src/test/integration/sparky-backend-integration.test.ts:571:56)\n      at src/lib/proof-system/zkprogram.ts:841:14\n      at Object.constraintSystem (o1js2/src/lib/provable/core/provable-context.ts:117:11)\n      at analyzeMethod (o1js2/src/lib/proof-system/zkprogram.ts:834:14)\n      at analyzeMethods (o1js2/src/lib/proof-system/zkprogram.ts:349:45)\n      at Object.compile (o1js2/src/lib/proof-system/zkprogram.ts:390:25)\n      at src/test/integration/sparky-backend-integration.test.ts:581:37\n      at runWithBothBackends (o1js2/src/test/integration/sparky-backend-integration.test.ts:23:24)\n      at Object.<anonymous> (o1js2/src/test/integration/sparky-backend-integration.test.ts:580:23)\n\nFAIL src/test/integration/sparky-vk-comparison.test.ts (35.584 s)\n  ● Console\n\n    console.log\n      Loading Snarky backend...\n\n      at initializeBindings (dist/node/bindings.js:67:15)\n\n    console.log\n      ✓ Snarky backend loaded\n\n      at initializeBindings (dist/node/bindings.js:84:15)\n\n    console.log\n      Compiling simple with Snarky...\n\n      at Object.<anonymous> (src/test/integration/sparky-vk-comparison.test.ts:56:17)\n\n    console.log\n      Switching backend from snarky to sparky\n\n      at initializeBindings (dist/node/bindings.js:24:13)\n\n    console.log\n      Loading Sparky backend...\n\n      at initializeBindings (dist/node/bindings.js:40:15)\n\n    console.log\n      OCaml backend bridge initialized: false\n\n      at initializeBindings (dist/node/bindings.js:51:15)\n\n    console.log\n      ✓ Sparky backend loaded\n\n      at initializeBindings (dist/node/bindings.js:64:15)\n\n    console.log\n      Compiling simple with Sparky...\n\n      at Object.<anonymous> (src/test/integration/sparky-vk-comparison.test.ts:62:17)\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:967 Converting Add(Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([2, 0, 0, 0])), Var(VarId(0)))), Scale(FieldElement(BigInt([11037532056220336128, 2469829653914515739, 0, 4611686018427387904])), Var(VarId(1)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n      at SnarkyRunCompat.getConstraintSystem (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3158:26)\n      at dist/node/bindings/sparky-adapter.js:296:35\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n      at SnarkyRunCompat.getConstraintSystem (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3158:26)\n      at dist/node/bindings/sparky-adapter.js:296:35\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:967 Converting Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([2, 0, 0, 0])), Var(VarId(0)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n      at SnarkyRunCompat.getConstraintSystem (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3158:26)\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n      at SnarkyRunCompat.getConstraintSystem (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3158:26)\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:967 Converting Add(Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([2, 0, 0, 0])), Var(VarId(0)))), Scale(FieldElement(BigInt([11037532056220336128, 2469829653914515739, 0, 4611686018427387904])), Var(VarId(1)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:331657)\n      at SnarkyConstraintSystemCompat.toJson (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:2252:26)\n      at Object.toJson (dist/node/bindings/sparky-adapter.js:424:48)\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:331657)\n      at SnarkyConstraintSystemCompat.toJson (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:2252:26)\n      at Object.toJson (dist/node/bindings/sparky-adapter.js:424:48)\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:967 Converting Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([2, 0, 0, 0])), Var(VarId(0)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:331657)\n      at SnarkyConstraintSystemCompat.toJson (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:2252:26)\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:331657)\n      at SnarkyConstraintSystemCompat.toJson (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:2252:26)\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:967 Converting Add(Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([2, 0, 0, 0])), Var(VarId(0)))), Scale(FieldElement(BigInt([11037532056220336128, 2469829653914515739, 0, 4611686018427387904])), Var(VarId(1)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n      at SnarkyRunCompat.getConstraintSystem (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3158:26)\n      at Object.getAccumulatedConstraints (dist/node/bindings/sparky-adapter.js:1295:44)\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n      at SnarkyRunCompat.getConstraintSystem (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3158:26)\n      at Object.getAccumulatedConstraints (dist/node/bindings/sparky-adapter.js:1295:44)\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:967 Converting Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([2, 0, 0, 0])), Var(VarId(0)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n      at SnarkyRunCompat.getConstraintSystem (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3158:26)\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n      at SnarkyRunCompat.getConstraintSystem (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3158:26)\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:967 Converting Add(Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([2, 0, 0, 0])), Var(VarId(0)))), Scale(FieldElement(BigInt([11037532056220336128, 2469829653914515739, 0, 4611686018427387904])), Var(VarId(1)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n      at SnarkyRunCompat.getConstraintSystem (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3158:26)\n      at Object.getAccumulatedConstraints (dist/node/bindings/sparky-adapter.js:1295:44)\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n      at SnarkyRunCompat.getConstraintSystem (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3158:26)\n      at Object.getAccumulatedConstraints (dist/node/bindings/sparky-adapter.js:1295:44)\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:967 Converting Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([2, 0, 0, 0])), Var(VarId(0)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n      at SnarkyRunCompat.getConstraintSystem (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3158:26)\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n      at SnarkyRunCompat.getConstraintSystem (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3158:26)\n\n    console.log\n      simple VK comparison:\n\n      at Object.<anonymous> (src/test/integration/sparky-vk-comparison.test.ts:67:17)\n\n    console.log\n        Snarky hash: 64014453646716354482...\n\n      at Object.<anonymous> (src/test/integration/sparky-vk-comparison.test.ts:68:17)\n\n    console.log\n        Sparky hash: 97625945134602330332...\n\n      at Object.<anonymous> (src/test/integration/sparky-vk-comparison.test.ts:69:17)\n\n    console.log\n        Data length match: true\n\n      at Object.<anonymous> (src/test/integration/sparky-vk-comparison.test.ts:70:17)\n\n    console.log\n        Data differs at index: 601\n\n      at Object.<anonymous> (src/test/integration/sparky-vk-comparison.test.ts:81:19)\n\n    console.log\n        ❌ VK MISMATCH - This is the core issue preventing Sparky/Snarky compatibility\n\n      at Object.<anonymous> (src/test/integration/sparky-vk-comparison.test.ts:88:19)\n\n    console.log\n      Switching backend from sparky to snarky\n\n      at initializeBindings (dist/node/bindings.js:24:13)\n\n    console.log\n      Loading Snarky backend...\n\n      at initializeBindings (dist/node/bindings.js:67:15)\n\n    console.log\n      ✓ Snarky backend loaded\n\n      at initializeBindings (dist/node/bindings.js:84:15)\n\n    console.log\n      Compiling linearCombination with Snarky...\n\n      at Object.<anonymous> (src/test/integration/sparky-vk-comparison.test.ts:56:17)\n\n    console.log\n      Switching backend from snarky to sparky\n\n      at initializeBindings (dist/node/bindings.js:24:13)\n\n    console.log\n      Loading Sparky backend...\n\n      at initializeBindings (dist/node/bindings.js:40:15)\n\n    console.log\n      OCaml backend bridge initialized: false\n\n      at initializeBindings (dist/node/bindings.js:51:15)\n\n    console.log\n      ✓ Sparky backend loaded\n\n      at initializeBindings (dist/node/bindings.js:64:15)\n\n    console.log\n      Compiling linearCombination with Sparky...\n\n      at Object.<anonymous> (src/test/integration/sparky-vk-comparison.test.ts:62:17)\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:967 Converting Add(Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([6, 0, 0, 0])), Var(VarId(0)))), Scale(FieldElement(BigInt([11037532056220336128, 2469829653914515739, 0, 4611686018427387904])), Var(VarId(1)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n      at SnarkyRunCompat.getConstraintSystem (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3158:26)\n      at dist/node/bindings/sparky-adapter.js:296:35\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n      at SnarkyRunCompat.getConstraintSystem (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3158:26)\n      at dist/node/bindings/sparky-adapter.js:296:35\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:967 Converting Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([6, 0, 0, 0])), Var(VarId(0)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n      at SnarkyRunCompat.getConstraintSystem (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3158:26)\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n      at SnarkyRunCompat.getConstraintSystem (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3158:26)\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:967 Converting Add(Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([6, 0, 0, 0])), Var(VarId(0)))), Scale(FieldElement(BigInt([11037532056220336128, 2469829653914515739, 0, 4611686018427387904])), Var(VarId(1)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:331657)\n      at SnarkyConstraintSystemCompat.toJson (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:2252:26)\n      at Object.toJson (dist/node/bindings/sparky-adapter.js:424:48)\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:331657)\n      at SnarkyConstraintSystemCompat.toJson (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:2252:26)\n      at Object.toJson (dist/node/bindings/sparky-adapter.js:424:48)\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:967 Converting Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([6, 0, 0, 0])), Var(VarId(0)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:331657)\n      at SnarkyConstraintSystemCompat.toJson (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:2252:26)\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:331657)\n      at SnarkyConstraintSystemCompat.toJson (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:2252:26)\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:967 Converting Add(Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([6, 0, 0, 0])), Var(VarId(0)))), Scale(FieldElement(BigInt([11037532056220336128, 2469829653914515739, 0, 4611686018427387904])), Var(VarId(1)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n      at SnarkyRunCompat.getConstraintSystem (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3158:26)\n      at Object.getAccumulatedConstraints (dist/node/bindings/sparky-adapter.js:1295:44)\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n      at SnarkyRunCompat.getConstraintSystem (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3158:26)\n      at Object.getAccumulatedConstraints (dist/node/bindings/sparky-adapter.js:1295:44)\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:967 Converting Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([6, 0, 0, 0])), Var(VarId(0)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n      at SnarkyRunCompat.getConstraintSystem (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3158:26)\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n      at SnarkyRunCompat.getConstraintSystem (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3158:26)\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:967 Converting Add(Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([6, 0, 0, 0])), Var(VarId(0)))), Scale(FieldElement(BigInt([11037532056220336128, 2469829653914515739, 0, 4611686018427387904])), Var(VarId(1)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n      at SnarkyRunCompat.getConstraintSystem (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3158:26)\n      at Object.getAccumulatedConstraints (dist/node/bindings/sparky-adapter.js:1295:44)\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n      at SnarkyRunCompat.getConstraintSystem (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3158:26)\n      at Object.getAccumulatedConstraints (dist/node/bindings/sparky-adapter.js:1295:44)\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:967 Converting Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([6, 0, 0, 0])), Var(VarId(0)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n      at SnarkyRunCompat.getConstraintSystem (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3158:26)\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n      at SnarkyRunCompat.getConstraintSystem (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3158:26)\n\n    console.log\n      linearCombination VK comparison:\n\n      at Object.<anonymous> (src/test/integration/sparky-vk-comparison.test.ts:67:17)\n\n    console.log\n        Snarky hash: 77212375661735525858...\n\n      at Object.<anonymous> (src/test/integration/sparky-vk-comparison.test.ts:68:17)\n\n    console.log\n        Sparky hash: 97625945134602330332...\n\n      at Object.<anonymous> (src/test/integration/sparky-vk-comparison.test.ts:69:17)\n\n    console.log\n        Data length match: true\n\n      at Object.<anonymous> (src/test/integration/sparky-vk-comparison.test.ts:70:17)\n\n    console.log\n        Data differs at index: 601\n\n      at Object.<anonymous> (src/test/integration/sparky-vk-comparison.test.ts:81:19)\n\n    console.log\n        ❌ VK MISMATCH - This is the core issue preventing Sparky/Snarky compatibility\n\n      at Object.<anonymous> (src/test/integration/sparky-vk-comparison.test.ts:88:19)\n\n    console.log\n      Switching backend from sparky to snarky\n\n      at initializeBindings (dist/node/bindings.js:24:13)\n\n    console.log\n      Loading Snarky backend...\n\n      at initializeBindings (dist/node/bindings.js:67:15)\n\n    console.log\n      ✓ Snarky backend loaded\n\n      at initializeBindings (dist/node/bindings.js:84:15)\n\n    console.log\n      Compiling complex with Snarky...\n\n      at Object.<anonymous> (src/test/integration/sparky-vk-comparison.test.ts:56:17)\n\n    console.log\n      Switching backend from snarky to sparky\n\n      at initializeBindings (dist/node/bindings.js:24:13)\n\n    console.log\n      Loading Sparky backend...\n\n      at initializeBindings (dist/node/bindings.js:40:15)\n\n    console.log\n      OCaml backend bridge initialized: false\n\n      at initializeBindings (dist/node/bindings.js:51:15)\n\n    console.log\n      ✓ Sparky backend loaded\n\n      at initializeBindings (dist/node/bindings.js:64:15)\n\n    console.log\n      Compiling complex with Sparky...\n\n      at Object.<anonymous> (src/test/integration/sparky-vk-comparison.test.ts:62:17)\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:967 Converting Add(Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(4)))), Scale(FieldElement(BigInt([11037532056220336128, 2469829653914515739, 0, 4611686018427387904])), Var(VarId(5)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n      at SnarkyRunCompat.getConstraintSystem (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3158:26)\n      at dist/node/bindings/sparky-adapter.js:296:35\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n      at SnarkyRunCompat.getConstraintSystem (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3158:26)\n      at dist/node/bindings/sparky-adapter.js:296:35\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:967 Converting Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(4)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n      at SnarkyRunCompat.getConstraintSystem (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3158:26)\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n      at SnarkyRunCompat.getConstraintSystem (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3158:26)\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:967 Converting Add(Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(6)))), Scale(FieldElement(BigInt([11037532056220336128, 2469829653914515739, 0, 4611686018427387904])), Var(VarId(7)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n      at SnarkyRunCompat.getConstraintSystem (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3158:26)\n      at dist/node/bindings/sparky-adapter.js:296:35\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n      at SnarkyRunCompat.getConstraintSystem (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3158:26)\n      at dist/node/bindings/sparky-adapter.js:296:35\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:967 Converting Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(6)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n      at SnarkyRunCompat.getConstraintSystem (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3158:26)\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n      at SnarkyRunCompat.getConstraintSystem (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3158:26)\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:967 Converting Add(Add(Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(4)))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(6)))), Scale(FieldElement(BigInt([11037532056220336128, 2469829653914515739, 0, 4611686018427387904])), Var(VarId(8)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n      at SnarkyRunCompat.getConstraintSystem (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3158:26)\n      at dist/node/bindings/sparky-adapter.js:296:35\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n      at SnarkyRunCompat.getConstraintSystem (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3158:26)\n      at dist/node/bindings/sparky-adapter.js:296:35\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:967 Converting Add(Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(4)))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(6)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n      at SnarkyRunCompat.getConstraintSystem (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3158:26)\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n      at SnarkyRunCompat.getConstraintSystem (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3158:26)\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:967 Converting Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(4)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:967 Converting Add(Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(4)))), Scale(FieldElement(BigInt([11037532056220336128, 2469829653914515739, 0, 4611686018427387904])), Var(VarId(5)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:331657)\n      at SnarkyConstraintSystemCompat.toJson (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:2252:26)\n      at Object.toJson (dist/node/bindings/sparky-adapter.js:424:48)\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:331657)\n      at SnarkyConstraintSystemCompat.toJson (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:2252:26)\n      at Object.toJson (dist/node/bindings/sparky-adapter.js:424:48)\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:967 Converting Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(4)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:331657)\n      at SnarkyConstraintSystemCompat.toJson (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:2252:26)\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:331657)\n      at SnarkyConstraintSystemCompat.toJson (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:2252:26)\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:967 Converting Add(Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(6)))), Scale(FieldElement(BigInt([11037532056220336128, 2469829653914515739, 0, 4611686018427387904])), Var(VarId(7)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:331657)\n      at SnarkyConstraintSystemCompat.toJson (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:2252:26)\n      at Object.toJson (dist/node/bindings/sparky-adapter.js:424:48)\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:331657)\n      at SnarkyConstraintSystemCompat.toJson (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:2252:26)\n      at Object.toJson (dist/node/bindings/sparky-adapter.js:424:48)\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:967 Converting Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(6)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:331657)\n      at SnarkyConstraintSystemCompat.toJson (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:2252:26)\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:331657)\n      at SnarkyConstraintSystemCompat.toJson (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:2252:26)\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:967 Converting Add(Add(Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(4)))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(6)))), Scale(FieldElement(BigInt([11037532056220336128, 2469829653914515739, 0, 4611686018427387904])), Var(VarId(8)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:331657)\n      at SnarkyConstraintSystemCompat.toJson (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:2252:26)\n      at Object.toJson (dist/node/bindings/sparky-adapter.js:424:48)\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:331657)\n      at SnarkyConstraintSystemCompat.toJson (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:2252:26)\n      at Object.toJson (dist/node/bindings/sparky-adapter.js:424:48)\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:967 Converting Add(Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(4)))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(6)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:331657)\n      at SnarkyConstraintSystemCompat.toJson (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:2252:26)\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:331657)\n      at SnarkyConstraintSystemCompat.toJson (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:2252:26)\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:967 Converting Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(4)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:331657)\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:331657)\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:967 Converting Add(Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(3)))), Scale(FieldElement(BigInt([11037532056220336128, 2469829653914515739, 0, 4611686018427387904])), Var(VarId(4)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n      at SnarkyRunCompat.getConstraintSystem (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3158:26)\n      at Object.getAccumulatedConstraints (dist/node/bindings/sparky-adapter.js:1295:44)\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n      at SnarkyRunCompat.getConstraintSystem (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3158:26)\n      at Object.getAccumulatedConstraints (dist/node/bindings/sparky-adapter.js:1295:44)\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:967 Converting Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(3)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n      at SnarkyRunCompat.getConstraintSystem (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3158:26)\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n      at SnarkyRunCompat.getConstraintSystem (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3158:26)\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:967 Converting Add(Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(5)))), Scale(FieldElement(BigInt([11037532056220336128, 2469829653914515739, 0, 4611686018427387904])), Var(VarId(6)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n      at SnarkyRunCompat.getConstraintSystem (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3158:26)\n      at Object.getAccumulatedConstraints (dist/node/bindings/sparky-adapter.js:1295:44)\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n      at SnarkyRunCompat.getConstraintSystem (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3158:26)\n      at Object.getAccumulatedConstraints (dist/node/bindings/sparky-adapter.js:1295:44)\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:967 Converting Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(5)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n      at SnarkyRunCompat.getConstraintSystem (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3158:26)\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n      at SnarkyRunCompat.getConstraintSystem (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3158:26)\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:967 Converting Add(Add(Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(3)))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(5)))), Scale(FieldElement(BigInt([11037532056220336128, 2469829653914515739, 0, 4611686018427387904])), Var(VarId(7)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n      at SnarkyRunCompat.getConstraintSystem (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3158:26)\n      at Object.getAccumulatedConstraints (dist/node/bindings/sparky-adapter.js:1295:44)\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n      at SnarkyRunCompat.getConstraintSystem (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3158:26)\n      at Object.getAccumulatedConstraints (dist/node/bindings/sparky-adapter.js:1295:44)\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:967 Converting Add(Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(3)))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(5)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n      at SnarkyRunCompat.getConstraintSystem (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3158:26)\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n      at SnarkyRunCompat.getConstraintSystem (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3158:26)\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:967 Converting Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(3)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:967 Converting Add(Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(3)))), Scale(FieldElement(BigInt([11037532056220336128, 2469829653914515739, 0, 4611686018427387904])), Var(VarId(4)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n      at SnarkyRunCompat.getConstraintSystem (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3158:26)\n      at Object.getAccumulatedConstraints (dist/node/bindings/sparky-adapter.js:1295:44)\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n      at SnarkyRunCompat.getConstraintSystem (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3158:26)\n      at Object.getAccumulatedConstraints (dist/node/bindings/sparky-adapter.js:1295:44)\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:967 Converting Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(3)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n      at SnarkyRunCompat.getConstraintSystem (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3158:26)\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n      at SnarkyRunCompat.getConstraintSystem (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3158:26)\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:967 Converting Add(Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(5)))), Scale(FieldElement(BigInt([11037532056220336128, 2469829653914515739, 0, 4611686018427387904])), Var(VarId(6)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n      at SnarkyRunCompat.getConstraintSystem (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3158:26)\n      at Object.getAccumulatedConstraints (dist/node/bindings/sparky-adapter.js:1295:44)\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n      at SnarkyRunCompat.getConstraintSystem (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3158:26)\n      at Object.getAccumulatedConstraints (dist/node/bindings/sparky-adapter.js:1295:44)\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:967 Converting Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(5)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n      at SnarkyRunCompat.getConstraintSystem (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3158:26)\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n      at SnarkyRunCompat.getConstraintSystem (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3158:26)\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:967 Converting Add(Add(Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(3)))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(5)))), Scale(FieldElement(BigInt([11037532056220336128, 2469829653914515739, 0, 4611686018427387904])), Var(VarId(7)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n      at SnarkyRunCompat.getConstraintSystem (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3158:26)\n      at Object.getAccumulatedConstraints (dist/node/bindings/sparky-adapter.js:1295:44)\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n      at SnarkyRunCompat.getConstraintSystem (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3158:26)\n      at Object.getAccumulatedConstraints (dist/node/bindings/sparky-adapter.js:1295:44)\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:967 Converting Add(Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(3)))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(5)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n      at SnarkyRunCompat.getConstraintSystem (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3158:26)\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n      at SnarkyRunCompat.getConstraintSystem (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3158:26)\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:967 Converting Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(3)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n\n    console.log\n      complex VK comparison:\n\n      at Object.<anonymous> (src/test/integration/sparky-vk-comparison.test.ts:67:17)\n\n    console.log\n        Snarky hash: 95655787525658906285...\n\n      at Object.<anonymous> (src/test/integration/sparky-vk-comparison.test.ts:68:17)\n\n    console.log\n        Sparky hash: 11867499267129745800...\n\n      at Object.<anonymous> (src/test/integration/sparky-vk-comparison.test.ts:69:17)\n\n    console.log\n        Data length match: true\n\n      at Object.<anonymous> (src/test/integration/sparky-vk-comparison.test.ts:70:17)\n\n    console.log\n        Data differs at index: 601\n\n      at Object.<anonymous> (src/test/integration/sparky-vk-comparison.test.ts:81:19)\n\n    console.log\n        ❌ VK MISMATCH - This is the core issue preventing Sparky/Snarky compatibility\n\n      at Object.<anonymous> (src/test/integration/sparky-vk-comparison.test.ts:88:19)\n\n    console.log\n      \n      Testing testReduction:\n\n      at Object.<anonymous> (src/test/integration/sparky-vk-comparison.test.ts:133:17)\n\n    console.log\n      Switching backend from sparky to snarky\n\n      at initializeBindings (dist/node/bindings.js:24:13)\n\n    console.log\n      Loading Snarky backend...\n\n      at initializeBindings (dist/node/bindings.js:67:15)\n\n    console.log\n      ✓ Snarky backend loaded\n\n      at initializeBindings (dist/node/bindings.js:84:15)\n\n    console.log\n        Snarky gates: [object Object]\n\n      at Object.<anonymous> (src/test/integration/sparky-vk-comparison.test.ts:137:17)\n\n    console.log\n      Switching backend from snarky to sparky\n\n      at initializeBindings (dist/node/bindings.js:24:13)\n\n    console.log\n      Loading Sparky backend...\n\n      at initializeBindings (dist/node/bindings.js:40:15)\n\n    console.log\n      OCaml backend bridge initialized: false\n\n      at initializeBindings (dist/node/bindings.js:51:15)\n\n    console.log\n      ✓ Sparky backend loaded\n\n      at initializeBindings (dist/node/bindings.js:64:15)\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:967 Converting Add(Add(Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(3)))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(4)))), Scale(FieldElement(BigInt([11037532056220336128, 2469829653914515739, 0, 4611686018427387904])), Var(VarId(6)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n      at SnarkyRunCompat.getConstraintSystem (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3158:26)\n      at dist/node/bindings/sparky-adapter.js:296:35\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n      at SnarkyRunCompat.getConstraintSystem (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3158:26)\n      at dist/node/bindings/sparky-adapter.js:296:35\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:967 Converting Add(Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(3)))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(4)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n      at SnarkyRunCompat.getConstraintSystem (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3158:26)\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n      at SnarkyRunCompat.getConstraintSystem (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3158:26)\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:967 Converting Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(3)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:967 Converting Add(Add(Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(2)))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(6)))), Scale(FieldElement(BigInt([11037532056220336128, 2469829653914515739, 0, 4611686018427387904])), Var(VarId(7)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n      at SnarkyRunCompat.getConstraintSystem (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3158:26)\n      at dist/node/bindings/sparky-adapter.js:296:35\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n      at SnarkyRunCompat.getConstraintSystem (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3158:26)\n      at dist/node/bindings/sparky-adapter.js:296:35\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:967 Converting Add(Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(2)))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(6)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n      at SnarkyRunCompat.getConstraintSystem (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3158:26)\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n      at SnarkyRunCompat.getConstraintSystem (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3158:26)\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:967 Converting Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(2)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:967 Converting Add(Add(Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(1)))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(7)))), Scale(FieldElement(BigInt([11037532056220336128, 2469829653914515739, 0, 4611686018427387904])), Var(VarId(8)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n      at SnarkyRunCompat.getConstraintSystem (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3158:26)\n      at dist/node/bindings/sparky-adapter.js:296:35\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n      at SnarkyRunCompat.getConstraintSystem (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3158:26)\n      at dist/node/bindings/sparky-adapter.js:296:35\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:967 Converting Add(Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(1)))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(7)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n      at SnarkyRunCompat.getConstraintSystem (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3158:26)\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n      at SnarkyRunCompat.getConstraintSystem (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3158:26)\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:967 Converting Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(1)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:967 Converting Add(Add(Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(0)))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(8)))), Scale(FieldElement(BigInt([11037532056220336128, 2469829653914515739, 0, 4611686018427387904])), Var(VarId(9)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n      at SnarkyRunCompat.getConstraintSystem (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3158:26)\n      at dist/node/bindings/sparky-adapter.js:296:35\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n      at SnarkyRunCompat.getConstraintSystem (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3158:26)\n      at dist/node/bindings/sparky-adapter.js:296:35\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:967 Converting Add(Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(0)))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(8)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n      at SnarkyRunCompat.getConstraintSystem (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3158:26)\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n      at SnarkyRunCompat.getConstraintSystem (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3158:26)\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:967 Converting Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(0)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:967 Converting Add(Add(Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(3)))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(4)))), Scale(FieldElement(BigInt([11037532056220336128, 2469829653914515739, 0, 4611686018427387904])), Var(VarId(6)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:331657)\n      at SnarkyConstraintSystemCompat.toJson (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:2252:26)\n      at Object.toJson (dist/node/bindings/sparky-adapter.js:424:48)\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:331657)\n      at SnarkyConstraintSystemCompat.toJson (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:2252:26)\n      at Object.toJson (dist/node/bindings/sparky-adapter.js:424:48)\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:967 Converting Add(Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(3)))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(4)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:331657)\n      at SnarkyConstraintSystemCompat.toJson (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:2252:26)\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:331657)\n      at SnarkyConstraintSystemCompat.toJson (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:2252:26)\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:967 Converting Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(3)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:331657)\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:331657)\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:967 Converting Add(Add(Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(2)))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(6)))), Scale(FieldElement(BigInt([11037532056220336128, 2469829653914515739, 0, 4611686018427387904])), Var(VarId(7)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:331657)\n      at SnarkyConstraintSystemCompat.toJson (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:2252:26)\n      at Object.toJson (dist/node/bindings/sparky-adapter.js:424:48)\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:331657)\n      at SnarkyConstraintSystemCompat.toJson (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:2252:26)\n      at Object.toJson (dist/node/bindings/sparky-adapter.js:424:48)\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:967 Converting Add(Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(2)))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(6)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:331657)\n      at SnarkyConstraintSystemCompat.toJson (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:2252:26)\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:331657)\n      at SnarkyConstraintSystemCompat.toJson (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:2252:26)\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:967 Converting Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(2)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:331657)\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:331657)\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:967 Converting Add(Add(Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(1)))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(7)))), Scale(FieldElement(BigInt([11037532056220336128, 2469829653914515739, 0, 4611686018427387904])), Var(VarId(8)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:331657)\n      at SnarkyConstraintSystemCompat.toJson (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:2252:26)\n      at Object.toJson (dist/node/bindings/sparky-adapter.js:424:48)\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:331657)\n      at SnarkyConstraintSystemCompat.toJson (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:2252:26)\n      at Object.toJson (dist/node/bindings/sparky-adapter.js:424:48)\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:967 Converting Add(Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(1)))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(7)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:331657)\n      at SnarkyConstraintSystemCompat.toJson (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:2252:26)\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:331657)\n      at SnarkyConstraintSystemCompat.toJson (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:2252:26)\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:967 Converting Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(1)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:331657)\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:331657)\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:967 Converting Add(Add(Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(0)))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(8)))), Scale(FieldElement(BigInt([11037532056220336128, 2469829653914515739, 0, 4611686018427387904])), Var(VarId(9)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:331657)\n      at SnarkyConstraintSystemCompat.toJson (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:2252:26)\n      at Object.toJson (dist/node/bindings/sparky-adapter.js:424:48)\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:331657)\n      at SnarkyConstraintSystemCompat.toJson (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:2252:26)\n      at Object.toJson (dist/node/bindings/sparky-adapter.js:424:48)\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:967 Converting Add(Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(0)))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(8)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:331657)\n      at SnarkyConstraintSystemCompat.toJson (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:2252:26)\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:331657)\n      at SnarkyConstraintSystemCompat.toJson (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:2252:26)\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:967 Converting Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(0)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:331657)\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:331657)\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:967 Converting Add(Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([5, 0, 0, 0])), Var(VarId(0)))), Scale(FieldElement(BigInt([11037532056220336128, 2469829653914515739, 0, 4611686018427387904])), Var(VarId(1)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n      at SnarkyRunCompat.getConstraintSystem (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3158:26)\n      at dist/node/bindings/sparky-adapter.js:296:35\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n      at SnarkyRunCompat.getConstraintSystem (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3158:26)\n      at dist/node/bindings/sparky-adapter.js:296:35\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:967 Converting Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([5, 0, 0, 0])), Var(VarId(0)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n      at SnarkyRunCompat.getConstraintSystem (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3158:26)\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n      at SnarkyRunCompat.getConstraintSystem (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3158:26)\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:967 Converting Add(Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([5, 0, 0, 0])), Var(VarId(0)))), Scale(FieldElement(BigInt([11037532056220336128, 2469829653914515739, 0, 4611686018427387904])), Var(VarId(1)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:331657)\n      at SnarkyConstraintSystemCompat.toJson (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:2252:26)\n      at Object.toJson (dist/node/bindings/sparky-adapter.js:424:48)\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:331657)\n      at SnarkyConstraintSystemCompat.toJson (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:2252:26)\n      at Object.toJson (dist/node/bindings/sparky-adapter.js:424:48)\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:967 Converting Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([5, 0, 0, 0])), Var(VarId(0)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:331657)\n      at SnarkyConstraintSystemCompat.toJson (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:2252:26)\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:331657)\n      at SnarkyConstraintSystemCompat.toJson (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:2252:26)\n\n    console.log\n        Sparky gates: [object Object],[object Object]\n\n      at Object.<anonymous> (src/test/integration/sparky-vk-comparison.test.ts:141:17)\n\n    console.log\n      \n      Testing testNoReduction:\n\n      at Object.<anonymous> (src/test/integration/sparky-vk-comparison.test.ts:133:17)\n\n    console.log\n      Switching backend from sparky to snarky\n\n      at initializeBindings (dist/node/bindings.js:24:13)\n\n    console.log\n      Loading Snarky backend...\n\n      at initializeBindings (dist/node/bindings.js:67:15)\n\n    console.log\n      ✓ Snarky backend loaded\n\n      at initializeBindings (dist/node/bindings.js:84:15)\n\n    console.log\n        Snarky gates: [object Object],[object Object]\n\n      at Object.<anonymous> (src/test/integration/sparky-vk-comparison.test.ts:137:17)\n\n    console.log\n      Switching backend from snarky to sparky\n\n      at initializeBindings (dist/node/bindings.js:24:13)\n\n    console.log\n      Loading Sparky backend...\n\n      at initializeBindings (dist/node/bindings.js:40:15)\n\n    console.log\n      OCaml backend bridge initialized: false\n\n      at initializeBindings (dist/node/bindings.js:51:15)\n\n    console.log\n      ✓ Sparky backend loaded\n\n      at initializeBindings (dist/node/bindings.js:64:15)\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:967 Converting Add(Add(Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(3)))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(4)))), Scale(FieldElement(BigInt([11037532056220336128, 2469829653914515739, 0, 4611686018427387904])), Var(VarId(6)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n      at SnarkyRunCompat.getConstraintSystem (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3158:26)\n      at dist/node/bindings/sparky-adapter.js:296:35\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n      at SnarkyRunCompat.getConstraintSystem (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3158:26)\n      at dist/node/bindings/sparky-adapter.js:296:35\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:967 Converting Add(Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(3)))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(4)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n      at SnarkyRunCompat.getConstraintSystem (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3158:26)\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n      at SnarkyRunCompat.getConstraintSystem (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3158:26)\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:967 Converting Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(3)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:967 Converting Add(Add(Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(2)))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(6)))), Scale(FieldElement(BigInt([11037532056220336128, 2469829653914515739, 0, 4611686018427387904])), Var(VarId(7)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n      at SnarkyRunCompat.getConstraintSystem (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3158:26)\n      at dist/node/bindings/sparky-adapter.js:296:35\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n      at SnarkyRunCompat.getConstraintSystem (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3158:26)\n      at dist/node/bindings/sparky-adapter.js:296:35\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:967 Converting Add(Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(2)))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(6)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n      at SnarkyRunCompat.getConstraintSystem (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3158:26)\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n      at SnarkyRunCompat.getConstraintSystem (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3158:26)\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:967 Converting Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(2)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:967 Converting Add(Add(Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(1)))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(7)))), Scale(FieldElement(BigInt([11037532056220336128, 2469829653914515739, 0, 4611686018427387904])), Var(VarId(8)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n      at SnarkyRunCompat.getConstraintSystem (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3158:26)\n      at dist/node/bindings/sparky-adapter.js:296:35\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n      at SnarkyRunCompat.getConstraintSystem (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3158:26)\n      at dist/node/bindings/sparky-adapter.js:296:35\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:967 Converting Add(Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(1)))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(7)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n      at SnarkyRunCompat.getConstraintSystem (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3158:26)\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n      at SnarkyRunCompat.getConstraintSystem (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3158:26)\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:967 Converting Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(1)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:967 Converting Add(Add(Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(0)))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(8)))), Scale(FieldElement(BigInt([11037532056220336128, 2469829653914515739, 0, 4611686018427387904])), Var(VarId(9)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n      at SnarkyRunCompat.getConstraintSystem (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3158:26)\n      at dist/node/bindings/sparky-adapter.js:296:35\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n      at SnarkyRunCompat.getConstraintSystem (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3158:26)\n      at dist/node/bindings/sparky-adapter.js:296:35\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:967 Converting Add(Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(0)))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(8)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n      at SnarkyRunCompat.getConstraintSystem (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3158:26)\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n      at SnarkyRunCompat.getConstraintSystem (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3158:26)\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:967 Converting Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(0)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:967 Converting Add(Add(Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(3)))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(4)))), Scale(FieldElement(BigInt([11037532056220336128, 2469829653914515739, 0, 4611686018427387904])), Var(VarId(6)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:331657)\n      at SnarkyConstraintSystemCompat.toJson (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:2252:26)\n      at Object.toJson (dist/node/bindings/sparky-adapter.js:424:48)\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:331657)\n      at SnarkyConstraintSystemCompat.toJson (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:2252:26)\n      at Object.toJson (dist/node/bindings/sparky-adapter.js:424:48)\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:967 Converting Add(Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(3)))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(4)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:331657)\n      at SnarkyConstraintSystemCompat.toJson (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:2252:26)\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:331657)\n      at SnarkyConstraintSystemCompat.toJson (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:2252:26)\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:967 Converting Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(3)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:331657)\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:331657)\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:967 Converting Add(Add(Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(2)))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(6)))), Scale(FieldElement(BigInt([11037532056220336128, 2469829653914515739, 0, 4611686018427387904])), Var(VarId(7)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:331657)\n      at SnarkyConstraintSystemCompat.toJson (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:2252:26)\n      at Object.toJson (dist/node/bindings/sparky-adapter.js:424:48)\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:331657)\n      at SnarkyConstraintSystemCompat.toJson (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:2252:26)\n      at Object.toJson (dist/node/bindings/sparky-adapter.js:424:48)\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:967 Converting Add(Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(2)))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(6)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:331657)\n      at SnarkyConstraintSystemCompat.toJson (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:2252:26)\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:331657)\n      at SnarkyConstraintSystemCompat.toJson (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:2252:26)\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:967 Converting Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(2)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:331657)\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:331657)\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:967 Converting Add(Add(Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(1)))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(7)))), Scale(FieldElement(BigInt([11037532056220336128, 2469829653914515739, 0, 4611686018427387904])), Var(VarId(8)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:331657)\n      at SnarkyConstraintSystemCompat.toJson (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:2252:26)\n      at Object.toJson (dist/node/bindings/sparky-adapter.js:424:48)\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:331657)\n      at SnarkyConstraintSystemCompat.toJson (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:2252:26)\n      at Object.toJson (dist/node/bindings/sparky-adapter.js:424:48)\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:967 Converting Add(Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(1)))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(7)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:331657)\n      at SnarkyConstraintSystemCompat.toJson (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:2252:26)\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:331657)\n      at SnarkyConstraintSystemCompat.toJson (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:2252:26)\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:967 Converting Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(1)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:331657)\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:331657)\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:967 Converting Add(Add(Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(0)))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(8)))), Scale(FieldElement(BigInt([11037532056220336128, 2469829653914515739, 0, 4611686018427387904])), Var(VarId(9)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:331657)\n      at SnarkyConstraintSystemCompat.toJson (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:2252:26)\n      at Object.toJson (dist/node/bindings/sparky-adapter.js:424:48)\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:331657)\n      at SnarkyConstraintSystemCompat.toJson (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:2252:26)\n      at Object.toJson (dist/node/bindings/sparky-adapter.js:424:48)\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:967 Converting Add(Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(0)))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(8)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:331657)\n      at SnarkyConstraintSystemCompat.toJson (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:2252:26)\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:331657)\n      at SnarkyConstraintSystemCompat.toJson (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:2252:26)\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:967 Converting Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([1, 0, 0, 0])), Var(VarId(0)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:331657)\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:331657)\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:967 Converting Add(Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([5, 0, 0, 0])), Var(VarId(0)))), Scale(FieldElement(BigInt([11037532056220336128, 2469829653914515739, 0, 4611686018427387904])), Var(VarId(1)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n      at SnarkyRunCompat.getConstraintSystem (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3158:26)\n      at dist/node/bindings/sparky-adapter.js:296:35\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n      at SnarkyRunCompat.getConstraintSystem (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3158:26)\n      at dist/node/bindings/sparky-adapter.js:296:35\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:967 Converting Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([5, 0, 0, 0])), Var(VarId(0)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n      at SnarkyRunCompat.getConstraintSystem (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3158:26)\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:332586)\n      at SnarkyRunCompat.getConstraintSystem (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3158:26)\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:967 Converting Add(Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([5, 0, 0, 0])), Var(VarId(0)))), Scale(FieldElement(BigInt([11037532056220336128, 2469829653914515739, 0, 4611686018427387904])), Var(VarId(1)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:331657)\n      at SnarkyConstraintSystemCompat.toJson (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:2252:26)\n      at Object.toJson (dist/node/bindings/sparky-adapter.js:424:48)\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:331657)\n      at SnarkyConstraintSystemCompat.toJson (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:2252:26)\n      at Object.toJson (dist/node/bindings/sparky-adapter.js:424:48)\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:967 Converting Add(Constant(FieldElement(BigInt([0, 0, 0, 0]))), Scale(FieldElement(BigInt([5, 0, 0, 0])), Var(VarId(0)))) to wire by using only first term - this loses mathematical information and may cause incorrect constraint generation!\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140162)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:331657)\n      at SnarkyConstraintSystemCompat.toJson (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:2252:26)\n\n    console.error\n      ERROR sparky-core/src/constraint.rs:968 This represents a fundamental design flaw in the constraint-to-wire conversion process\n\n      3330 |\n      3331 | module.exports.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n    > 3332 |     console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n           |             ^\n      3333 | };\n      3334 |\n      3335 | module.exports.__wbg_eval_e10dc02e9547f640 = function() { return handleError(function (arg0, arg1) {\n\n      at Object.<anonymous>.module.exports.__wbg_error_80de38b3f7cc3c3c (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:3332:13)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:120895)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:367502)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140299)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:140315)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:35637)\n      at null.<anonymous> (wasm:/wasm/001aee86:1:331657)\n      at SnarkyConstraintSystemCompat.toJson (dist/node/bindings/compiled/sparky_node/sparky_wasm.cjs:2252:26)\n\n    console.log\n        Sparky gates: [object Object],[object Object],[object Object],[object Object],[object Object],[object Object],[object Object],[object Object],[object Object]\n\n      at Object.<anonymous> (src/test/integration/sparky-vk-comparison.test.ts:141:17)\n\n    console.log\n      Switching backend from sparky to snarky\n\n      at initializeBindings (dist/node/bindings.js:24:13)\n\n    console.log\n      Loading Snarky backend...\n\n      at initializeBindings (dist/node/bindings.js:67:15)\n\n    console.log\n      ✓ Snarky backend loaded\n\n      at initializeBindings (dist/node/bindings.js:84:15)\n\n  ● Sparky vs Snarky VK Comparison › simple program › should generate identical VKs in both backends\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: \"6401445364671635448235458976962864139911822817523080264637631229466657446955\"\n    Received: \"9762594513460233033265114494257809367713715191669121927218041849851847148698\"\n\n      90 |         \n      91 |         // This should fail until VK parity is achieved\n    > 92 |         expect(sparkyHash).toBe(snarkyHash);\n         |                            ^\n      93 |         expect(sparkyVK.data).toBe(snarkyVK.data);\n      94 |         \n      95 |         // Reset to snarky\n\n      at Object.<anonymous> (src/test/integration/sparky-vk-comparison.test.ts:92:28)\n\n  ● Sparky vs Snarky VK Comparison › linearCombination program › should generate identical VKs in both backends\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: \"7721237566173552585813416793150031766168566969432713681715413048663524361279\"\n    Received: \"9762594513460233033265114494257809367713715191669121927218041849851847148698\"\n\n      90 |         \n      91 |         // This should fail until VK parity is achieved\n    > 92 |         expect(sparkyHash).toBe(snarkyHash);\n         |                            ^\n      93 |         expect(sparkyVK.data).toBe(snarkyVK.data);\n      94 |         \n      95 |         // Reset to snarky\n\n      at Object.<anonymous> (src/test/integration/sparky-vk-comparison.test.ts:92:28)\n\n  ● Sparky vs Snarky VK Comparison › complex program › should generate identical VKs in both backends\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: \"9565578752565890628512052588750276534732450784198267106272065236946322158013\"\n    Received: \"11867499267129745800229135440688689358045660975061369629960976926124452804799\"\n\n      90 |         \n      91 |         // This should fail until VK parity is achieved\n    > 92 |         expect(sparkyHash).toBe(snarkyHash);\n         |                            ^\n      93 |         expect(sparkyVK.data).toBe(snarkyVK.data);\n      94 |         \n      95 |         // Reset to snarky\n\n      at Object.<anonymous> (src/test/integration/sparky-vk-comparison.test.ts:92:28)\n\nnode:internal/child_process/serialization:159\n    const string = JSONStringify(message) + '\\n';\n                   ^\n\nRangeError: Invalid string length\n    at stringify (<anonymous>)\n    at writeChannelMessage (node:internal/child_process/serialization:159:20)\n    at process.target._send (node:internal/child_process:852:17)\n    at process.target.send (node:internal/child_process:752:19)\n    at reportSuccess (/home/fizzixnerd/src/o1labs/o1js2/node_modules/jest-worker/build/workers/processChild.js:59:11)\n\nNode.js v22.1.0\n(node:1088796) ExperimentalWarning: VM Modules is an experimental feature and might change at any time\n(Use `node --trace-warnings ...` to show where the warning was created)\nts-jest[versions] (WARN) Version 5.4.5 of typescript installed has not been tested with ts-jest. If you're experiencing issues, consider using a supported version (>=4.3.0 <5.0.0-0). Please do not report issues in ts-jest if you are using unsupported versions.\n\n> o1js@2.6.0 test:sparky\n> NODE_OPTIONS=--experimental-vm-modules npx jest src/test/integration/sparky-*.test.ts\n\nspawnSync /bin/sh ETIMEDOUT",
    "passed": false,
    "duration": 600065,
    "passingTests": 53,
    "failingTests": 0,
    "totalTests": 53,
    "successRate": 100
  },
  "keyFindings": [
    "🎯 VK Parity: 58.3% success rate - some operations already achieve parity",
    "🚨 Critical: Constraint routing bug confirmed - globalThis.__snarky not updated on backend switch",
    "✅ Strong API compatibility: 100.0% of integration tests passing"
  ],
  "prioritizedIssues": [
    "P1: Fix constraint routing bug - globalThis.__snarky not updated when switching to Sparky",
    "P2: Implement reduce_lincom optimization in Sparky to match Snarky constraint efficiency",
    "P3: Debug VK generation differences for complex circuit patterns"
  ],
  "progressSummary": {
    "vkParityRate": 58.333333333333336,
    "featureCompatibilityRate": 100,
    "infrastructureHealth": 0,
    "overallHealth": 92.3076923076923
  }
}