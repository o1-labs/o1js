/**
 * VK (Verification Key) Comparison Test
 * 
 * This test compares verification keys generated by Snarky vs Sparky
 * to check for parity. VK parity is crucial for zkSNARK compatibility.
 */

import { Field, ZkProgram, switchBackend, getCurrentBackend } from '../index.js';

// Simple test circuit for VK comparison
const SimpleCircuit = ZkProgram({
  name: 'SimpleCircuit',
  publicInput: Field,
  
  methods: {
    simpleCheck: {
      privateInputs: [Field],
      
      async method(publicInput: Field, privateInput: Field) {
        // Simple constraint: publicInput = privateInput * 2
        const computed = privateInput.mul(2);
        computed.assertEquals(publicInput);
      }
    }
  }
});

async function compareVKs() {
  console.log('=== Verification Key Comparison: Snarky vs Sparky ===\n');
  
  try {
    // Compile with Snarky (default backend)
    console.log('Compiling with Snarky backend...');
    const { verificationKey: snarkyVK } = await SimpleCircuit.compile();
    console.log('Snarky VK obtained');
    
    // Try to switch to Sparky if available
    try {
      console.log('\nSwitching to Sparky backend...');
      await switchBackend('sparky');
      console.log('Current backend:', getCurrentBackend());
      
      // Compile with Sparky
      console.log('Compiling with Sparky backend...');
      const { verificationKey: sparkyVK } = await SimpleCircuit.compile();
      console.log('Sparky VK obtained');
      
      // Compare VKs
      console.log('\n--- VK Comparison ---');
      console.log('Snarky VK hash:', snarkyVK.hash);
      console.log('Sparky VK hash:', sparkyVK.hash);
      
      if (snarkyVK.hash === sparkyVK.hash) {
        console.log('\n✅ VKs MATCH! Perfect parity achieved!');
      } else {
        console.log('\n❌ VKs DO NOT MATCH');
        
        // Detailed comparison
        console.log('\nDetailed VK structure comparison:');
        console.log('Snarky VK data length:', snarkyVK.data.length);
        console.log('Sparky VK data length:', sparkyVK.data.length);
        
        // Show first few bytes of data for debugging
        console.log('\nFirst 200 chars of Snarky VK data:', snarkyVK.data.substring(0, 200));
        console.log('First 200 chars of Sparky VK data:', sparkyVK.data.substring(0, 200));
      }
      
      // Switch back to Snarky
      await switchBackend('snarky');
      
    } catch (e) {
      console.error('Error with Sparky backend:', e);
    }
    
  } catch (e) {
    console.error('Error during VK comparison:', e);
  }
}

// Run the comparison
compareVKs().then(() => {
  console.log('\nVK comparison complete.');
}).catch(console.error);