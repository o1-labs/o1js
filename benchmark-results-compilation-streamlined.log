🚀 Final ZkProgram No-Cache Compilation Benchmark
=================================================
Testing TRUE compilation performance (no cache interference)
✅ Modules loaded

🔵 Phase 1: Snarky Backend (Fresh Compilation)

🔧 Snarky Backend (NO CACHE)
==================================================
Loading Snarky backend...
✓ Snarky backend loaded
✅ Active: snarky

📊 Simple with Snarky (NO CACHE)
Snarky Simple: 20.852s
✅ Simple: 20.85s

📊 Gadgets with Snarky (NO CACHE)
Snarky Gadgets: 19.601s
✅ Gadgets: 19.60s

📊 Poseidon with Snarky (NO CACHE)
Snarky Poseidon: 8.076s
✅ Poseidon: 8.08s

📊 Complex with Snarky (NO CACHE)
Snarky Complex: 8.471s
✅ Complex: 8.47s

🧹 Clearing state...

⚡ Phase 2: Sparky Backend (Fresh Compilation)

🔧 Sparky Backend (NO CACHE)
==================================================
Switching backend from snarky to sparky
Loading Sparky backend...
[SPARKY] Node.js WASM module loaded (self-initialized)
✓ Sparky backend loaded
✅ Active: sparky

📊 Simple with Sparky (NO CACHE)
Sparky Simple: 5.153s
✅ Simple: 5.15s

📊 Gadgets with Sparky (NO CACHE)
❌ Gadgets failed: Snarky.gates.rotate is not a function

📊 Poseidon with Sparky (NO CACHE)
🔍 [POSEIDON DEBUG] poseidon.update() called
   State fields count: 3
   Input fields count: 3
   State field types: [ '[0, ...]', '[0, ...]', '[0, ...]' ]
   Input field types: [ '[1, ...]', '[1, ...]', '[0, ...]' ]
   isConstant(state): true
   isConstant(input): false
🔥 [WASM] Using Sparky WASM boundary crossing - VARIABLES DETECTED
   This should be slower due to WASM overhead!
🔍 [POSEIDON DEBUG] poseidon.update() called
   State fields count: 3
   Input fields count: 3
   State field types: [ '[0, ...]', '[0, ...]', '[0, ...]' ]
   Input field types: [ '[2, ...]', '[1, ...]', '[0, ...]' ]
   isConstant(state): true
   isConstant(input): false
🔥 [WASM] Using Sparky WASM boundary crossing - VARIABLES DETECTED
   This should be slower due to WASM overhead!
🔍 [POSEIDON DEBUG] poseidon.update() called
   State fields count: 3
   Input fields count: 3
   State field types: [ '[0, ...]', '[0, ...]', '[0, ...]' ]
   Input field types: [ '[2, ...]', '[1, ...]', '[0, ...]' ]
   isConstant(state): true
   isConstant(input): false
🔥 [WASM] Using Sparky WASM boundary crossing - VARIABLES DETECTED
   This should be slower due to WASM overhead!
🔍 [POSEIDON DEBUG] poseidon.update() called
   State fields count: 3
   Input fields count: 3
   State field types: [ '[0, ...]', '[0, ...]', '[0, ...]' ]
   Input field types: [ '[2, ...]', '[1, ...]', '[0, ...]' ]
   isConstant(state): true
   isConstant(input): false
🔥 [WASM] Using Sparky WASM boundary crossing - VARIABLES DETECTED
   This should be slower due to WASM overhead!
🔍 [POSEIDON DEBUG] poseidon.update() called
   State fields count: 3
   Input fields count: 3
   State field types: [ '[0, ...]', '[0, ...]', '[0, ...]' ]
   Input field types: [ '[2, ...]', '[1, ...]', '[0, ...]' ]
   isConstant(state): true
   isConstant(input): false
🔥 [WASM] Using Sparky WASM boundary crossing - VARIABLES DETECTED
   This should be slower due to WASM overhead!
🔍 [POSEIDON DEBUG] poseidon.update() called
   State fields count: 3
   Input fields count: 3
   State field types: [ '[0, ...]', '[0, ...]', '[0, ...]' ]
   Input field types: [ '[2, ...]', '[1, ...]', '[0, ...]' ]
   isConstant(state): true
   isConstant(input): false
🔥 [WASM] Using Sparky WASM boundary crossing - VARIABLES DETECTED
   This should be slower due to WASM overhead!
🔍 [POSEIDON DEBUG] poseidon.update() called
   State fields count: 3
   Input fields count: 3
   State field types: [ '[0, ...]', '[0, ...]', '[0, ...]' ]
   Input field types: [ '[2, ...]', '[1, ...]', '[0, ...]' ]
   isConstant(state): true
   isConstant(input): false
🔥 [WASM] Using Sparky WASM boundary crossing - VARIABLES DETECTED
   This should be slower due to WASM overhead!
🔍 [POSEIDON DEBUG] poseidon.update() called
   State fields count: 3
   Input fields count: 3
   State field types: [ '[0, ...]', '[0, ...]', '[0, ...]' ]
   Input field types: [ '[2, ...]', '[1, ...]', '[0, ...]' ]
   isConstant(state): true
   isConstant(input): false
🔥 [WASM] Using Sparky WASM boundary crossing - VARIABLES DETECTED
   This should be slower due to WASM overhead!
🔍 [POSEIDON DEBUG] poseidon.update() called
   State fields count: 3
   Input fields count: 3
   State field types: [ '[0, ...]', '[0, ...]', '[0, ...]' ]
   Input field types: [ '[1, ...]', '[1, ...]', '[0, ...]' ]
   isConstant(state): true
   isConstant(input): false
🔥 [WASM] Using Sparky WASM boundary crossing - VARIABLES DETECTED
   This should be slower due to WASM overhead!
🔍 [POSEIDON DEBUG] poseidon.update() called
   State fields count: 3
   Input fields count: 3
   State field types: [ '[0, ...]', '[0, ...]', '[0, ...]' ]
   Input field types: [ '[2, ...]', '[1, ...]', '[0, ...]' ]
   isConstant(state): true
   isConstant(input): false
🔥 [WASM] Using Sparky WASM boundary crossing - VARIABLES DETECTED
   This should be slower due to WASM overhead!
🔍 [POSEIDON DEBUG] poseidon.update() called
   State fields count: 3
   Input fields count: 3
   State field types: [ '[0, ...]', '[0, ...]', '[0, ...]' ]
   Input field types: [ '[2, ...]', '[1, ...]', '[0, ...]' ]
   isConstant(state): true
   isConstant(input): false
🔥 [WASM] Using Sparky WASM boundary crossing - VARIABLES DETECTED
   This should be slower due to WASM overhead!
🔍 [POSEIDON DEBUG] poseidon.update() called
   State fields count: 3
   Input fields count: 3
   State field types: [ '[0, ...]', '[0, ...]', '[0, ...]' ]
   Input field types: [ '[2, ...]', '[1, ...]', '[0, ...]' ]
   isConstant(state): true
   isConstant(input): false
🔥 [WASM] Using Sparky WASM boundary crossing - VARIABLES DETECTED
   This should be slower due to WASM overhead!
🔍 [POSEIDON DEBUG] poseidon.update() called
   State fields count: 3
   Input fields count: 3
   State field types: [ '[0, ...]', '[0, ...]', '[0, ...]' ]
   Input field types: [ '[2, ...]', '[1, ...]', '[0, ...]' ]
   isConstant(state): true
   isConstant(input): false
🔥 [WASM] Using Sparky WASM boundary crossing - VARIABLES DETECTED
   This should be slower due to WASM overhead!
🔍 [POSEIDON DEBUG] poseidon.update() called
   State fields count: 3
   Input fields count: 3
   State field types: [ '[0, ...]', '[0, ...]', '[0, ...]' ]
   Input field types: [ '[2, ...]', '[1, ...]', '[0, ...]' ]
   isConstant(state): true
   isConstant(input): false
🔥 [WASM] Using Sparky WASM boundary crossing - VARIABLES DETECTED
   This should be slower due to WASM overhead!
🔍 [POSEIDON DEBUG] poseidon.update() called
   State fields count: 3
   Input fields count: 3
   State field types: [ '[0, ...]', '[0, ...]', '[0, ...]' ]
   Input field types: [ '[2, ...]', '[1, ...]', '[0, ...]' ]
   isConstant(state): true
   isConstant(input): false
🔥 [WASM] Using Sparky WASM boundary crossing - VARIABLES DETECTED
   This should be slower due to WASM overhead!
🔍 [POSEIDON DEBUG] poseidon.update() called
   State fields count: 3
   Input fields count: 3
   State field types: [ '[0, ...]', '[0, ...]', '[0, ...]' ]
   Input field types: [ '[2, ...]', '[1, ...]', '[0, ...]' ]
   isConstant(state): true
   isConstant(input): false
🔥 [WASM] Using Sparky WASM boundary crossing - VARIABLES DETECTED
   This should be slower due to WASM overhead!
🔍 [POSEIDON DEBUG] poseidon.update() called
   State fields count: 3
   Input fields count: 3
   State field types: [ '[0, ...]', '[0, ...]', '[0, ...]' ]
   Input field types: [ '[1, ...]', '[1, ...]', '[0, ...]' ]
   isConstant(state): true
   isConstant(input): false
🔥 [WASM] Using Sparky WASM boundary crossing - VARIABLES DETECTED
   This should be slower due to WASM overhead!
🔍 [POSEIDON DEBUG] poseidon.update() called
   State fields count: 3
   Input fields count: 3
   State field types: [ '[0, ...]', '[0, ...]', '[0, ...]' ]
   Input field types: [ '[2, ...]', '[1, ...]', '[0, ...]' ]
   isConstant(state): true
   isConstant(input): false
🔥 [WASM] Using Sparky WASM boundary crossing - VARIABLES DETECTED
   This should be slower due to WASM overhead!
🔍 [POSEIDON DEBUG] poseidon.update() called
   State fields count: 3
   Input fields count: 3
   State field types: [ '[0, ...]', '[0, ...]', '[0, ...]' ]
   Input field types: [ '[2, ...]', '[1, ...]', '[0, ...]' ]
   isConstant(state): true
   isConstant(input): false
🔥 [WASM] Using Sparky WASM boundary crossing - VARIABLES DETECTED
   This should be slower due to WASM overhead!
🔍 [POSEIDON DEBUG] poseidon.update() called
   State fields count: 3
   Input fields count: 3
   State field types: [ '[0, ...]', '[0, ...]', '[0, ...]' ]
   Input field types: [ '[2, ...]', '[1, ...]', '[0, ...]' ]
   isConstant(state): true
   isConstant(input): false
🔥 [WASM] Using Sparky WASM boundary crossing - VARIABLES DETECTED
   This should be slower due to WASM overhead!
🔍 [POSEIDON DEBUG] poseidon.update() called
   State fields count: 3
   Input fields count: 3
   State field types: [ '[0, ...]', '[0, ...]', '[0, ...]' ]
   Input field types: [ '[2, ...]', '[1, ...]', '[0, ...]' ]
   isConstant(state): true
   isConstant(input): false
🔥 [WASM] Using Sparky WASM boundary crossing - VARIABLES DETECTED
   This should be slower due to WASM overhead!
🔍 [POSEIDON DEBUG] poseidon.update() called
   State fields count: 3
   Input fields count: 3
   State field types: [ '[0, ...]', '[0, ...]', '[0, ...]' ]
   Input field types: [ '[2, ...]', '[1, ...]', '[0, ...]' ]
   isConstant(state): true
   isConstant(input): false
🔥 [WASM] Using Sparky WASM boundary crossing - VARIABLES DETECTED
   This should be slower due to WASM overhead!
🔍 [POSEIDON DEBUG] poseidon.update() called
   State fields count: 3
   Input fields count: 3
   State field types: [ '[0, ...]', '[0, ...]', '[0, ...]' ]
   Input field types: [ '[2, ...]', '[1, ...]', '[0, ...]' ]
   isConstant(state): true
   isConstant(input): false
🔥 [WASM] Using Sparky WASM boundary crossing - VARIABLES DETECTED
   This should be slower due to WASM overhead!
🔍 [POSEIDON DEBUG] poseidon.update() called
   State fields count: 3
   Input fields count: 3
   State field types: [ '[0, ...]', '[0, ...]', '[0, ...]' ]
   Input field types: [ '[2, ...]', '[1, ...]', '[0, ...]' ]
   isConstant(state): true
   isConstant(input): false
🔥 [WASM] Using Sparky WASM boundary crossing - VARIABLES DETECTED
   This should be slower due to WASM overhead!
Sparky Poseidon: 4.827s
✅ Poseidon: 4.83s

📊 Complex with Sparky (NO CACHE)
❌ Complex failed: Snarky.gates.xor is not a function

================================================================================
🚀 FINAL NO-CACHE COMPILATION BENCHMARK RESULTS
================================================================================

| Program  | Snarky (no cache) | Sparky (no cache) | Speedup | Time Saved |
|----------|-------------------|-------------------|---------|------------|
| Simple   |             20.85s |              5.15s |    4.05x |      15.70s |
| Gadgets  |            19.60s |            FAILED |     N/A |      N/A |
| Poseidon |              8.08s |              4.83s |    1.67x |       3.25s |
| Complex  |             8.47s |            FAILED |     N/A |      N/A |

📈 PERFORMANCE SUMMARY:
🚀 Average Speedup: 2.86x
⚡ Max Speedup: 4.05x
💰 Total Time Saved: 18.9s per full compilation cycle
⏰ Time Saved Per Day: 3.2 minutes (assuming 10 rebuilds)

🎯 DEVELOPMENT IMPACT:
✅ Solid 2.9x speedup for development!
📊 Success Rate: 2/4 programs tested

⚠️  NOTE: All caching disabled for accurate performance comparison
🔬 These are TRUE compilation performance differences

🎉 Benchmark completed successfully!
