🧪 VARIABLE vs CONSTANT OPTIMIZATION VALIDATION
══════════════════════════════════════════════════════════════════════
Validating Poseidon constant optimization by comparing:
• Constant operations (should be optimized)
• Variable operations (should show original performance gap)
\n📦 Loading o1js modules...
✓ o1js modules loaded successfully
\n🔧 Initializing o1js bindings...
Loading Snarky backend...
✓ Snarky backend loaded
✓ Bindings initialized successfully
\n🏗️  Creating ZkPrograms...
✓ Programs created (constant and variable versions)
\n📝 Generating test data...
✓ Test data generated
\n🔥 === SPARKY BACKEND BENCHMARKS ===
Switching backend from snarky to sparky
Loading Sparky backend...
[SPARKY] Node.js WASM module loaded (self-initialized)
✓ Sparky backend loaded

📊 Benchmarking Sparky Constants with SPARKY
──────────────────────────────────────────────────
🔥 Warmup compilation...
[CONSTANT] Running constant operations - should trigger PoseidonBigint optimization
[CONSTANT] Running constant operations - should trigger PoseidonBigint optimization
[CONSTANT] Running constant operations - should trigger PoseidonBigint optimization
   Warmup completed in 20968.10ms
⏱️  Running 3 benchmark rounds...
[CONSTANT] Running constant operations - should trigger PoseidonBigint optimization
[CONSTANT] Running constant operations - should trigger PoseidonBigint optimization
[CONSTANT] Running constant operations - should trigger PoseidonBigint optimization
   Round 1: 5170.21ms
[CONSTANT] Running constant operations - should trigger PoseidonBigint optimization
[CONSTANT] Running constant operations - should trigger PoseidonBigint optimization
[CONSTANT] Running constant operations - should trigger PoseidonBigint optimization
   Round 2: 4664.67ms
[CONSTANT] Running constant operations - should trigger PoseidonBigint optimization
[CONSTANT] Running constant operations - should trigger PoseidonBigint optimization
[CONSTANT] Running constant operations - should trigger PoseidonBigint optimization
   Round 3: 4959.05ms

📊 Benchmarking Sparky Variables with SPARKY
──────────────────────────────────────────────────
🔥 Warmup compilation...
[VARIABLE] Running variable operations - should bypass PoseidonBigint optimization
🔍 [POSEIDON DEBUG] poseidon.update() called
   State fields count: 3
   Input fields count: 2
   State field types: [ '[0, ...]', '[0, ...]', '[0, ...]' ]
   Input field types: [ '[1, ...]', '[1, ...]' ]
   isConstant(state): true
   isConstant(input): false
🔥 [WASM] Using Sparky WASM boundary crossing - VARIABLES DETECTED
   This should be slower due to WASM overhead!
🔍 [POSEIDON DEBUG] poseidon.update() called
   State fields count: 3
   Input fields count: 2
   State field types: [ '[0, ...]', '[0, ...]', '[0, ...]' ]
   Input field types: [ '[1, ...]', '[1, ...]' ]
   isConstant(state): true
   isConstant(input): false
🔥 [WASM] Using Sparky WASM boundary crossing - VARIABLES DETECTED
   This should be slower due to WASM overhead!
🔍 [POSEIDON DEBUG] poseidon.update() called
   State fields count: 3
   Input fields count: 2
   State field types: [ '[0, ...]', '[0, ...]', '[0, ...]' ]
   Input field types: [ '[2, ...]', '[1, ...]' ]
   isConstant(state): true
   isConstant(input): false
🔥 [WASM] Using Sparky WASM boundary crossing - VARIABLES DETECTED
   This should be slower due to WASM overhead!
[VARIABLE] Running variable operations - should bypass PoseidonBigint optimization
🔍 [POSEIDON DEBUG] poseidon.update() called
   State fields count: 3
   Input fields count: 2
   State field types: [ '[0, ...]', '[0, ...]', '[0, ...]' ]
   Input field types: [ '[1, ...]', '[1, ...]' ]
   isConstant(state): true
   isConstant(input): false
🔥 [WASM] Using Sparky WASM boundary crossing - VARIABLES DETECTED
   This should be slower due to WASM overhead!
🔍 [POSEIDON DEBUG] poseidon.update() called
   State fields count: 3
   Input fields count: 2
   State field types: [ '[0, ...]', '[0, ...]', '[0, ...]' ]
   Input field types: [ '[1, ...]', '[1, ...]' ]
   isConstant(state): true
   isConstant(input): false
🔥 [WASM] Using Sparky WASM boundary crossing - VARIABLES DETECTED
   This should be slower due to WASM overhead!
🔍 [POSEIDON DEBUG] poseidon.update() called
   State fields count: 3
   Input fields count: 2
   State field types: [ '[0, ...]', '[0, ...]', '[0, ...]' ]
   Input field types: [ '[2, ...]', '[1, ...]' ]
   isConstant(state): true
   isConstant(input): false
🔥 [WASM] Using Sparky WASM boundary crossing - VARIABLES DETECTED
   This should be slower due to WASM overhead!
[VARIABLE] Running variable operations - should bypass PoseidonBigint optimization
🔍 [POSEIDON DEBUG] poseidon.update() called
   State fields count: 3
   Input fields count: 2
   State field types: [ '[0, ...]', '[0, ...]', '[0, ...]' ]
   Input field types: [ '[1, ...]', '[1, ...]' ]
   isConstant(state): true
   isConstant(input): false
🔥 [WASM] Using Sparky WASM boundary crossing - VARIABLES DETECTED
   This should be slower due to WASM overhead!
🔍 [POSEIDON DEBUG] poseidon.update() called
   State fields count: 3
   Input fields count: 2
   State field types: [ '[0, ...]', '[0, ...]', '[0, ...]' ]
   Input field types: [ '[1, ...]', '[1, ...]' ]
   isConstant(state): true
   isConstant(input): false
🔥 [WASM] Using Sparky WASM boundary crossing - VARIABLES DETECTED
   This should be slower due to WASM overhead!
🔍 [POSEIDON DEBUG] poseidon.update() called
   State fields count: 3
   Input fields count: 2
   State field types: [ '[0, ...]', '[0, ...]', '[0, ...]' ]
   Input field types: [ '[2, ...]', '[1, ...]' ]
   isConstant(state): true
   isConstant(input): false
🔥 [WASM] Using Sparky WASM boundary crossing - VARIABLES DETECTED
   This should be slower due to WASM overhead!
   Warmup completed in 4920.61ms
⏱️  Running 3 benchmark rounds...
[VARIABLE] Running variable operations - should bypass PoseidonBigint optimization
🔍 [POSEIDON DEBUG] poseidon.update() called
   State fields count: 3
   Input fields count: 2
   State field types: [ '[0, ...]', '[0, ...]', '[0, ...]' ]
   Input field types: [ '[1, ...]', '[1, ...]' ]
   isConstant(state): true
   isConstant(input): false
🔥 [WASM] Using Sparky WASM boundary crossing - VARIABLES DETECTED
   This should be slower due to WASM overhead!
🔍 [POSEIDON DEBUG] poseidon.update() called
   State fields count: 3
   Input fields count: 2
   State field types: [ '[0, ...]', '[0, ...]', '[0, ...]' ]
   Input field types: [ '[1, ...]', '[1, ...]' ]
   isConstant(state): true
   isConstant(input): false
🔥 [WASM] Using Sparky WASM boundary crossing - VARIABLES DETECTED
   This should be slower due to WASM overhead!
🔍 [POSEIDON DEBUG] poseidon.update() called
   State fields count: 3
   Input fields count: 2
   State field types: [ '[0, ...]', '[0, ...]', '[0, ...]' ]
   Input field types: [ '[2, ...]', '[1, ...]' ]
   isConstant(state): true
   isConstant(input): false
🔥 [WASM] Using Sparky WASM boundary crossing - VARIABLES DETECTED
   This should be slower due to WASM overhead!
[VARIABLE] Running variable operations - should bypass PoseidonBigint optimization
🔍 [POSEIDON DEBUG] poseidon.update() called
   State fields count: 3
   Input fields count: 2
   State field types: [ '[0, ...]', '[0, ...]', '[0, ...]' ]
   Input field types: [ '[1, ...]', '[1, ...]' ]
   isConstant(state): true
   isConstant(input): false
🔥 [WASM] Using Sparky WASM boundary crossing - VARIABLES DETECTED
   This should be slower due to WASM overhead!
🔍 [POSEIDON DEBUG] poseidon.update() called
   State fields count: 3
   Input fields count: 2
   State field types: [ '[0, ...]', '[0, ...]', '[0, ...]' ]
   Input field types: [ '[1, ...]', '[1, ...]' ]
   isConstant(state): true
   isConstant(input): false
🔥 [WASM] Using Sparky WASM boundary crossing - VARIABLES DETECTED
   This should be slower due to WASM overhead!
🔍 [POSEIDON DEBUG] poseidon.update() called
   State fields count: 3
   Input fields count: 2
   State field types: [ '[0, ...]', '[0, ...]', '[0, ...]' ]
   Input field types: [ '[2, ...]', '[1, ...]' ]
   isConstant(state): true
   isConstant(input): false
🔥 [WASM] Using Sparky WASM boundary crossing - VARIABLES DETECTED
   This should be slower due to WASM overhead!
[VARIABLE] Running variable operations - should bypass PoseidonBigint optimization
🔍 [POSEIDON DEBUG] poseidon.update() called
   State fields count: 3
   Input fields count: 2
   State field types: [ '[0, ...]', '[0, ...]', '[0, ...]' ]
   Input field types: [ '[1, ...]', '[1, ...]' ]
   isConstant(state): true
   isConstant(input): false
🔥 [WASM] Using Sparky WASM boundary crossing - VARIABLES DETECTED
   This should be slower due to WASM overhead!
🔍 [POSEIDON DEBUG] poseidon.update() called
   State fields count: 3
   Input fields count: 2
   State field types: [ '[0, ...]', '[0, ...]', '[0, ...]' ]
   Input field types: [ '[1, ...]', '[1, ...]' ]
   isConstant(state): true
   isConstant(input): false
🔥 [WASM] Using Sparky WASM boundary crossing - VARIABLES DETECTED
   This should be slower due to WASM overhead!
🔍 [POSEIDON DEBUG] poseidon.update() called
   State fields count: 3
   Input fields count: 2
   State field types: [ '[0, ...]', '[0, ...]', '[0, ...]' ]
   Input field types: [ '[2, ...]', '[1, ...]' ]
   isConstant(state): true
   isConstant(input): false
🔥 [WASM] Using Sparky WASM boundary crossing - VARIABLES DETECTED
   This should be slower due to WASM overhead!
   Round 1: 4984.93ms
[VARIABLE] Running variable operations - should bypass PoseidonBigint optimization
🔍 [POSEIDON DEBUG] poseidon.update() called
   State fields count: 3
   Input fields count: 2
   State field types: [ '[0, ...]', '[0, ...]', '[0, ...]' ]
   Input field types: [ '[1, ...]', '[1, ...]' ]
   isConstant(state): true
   isConstant(input): false
🔥 [WASM] Using Sparky WASM boundary crossing - VARIABLES DETECTED
   This should be slower due to WASM overhead!
🔍 [POSEIDON DEBUG] poseidon.update() called
   State fields count: 3
   Input fields count: 2
   State field types: [ '[0, ...]', '[0, ...]', '[0, ...]' ]
   Input field types: [ '[1, ...]', '[1, ...]' ]
   isConstant(state): true
   isConstant(input): false
🔥 [WASM] Using Sparky WASM boundary crossing - VARIABLES DETECTED
   This should be slower due to WASM overhead!
🔍 [POSEIDON DEBUG] poseidon.update() called
   State fields count: 3
   Input fields count: 2
   State field types: [ '[0, ...]', '[0, ...]', '[0, ...]' ]
   Input field types: [ '[2, ...]', '[1, ...]' ]
   isConstant(state): true
   isConstant(input): false
🔥 [WASM] Using Sparky WASM boundary crossing - VARIABLES DETECTED
   This should be slower due to WASM overhead!
[VARIABLE] Running variable operations - should bypass PoseidonBigint optimization
🔍 [POSEIDON DEBUG] poseidon.update() called
   State fields count: 3
   Input fields count: 2
   State field types: [ '[0, ...]', '[0, ...]', '[0, ...]' ]
   Input field types: [ '[1, ...]', '[1, ...]' ]
   isConstant(state): true
   isConstant(input): false
🔥 [WASM] Using Sparky WASM boundary crossing - VARIABLES DETECTED
   This should be slower due to WASM overhead!
🔍 [POSEIDON DEBUG] poseidon.update() called
   State fields count: 3
   Input fields count: 2
   State field types: [ '[0, ...]', '[0, ...]', '[0, ...]' ]
   Input field types: [ '[1, ...]', '[1, ...]' ]
   isConstant(state): true
   isConstant(input): false
🔥 [WASM] Using Sparky WASM boundary crossing - VARIABLES DETECTED
   This should be slower due to WASM overhead!
🔍 [POSEIDON DEBUG] poseidon.update() called
   State fields count: 3
   Input fields count: 2
   State field types: [ '[0, ...]', '[0, ...]', '[0, ...]' ]
   Input field types: [ '[2, ...]', '[1, ...]' ]
   isConstant(state): true
   isConstant(input): false
🔥 [WASM] Using Sparky WASM boundary crossing - VARIABLES DETECTED
   This should be slower due to WASM overhead!
[VARIABLE] Running variable operations - should bypass PoseidonBigint optimization
🔍 [POSEIDON DEBUG] poseidon.update() called
   State fields count: 3
   Input fields count: 2
   State field types: [ '[0, ...]', '[0, ...]', '[0, ...]' ]
   Input field types: [ '[1, ...]', '[1, ...]' ]
   isConstant(state): true
   isConstant(input): false
🔥 [WASM] Using Sparky WASM boundary crossing - VARIABLES DETECTED
   This should be slower due to WASM overhead!
🔍 [POSEIDON DEBUG] poseidon.update() called
   State fields count: 3
   Input fields count: 2
   State field types: [ '[0, ...]', '[0, ...]', '[0, ...]' ]
   Input field types: [ '[1, ...]', '[1, ...]' ]
   isConstant(state): true
   isConstant(input): false
🔥 [WASM] Using Sparky WASM boundary crossing - VARIABLES DETECTED
   This should be slower due to WASM overhead!
🔍 [POSEIDON DEBUG] poseidon.update() called
   State fields count: 3
   Input fields count: 2
   State field types: [ '[0, ...]', '[0, ...]', '[0, ...]' ]
   Input field types: [ '[2, ...]', '[1, ...]' ]
   isConstant(state): true
   isConstant(input): false
🔥 [WASM] Using Sparky WASM boundary crossing - VARIABLES DETECTED
   This should be slower due to WASM overhead!
   Round 2: 4985.94ms
[VARIABLE] Running variable operations - should bypass PoseidonBigint optimization
🔍 [POSEIDON DEBUG] poseidon.update() called
   State fields count: 3
   Input fields count: 2
   State field types: [ '[0, ...]', '[0, ...]', '[0, ...]' ]
   Input field types: [ '[1, ...]', '[1, ...]' ]
   isConstant(state): true
   isConstant(input): false
🔥 [WASM] Using Sparky WASM boundary crossing - VARIABLES DETECTED
   This should be slower due to WASM overhead!
🔍 [POSEIDON DEBUG] poseidon.update() called
   State fields count: 3
   Input fields count: 2
   State field types: [ '[0, ...]', '[0, ...]', '[0, ...]' ]
   Input field types: [ '[1, ...]', '[1, ...]' ]
   isConstant(state): true
   isConstant(input): false
🔥 [WASM] Using Sparky WASM boundary crossing - VARIABLES DETECTED
   This should be slower due to WASM overhead!
🔍 [POSEIDON DEBUG] poseidon.update() called
   State fields count: 3
   Input fields count: 2
   State field types: [ '[0, ...]', '[0, ...]', '[0, ...]' ]
   Input field types: [ '[2, ...]', '[1, ...]' ]
   isConstant(state): true
   isConstant(input): false
🔥 [WASM] Using Sparky WASM boundary crossing - VARIABLES DETECTED
   This should be slower due to WASM overhead!
[VARIABLE] Running variable operations - should bypass PoseidonBigint optimization
🔍 [POSEIDON DEBUG] poseidon.update() called
   State fields count: 3
   Input fields count: 2
   State field types: [ '[0, ...]', '[0, ...]', '[0, ...]' ]
   Input field types: [ '[1, ...]', '[1, ...]' ]
   isConstant(state): true
   isConstant(input): false
🔥 [WASM] Using Sparky WASM boundary crossing - VARIABLES DETECTED
   This should be slower due to WASM overhead!
🔍 [POSEIDON DEBUG] poseidon.update() called
   State fields count: 3
   Input fields count: 2
   State field types: [ '[0, ...]', '[0, ...]', '[0, ...]' ]
   Input field types: [ '[1, ...]', '[1, ...]' ]
   isConstant(state): true
   isConstant(input): false
🔥 [WASM] Using Sparky WASM boundary crossing - VARIABLES DETECTED
   This should be slower due to WASM overhead!
🔍 [POSEIDON DEBUG] poseidon.update() called
   State fields count: 3
   Input fields count: 2
   State field types: [ '[0, ...]', '[0, ...]', '[0, ...]' ]
   Input field types: [ '[2, ...]', '[1, ...]' ]
   isConstant(state): true
   isConstant(input): false
🔥 [WASM] Using Sparky WASM boundary crossing - VARIABLES DETECTED
   This should be slower due to WASM overhead!
[VARIABLE] Running variable operations - should bypass PoseidonBigint optimization
🔍 [POSEIDON DEBUG] poseidon.update() called
   State fields count: 3
   Input fields count: 2
   State field types: [ '[0, ...]', '[0, ...]', '[0, ...]' ]
   Input field types: [ '[1, ...]', '[1, ...]' ]
   isConstant(state): true
   isConstant(input): false
🔥 [WASM] Using Sparky WASM boundary crossing - VARIABLES DETECTED
   This should be slower due to WASM overhead!
🔍 [POSEIDON DEBUG] poseidon.update() called
   State fields count: 3
   Input fields count: 2
   State field types: [ '[0, ...]', '[0, ...]', '[0, ...]' ]
   Input field types: [ '[1, ...]', '[1, ...]' ]
   isConstant(state): true
   isConstant(input): false
🔥 [WASM] Using Sparky WASM boundary crossing - VARIABLES DETECTED
   This should be slower due to WASM overhead!
🔍 [POSEIDON DEBUG] poseidon.update() called
   State fields count: 3
   Input fields count: 2
   State field types: [ '[0, ...]', '[0, ...]', '[0, ...]' ]
   Input field types: [ '[2, ...]', '[1, ...]' ]
   isConstant(state): true
   isConstant(input): false
🔥 [WASM] Using Sparky WASM boundary crossing - VARIABLES DETECTED
   This should be slower due to WASM overhead!
